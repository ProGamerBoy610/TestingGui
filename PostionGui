local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local gui = Instance.new("ScreenGui")
gui.Name = "StealGUI"
gui.IgnoreGuiInset = true
gui.Parent = player.PlayerGui

-- Adjust for mobile scaling
local scale = math.min(1, math.min(UserInputService:GetDeviceScreenSize().X, UserInputService:GetDeviceScreenSize().Y) / 800)
local guiSize = UDim2.new(0, 200 * scale, 0, 250 * scale)
local buttonSize = UDim2.new(0, 25 * scale, 0, 25 * scale)

-- Main Frame
local frame = Instance.new("Frame")
frame.Size = guiSize
frame.Position = UDim2.new(0.5, -100 * scale, 0.5, -125 * scale)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.ClipsDescendants = true
frame.Parent = gui

-- Draggable
local dragging, dragStart, startPos
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)

frame.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

-- Top Bar
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0, 25 * scale)
topBar.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
topBar.BorderSizePixel = 0
topBar.Parent = frame

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(0.6, 0, 1, 0)
title.Position = UDim2.new(0.05, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Steal Tools"
title.TextColor3 = Color3.fromRGB(180, 180, 180)
title.TextSize = 14 * scale
title.Font = Enum.Font.Gotham
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = topBar

-- Minimize Button
local minimize = Instance.new("TextButton")
minimize.Size = buttonSize
minimize.Position = UDim2.new(0.8, 0, 0, 0)
minimize.BackgroundTransparency = 1
minimize.Text = "-"
minimize.TextColor3 = Color3.fromRGB(180, 180, 180)
minimize.TextSize = 16 * scale
minimize.Font = Enum.Font.Gotham
minimize.Parent = topBar

-- Close Button
local close = Instance.new("TextButton")
close.Size = buttonSize
close.Position = UDim2.new(0.9, 0, 0, 0)
close.BackgroundTransparency = 1
close.Text = "X"
close.TextColor3 = Color3.fromRGB(180, 180, 180)
close.TextSize = 14 * scale
close.Font = Enum.Font.Gotham
close.Parent = topBar

-- Notification Label
local notification = Instance.new("TextLabel")
notification.Size = UDim2.new(1, 0, 0, 20 * scale)
notification.Position = UDim2.new(0, 0, 0, 25 * scale)
notification.BackgroundTransparency = 0.5
notification.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
notification.Text = ""
notification.TextColor3 = Color3.fromRGB(255, 100, 100)
notification.TextSize = 12 * scale
notification.Font = Enum.Font.Gotham
notification.TextTransparency = 1
notification.Parent = frame

local function showNotification(message, color)
    notification.Text = message
    notification.TextColor3 = color or Color3.fromRGB(255, 100, 100)
    notification.TextTransparency = 0
    spawn(function()
        wait(2)
        local tween = TweenService:Create(notification, TweenInfo.new(0.5), {TextTransparency = 1})
        tween:Play()
        tween.Completed:Wait()
        notification.Text = ""
    end)
end

-- Minimize Functionality
local minimized = false
minimize.MouseButton1Click:Connect(function()
    minimized = not minimized
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
    local goal = minimized and {Size = UDim2.new(0, 200 * scale, 0, 25 * scale)} or {Size = guiSize}
    TweenService:Create(frame, tweenInfo, goal):Play()
    minimize.Text = minimized and "+" or "-"
end)

-- Close Functionality
close.MouseButton1Click:Connect(function()
    gui:Destroy()
end)

-- Player Dropdown
local dropdown = Instance.new("TextButton")
dropdown.Size = UDim2.new(0.5, 0, 0, 25 * scale)
dropdown.Position = UDim2.new(0, 0, 0, 45 * scale)
dropdown.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
dropdown.Text = "Select Player"
dropdown.TextColor3 = Color3.fromRGB(180, 180, 180)
dropdown.TextSize = 12 * scale
dropdown.Font = Enum.Font.Gotham
dropdown.Parent = frame

local dropdownFrame = Instance.new("Frame")
dropdownFrame.Size = UDim2.new(0.5, 0, 0, 100 * scale)
dropdownFrame.Position = UDim2.new(0, 0, 0, 70 * scale)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
dropdownFrame.Visible = false
dropdownFrame.ClipsDescendants = true
dropdownFrame.Parent = frame

local dropdownList = Instance.new("ScrollingFrame")
dropdownList.Size = UDim2.new(1, 0, 1, 0)
dropdownList.BackgroundTransparency = 1
dropdownList.ScrollBarThickness = 3
dropdownList.Parent = dropdownFrame

local dropdownUIList = Instance.new("UIListLayout")
dropdownUIList.SortOrder = Enum.SortOrder.LayoutOrder
dropdownUIList.Parent = dropdownList

-- Inventory Display
local inventoryFrame = Instance.new("ScrollingFrame")
inventoryFrame.Size = UDim2.new(0.5, 0, 1, -70 * scale)
inventoryFrame.Position = UDim2.new(0.5, 0, 0, 45 * scale)
inventoryFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
inventoryFrame.ScrollBarThickness = 3
inventoryFrame.Parent = frame

local inventoryList = Instance.new("UIListLayout")
inventoryList.SortOrder = Enum.SortOrder.LayoutOrder
inventoryList.Padding = UDim.new(0, 3 * scale)
inventoryList.Parent = inventoryFrame

-- Steal Button
local stealButton = Instance.new("TextButton")
stealButton.Size = UDim2.new(0.5, 0, 0, 25 * scale)
stealButton.Position = UDim2.new(0.5, 0, 1, -25 * scale)
stealButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
stealButton.Text = "Steal Selected"
stealButton.TextColor3 = Color3.fromRGB(180, 180, 180)
stealButton.TextSize = 12 * scale
stealButton.Font = Enum.Font.Gotham
stealButton.Parent = frame

-- Variables
local selectedPlayer = nil
local selectedItems = {} -- Table to store multiple selected items
local dropdownOpen = false

-- Populate Dropdown
local function updateDropdown()
    for _, v in pairs(dropdownList:GetChildren()) do
        if v:IsA("TextButton") then v:Destroy() end
    end
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, 0, 0, 25 * scale)
            button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            button.Text = p.Name
            button.TextColor3 = Color3.fromRGB(180, 180, 180)
            button.TextSize = 12 * scale
            button.Font = Enum.Font.Gotham
            button.Parent = dropdownList
            button.MouseButton1Click:Connect(function()
                selectedPlayer = p
                dropdown.Text = p.Name
                dropdownFrame.Visible = false
                dropdownOpen = false
                selectedItems = {} -- Reset selected items
                updateInventory()
            end)
        end
    end
    dropdownList.CanvasSize = UDim2.new(0, 0, 0, dropdownUIList.AbsoluteContentSize.Y)
end

-- Update Inventory Display
local function updateInventory()
    for _, v in pairs(inventoryFrame:GetChildren()) do
        if v:IsA("TextButton") then v:Destroy() end
    end
    if selectedPlayer then
        local items = {}
        local backpack = selectedPlayer:FindFirstChild("Backpack")
        local character = selectedPlayer.Character
        if backpack then
            for _, item in pairs(backpack:GetChildren()) do
                if item:IsA("Tool") then
                    table.insert(items, item)
                end
            end
        end
        if character then
            for _, item in pairs(character:GetChildren()) do
                if item:IsA("Tool") then
                    table.insert(items, item)
                end
            end
        end
        if #items == 0 then
            showNotification("No tools found in player's inventory!")
            return
        end
        for _, item in pairs(items) do
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, -6, 0, 25 * scale)
            button.Position = UDim2.new(0, 3, 0, 0)
            button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            button.Text = item.Name
            button.TextColor3 = Color3.fromRGB(180, 180, 180)
            button.TextSize = 12 * scale
            button.Font = Enum.Font.Gotham
            button.Parent = inventoryFrame
            button.MouseButton1Click:Connect(function()
                if table.find(selectedItems, item) then
                    table.remove(selectedItems, table.find(selectedItems, item))
                    button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                else
                    table.insert(selectedItems, item)
                    button.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
                end
            end)
        end
    else
        showNotification("No player selected!")
    end
    inventoryFrame.CanvasSize = UDim2.new(0, 0, 0, inventoryList.AbsoluteContentSize.Y)
end

-- Steal Functionality
stealButton.MouseButton1Click:Connect(function()
    if selectedPlayer and #selectedItems > 0 then
        local success = false
        for _, item in pairs(selectedItems) do
            local success, err = pcall(function()
                local newItem = item:Clone()
                newItem.Parent = player.Backpack
            end)
            if success then
                success = true
            else
                showNotification("Failed to steal " .. item.Name .. ": " .. err)
            end
        end
        if success then
            showNotification("Successfully stole " .. #selectedItems .. " item(s)!", Color3.fromRGB(100, 255, 100))
            selectedItems = {} -- Clear selection
            updateInventory()
        end
    else
        showNotification("Select a player and at least one item!")
    end
end)

-- Dropdown Toggle
dropdown.MouseButton1Click:Connect(function()
    dropdownOpen = not dropdownOpen
    dropdownFrame.Visible = dropdownOpen
end)

-- Update on Player Changes
Players.PlayerAdded:Connect(updateDropdown)
Players.PlayerRemoving:Connect(updateDropdown)
updateDropdown()

-- Modern Look
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 6 * scale)
corner.Parent = frame
local topCorner = Instance.new("UICorner")
topCorner.CornerRadius = UDim.new(0, 6 * scale)
topCorner.Parent = topBar
local dropdownCorner = Instance.new("UICorner")
dropdownCorner.CornerRadius = UDim.new(0, 4 * scale)
dropdownCorner.Parent = dropdown
local dropdownFrameCorner = Instance.new("UICorner")
dropdownFrameCorner.CornerRadius = UDim.new(0, 4 * scale)
dropdownFrameCorner.Parent = dropdownFrame
local inventoryCorner = Instance.new("UICorner")
inventoryCorner.CornerRadius = UDim.new(0, 4 * scale)
inventoryCorner.Parent = inventoryFrame
local stealCorner = Instance.new("UICorner")
stealCorner.CornerRadius = UDim.new(0, 4 * scale)
stealCorner.Parent = stealButton
