-- Fryzer Hub GUI Script for Roblox
-- This script creates a customizable hub GUI with opener, main GUI, tabs, components, and confirmation dialog.

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.Name = "FryzerHub"

-- Opener GUI (2nd GUI): Ball shape with text "Fryzer"
local openerFrame = Instance.new("Frame")
openerFrame.Size = UDim2.new(0, 100, 0, 100)
openerFrame.Position = UDim2.new(0.5, -50, 0.5, -50)
openerFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
openerFrame.BackgroundTransparency = 0.5
openerFrame.BorderSizePixel = 0
openerFrame.Parent = screenGui

local uiCornerOpener = Instance.new("UICorner")
uiCornerOpener.CornerRadius = UDim.new(0.5, 0)
uiCornerOpener.Parent = openerFrame

local openerLabel = Instance.new("TextLabel")
openerLabel.Size = UDim2.new(1, 0, 1, 0)
openerLabel.BackgroundTransparency = 1
openerLabel.Text = "Fryzer"
openerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
openerLabel.TextSize = 20
openerLabel.Font = Enum.Font.GothamBold
openerLabel.Parent = openerFrame

-- Main GUI
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 600, 0, 400)
mainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = screenGui

local uiCornerMain = Instance.new("UICorner")
uiCornerMain.CornerRadius = UDim.new(0, 10)
uiCornerMain.Parent = mainFrame

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local uiCornerTitle = Instance.new("UICorner")
uiCornerTitle.CornerRadius = UDim.new(0, 10)
uiCornerTitle.Parent = titleBar

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -100, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Fryzer Hub"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 24
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -70, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Parent = titleBar

local uiCornerMin = Instance.new("UICorner")
uiCornerMin.Parent = minimizeButton

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Parent = titleBar

local uiCornerClose = Instance.new("UICorner")
uiCornerClose.Parent = closeButton

-- Tabs on Left
local tabsFrame = Instance.new("Frame")
tabsFrame.Size = UDim2.new(0, 150, 1, -40)
tabsFrame.Position = UDim2.new(0, 0, 0, 40)
tabsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
tabsFrame.BorderSizePixel = 0
tabsFrame.Parent = mainFrame

local uiListLayoutTabs = Instance.new("UIListLayout")
uiListLayoutTabs.FillDirection = Enum.FillDirection.Vertical
uiListLayoutTabs.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayoutTabs.Parent = tabsFrame

-- Example Tabs (Customize by adding more)
local function createTab(name)
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(1, 0, 0, 50)
    tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tabButton.Text = name
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.Font = Enum.Font.Gotham
    tabButton.Parent = tabsFrame
    
    local contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Size = UDim2.new(1, -150, 1, -40)
    contentFrame.Position = UDim2.new(0, 150, 0, 40)
    contentFrame.BackgroundTransparency = 1
    contentFrame.ScrollBarThickness = 6
    contentFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Auto adjust
    contentFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    contentFrame.Visible = false
    contentFrame.Parent = mainFrame
    
    local uiListLayoutContent = Instance.new("UIListLayout")
    uiListLayoutContent.FillDirection = Enum.FillDirection.Vertical
    uiListLayoutContent.SortOrder = Enum.SortOrder.LayoutOrder
    uiListLayoutContent.Padding = UDim.new(0, 10)
    uiListLayoutContent.Parent = contentFrame
    
    tabButton.MouseButton1Click:Connect(function()
        for _, child in ipairs(mainFrame:GetChildren()) do
            if child:IsA("ScrollingFrame") then
                child.Visible = false
            end
        end
        contentFrame.Visible = true
    end)
    
    return contentFrame
end

local componentsTab = createTab("Components")

-- Add components to tab (examples, easy to customize)
-- Text Label
local textLabelEx = Instance.new("TextLabel")
textLabelEx.Size = UDim2.new(1, 0, 0, 30)
textLabelEx.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
textLabelEx.Text = "Example Label"
textLabelEx.TextColor3 = Color3.fromRGB(255, 255, 255)
textLabelEx.Parent = componentsTab

-- Button (press green for 1 sec)
local buttonEx = Instance.new("TextButton")
buttonEx.Size = UDim2.new(1, 0, 0, 40)
buttonEx.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
buttonEx.Text = "[] Press Me"
buttonEx.TextColor3 = Color3.fromRGB(255, 255, 255)
buttonEx.Parent = componentsTab

buttonEx.MouseButton1Click:Connect(function()
    buttonEx.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    wait(1)
    buttonEx.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    -- Add your action here
end)

-- Toggle Button
local toggleEx = Instance.new("TextButton")
toggleEx.Size = UDim2.new(1, 0, 0, 40)
toggleEx.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleEx.Text = "Off []"
toggleEx.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleEx.Parent = componentsTab

local toggled = false
toggleEx.MouseButton1Click:Connect(function()
    toggled = not toggled
    if toggled then
        toggleEx.Text = "On [Green]"
        toggleEx.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    else
        toggleEx.Text = "Off []"
        toggleEx.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    end
    -- Add your toggle action here
end)

-- Slider (draggable on PC/mobile)
local sliderFrame = Instance.new("Frame")
sliderFrame.Size = UDim2.new(1, 0, 0, 40)
sliderFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
sliderFrame.Parent = componentsTab

local sliderBar = Instance.new("Frame")
sliderBar.Size = UDim2.new(1, -20, 0, 10)
sliderBar.Position = UDim2.new(0, 10, 0.5, -5)
sliderBar.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
sliderBar.Parent = sliderFrame

local sliderHandle = Instance.new("Frame")
sliderHandle.Size = UDim2.new(0, 20, 0, 20)
sliderHandle.Position = UDim2.new(0, 0, 0.5, -10)
sliderHandle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sliderHandle.Parent = sliderFrame

local uiCornerSlider = Instance.new("UICorner")
uiCornerSlider.Parent = sliderHandle

local dragging = false
local value = 0

sliderHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

RunService.RenderStepped:Connect(function()
    if dragging then
        local mousePos = UserInputService:GetMouseLocation()
        local relPos = mousePos - sliderFrame.AbsolutePosition
        value = math.clamp(relPos.X / sliderFrame.AbsoluteSize.X, 0, 1)
        sliderHandle.Position = UDim2.new(value, -10, 0.5, -10)
        -- Use value (0-1) for your logic
    end
end)

-- TextBox
local textBoxEx = Instance.new("TextBox")
textBoxEx.Size = UDim2.new(1, 0, 0, 40)
textBoxEx.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
textBoxEx.Text = "Enter text..."
textBoxEx.TextColor3 = Color3.fromRGB(255, 255, 255)
textBoxEx.Parent = componentsTab

-- Dropdown Menu (simple example)
local dropdownFrame = Instance.new("Frame")
dropdownFrame.Size = UDim2.new(1, 0, 0, 40)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
dropdownFrame.Parent = componentsTab

local dropdownButton = Instance.new("TextButton")
dropdownButton.Size = UDim2.new(1, 0, 1, 0)
dropdownButton.Text = "Select Option"
dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
dropdownButton.Parent = dropdownFrame

local optionsFrame = Instance.new("Frame")
optionsFrame.Size = UDim2.new(1, 0, 0, 100)
optionsFrame.Position = UDim2.new(0, 0, 1, 0)
optionsFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
optionsFrame.Visible = false
optionsFrame.Parent = dropdownFrame

local uiListLayoutOptions = Instance.new("UIListLayout")
uiListLayoutOptions.Parent = optionsFrame

-- Example options
for i = 1, 3 do
    local option = Instance.new("TextButton")
    option.Size = UDim2.new(1, 0, 0, 30)
    option.Text = "Option " .. i
    option.TextColor3 = Color3.fromRGB(255, 255, 255)
    option.Parent = optionsFrame
    option.MouseButton1Click:Connect(function()
        dropdownButton.Text = option.Text
        optionsFrame.Visible = false
        -- Handle selection
    end)
end

dropdownButton.MouseButton1Click:Connect(function()
    optionsFrame.Visible = not optionsFrame.Visible
end)

-- Confirmation Frame (3rd GUI)
local confirmFrame = Instance.new("Frame")
confirmFrame.Size = UDim2.new(0, 300, 0, 150)
confirmFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
confirmFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
confirmFrame.BorderSizePixel = 0
confirmFrame.Visible = false
confirmFrame.Parent = screenGui

local uiCornerConfirm = Instance.new("UICorner")
uiCornerConfirm.Parent = confirmFrame

local confirmLabel = Instance.new("TextLabel")
confirmLabel.Size = UDim2.new(1, 0, 0.6, 0)
confirmLabel.Text = "Close Hub? This will not reactivate."
confirmLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
confirmLabel.TextWrapped = true
confirmLabel.Parent = confirmFrame

local yesButton = Instance.new("TextButton")
yesButton.Size = UDim2.new(0.4, 0, 0.3, 0)
yesButton.Position = UDim2.new(0.1, 0, 0.7, 0)
yesButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
yesButton.Text = "Yes"
yesButton.Parent = confirmFrame

local noButton = Instance.new("TextButton")
noButton.Size = UDim2.new(0.4, 0, 0.3, 0)
noButton.Position = UDim2.new(0.5, 0, 0.7, 0)
noButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
noButton.Text = "No"
noButton.Parent = confirmFrame

-- Events
openerFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        mainFrame.Visible = not mainFrame.Visible
    end
end)

minimizeButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
end)

closeButton.MouseButton1Click:Connect(function()
    confirmFrame.Visible = true
end)

yesButton.MouseButton1Click:Connect(function()
    screenGui:Destroy() -- Or disable permanently
end)

noButton.MouseButton1Click:Connect(function()
    confirmFrame.Visible = false
end)

-- Draggable Main Frame
local draggingMain = false
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingMain = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                draggingMain = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and draggingMain then
        update(input)
    end
end)

-- Make opener draggable too (optional)
-- Similar code can be added for openerFrame if needed.

-- To customize: Add more tabs with createTab("New Tab"), add components to the returned contentFrame.
-- Colors, sizes, actions are easy to edit in the code.

-- Show first tab by default
componentsTab.Visible = true
