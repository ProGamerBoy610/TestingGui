-- Fryzer Hub - Debug Version
-- This will help identify what's working and what's not

print("🔄 Starting Fryzer Hub Debug...")

-- Step 1: Load circle toggle
print("📍 Step 1: Loading circle toggle...")
local success1, error1 = pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ProGamerBoy610/Script-Hub/refs/heads/main/circle%20togle.lua"))()
end)

if success1 then
    print("✅ Circle toggle loaded successfully")
else
    print("❌ Circle toggle failed to load: " .. tostring(error1))
end

-- Step 2: Load main library
print("📍 Step 2: Loading main library...")
local success2, error2 = pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ProGamerBoy610/Script-Hub/refs/heads/main/maintop.lua"))()
end)

if success2 then
    print("✅ Main library loaded successfully")
else
    print("❌ Main library failed to load: " .. tostring(error2))
end

-- Step 3: Check if Library exists
print("📍 Step 3: Checking for Library object...")
local waitTime = 0
while not Library and waitTime < 10 do
    wait(0.1)
    waitTime = waitTime + 0.1
    print("⏳ Waiting for Library... (" .. waitTime .. "s)")
end

if Library then
    print("✅ Library object found!")
    print("📋 Library methods available:")
    for key, value in pairs(Library) do
        if type(value) == "function" then
            print("  - " .. key .. "()")
        end
    end
else
    print("❌ Library object not found after 10 seconds!")
    print("🔧 Creating basic fallback library...")
    
    -- Create a simple fallback library
    Library = {}
    function Library:CreateTab(name)
        print("📁 Tab created: " .. name)
        return {name = name}
    end
    function Library:CreateButton(tab, name, callback)
        print("🔘 Button created: " .. name .. " in tab " .. (tab.name or "unknown"))
        return {name = name, callback = callback}
    end
    function Library:CreateToggle(tab, name, default, callback)
        print("🔄 Toggle created: " .. name .. " in tab " .. (tab.name or "unknown"))
        return {name = name, callback = callback}
    end
    function Library:CreateSlider(tab, name, min, max, default, callback)
        print("📊 Slider created: " .. name .. " in tab " .. (tab.name or "unknown"))
        return {name = name, callback = callback}
    end
    function Library:CreateDropdown(tab, name, options, default, callback)
        print("📋 Dropdown created: " .. name .. " in tab " .. (tab.name or "unknown"))
        return {name = name, callback = callback}
    end
    function Library:CreateTextBox(tab, name, placeholder, callback)
        print("📝 TextBox created: " .. name .. " in tab " .. (tab.name or "unknown"))
        return {name = name, callback = callback}
    end
    function Library:CreateLabel(tab, text)
        print("🏷️ Label created: " .. text .. " in tab " .. (tab.name or "unknown"))
        return {text = text}
    end
    function Library:CreateTextLabel(tab, text, color)
        print("📄 TextLabel created: " .. text .. " in tab " .. (tab.name or "unknown"))
        return {text = text}
    end
end

-- Step 4: Check if Config exists
print("📍 Step 4: Checking for Config object...")
if not Config then
    print("⚠️ Config not found, creating default config...")
    Config = {
        Colors = {
            Background = Color3.fromRGB(25, 25, 25),
            Accent = Color3.fromRGB(0, 162, 255),
            Primary = Color3.fromRGB(70, 130, 255),
            Success = Color3.fromRGB(46, 204, 113),
            Warning = Color3.fromRGB(241, 196, 15),
            Text = Color3.fromRGB(255, 255, 255),
            TextSecondary = Color3.fromRGB(170, 170, 170)
        }
    }
    print("✅ Default config created")
else
    print("✅ Config object found!")
end

-- Step 5: Try creating a simple tab to test
print("📍 Step 5: Testing tab creation...")
local success3, error3 = pcall(function()
    local testTab = Library:CreateTab("TEST")
    Library:CreateButton(testTab, "Test Button", function()
        print("🎉 Test button clicked!")
    end)
end)

if success3 then
    print("✅ Test tab and button created successfully!")
else
    print("❌ Failed to create test tab: " .. tostring(error3))
end

print("🔍 Debug complete! Now running main script...")

-- Now run your original script
local tabs = {
    info = Library:CreateTab("INFO"),
    home = Library:CreateTab("HOME"), 
    special = Library:CreateTab("SPECIAL"),
    main = Library:CreateTab("MAIN"),
    spawner = Library:CreateTab("SPAWNER"),
    destroy = Library:CreateTab("DESTROY"),
    settings = Library:CreateTab("SETTINGS"),
    player = Library:CreateTab("PLAYER")
}

print("📁 All tabs created!")

-- Add a simple test button to see if it works
Library:CreateButton(tabs.info, "Debug Test", function()
    print("🎯 Debug button works!")
end)

print("🎉 Script loaded! Check console for debug info.")
