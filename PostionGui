-- Modern Fryzer Hub Script (Fixed)
local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

-- Player reference
local LocalPlayer = Players.LocalPlayer

-- Utility functions
local function gradient(text, startColor, endColor)
    local result = ""
    for i = 1, #text do
        local t = (i - 1) / math.max(#text - 1, 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)
        result = result .. string.format('<font color="rgb(%d, %d, %d)">%s</font>', r, g, b, text:sub(i, i))
    end
    return result
end

-- Confirmation popup
local Confirmed = false
WindUI:Popup({
    Title = "Confirmation",
    Icon = "rbxassetid://129260712070622",
    IconThemed = true,
    Content = "Fryzer Hub " .. gradient("FH", Color3.fromHex("#00FF87"), Color3.fromHex("#60EFFF")),
    Buttons = {
        {
            Title = "Cancel",
            Variant = "Secondary",
        },
        {
            Title = "Continue",
            Icon = "arrow-right",
            Callback = function() Confirmed = true end,
            Variant = "Primary",
        }
    }
})

repeat task.wait() until Confirmed

-- Create main window (using original structure)
local Window = WindUI:CreateWindow({
    Title = "Fryzer Hub v2.0",
    Icon = "rbxassetid://129260712070622",
    IconThemed = true,
    Author = "Grow a garden - Modernized",
    Folder = "FryzerHub",
    Size = UDim2.fromOffset(580, 360),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    ScrollBarEnabled = true,
    User = {
        Enabled = true,
        Anonymous = false,
        Username = LocalPlayer.DisplayName,
        UserId = LocalPlayer.UserId,
        Callback = function()
            print("User icon clicked:", LocalPlayer.Name)
        end
    }
})

-- UI open button
Window:EditOpenButton({
    Title = "Open Hub",
    Icon = "monitor",
    CornerRadius = UDim.new(0, 16),
    StrokeThickness = 2,
    Color = ColorSequence.new(Color3.fromHex("FF0F7B"), Color3.fromHex("F89B29")),
    Draggable = true,
})

-- Game data
local locations = {
    ["Event Area"] = Vector3.new(-119.69, 3.00, -14.97),
    ["Gear Shop"] = Vector3.new(-285.27, 3.00, -13.62),
    ["Pet Eggs Shop"] = Vector3.new(-287.34, 3.00, -0.91),
    ["Cosmetics Shop"] = Vector3.new(-286.11, 3.00, -24.29),
    ["Garden 1"] = Vector3.new(33.44, 3.00, 38.34),
    ["Garden 2"] = Vector3.new(-100.65, 3.00, 38.08),
    ["Garden 3"] = Vector3.new(-237.85, 3.00, 38.51),
    ["Garden 4"] = Vector3.new(34.44, 3.00, -65.85),
    ["Garden 5"] = Vector3.new(-98.96, 3.00, -65.37),
    ["Garden 6"] = Vector3.new(-235.72, 3.00, -70.17)
}

local seeds = {
    "Apple", "Bamboo", "Beanstalk", "Blueberry", "Burning Bud",
    "Cacao", "Cactus", "Carrot", "Coconut", "Corn", "Daffodil",
    "Dragon Fruit", "Elder Strawberry", "Ember Lily", "Giant Pinecone",
    "Grape", "Mango", "Mushroom", "Orange Tulip", "Pepper",
    "Pumpkin", "Strawberry", "Sugar Apple", "Tomato", "Watermelon"
}

-- Script state
local selectedLocation = "Event Area"
local selectedSeeds = {"ALL"}
local autoFarmEnabled = false
local autoBuyEnabled = false
local playerFarm = nil

-- Create tabs
local PlayerTab = Window:Tab({
    Title = "Player",
    Icon = "user"
})

local FarmTab = Window:Tab({
    Title = "Auto Farm",
    Icon = "repeat"
})

local FunctionsTab = Window:Tab({
    Title = "Functions",
    Icon = "send"
})

local ScriptsTab = Window:Tab({
    Title = "Scripts",
    Icon = "code"
})

-- Player Tab Content
PlayerTab:Paragraph({
    Title = "Welcome to Fryzer Hub!",
    Content = "Hello " .. LocalPlayer.DisplayName .. "! You're running the modernized version successfully."
})

-- Location teleport dropdown
PlayerTab:Dropdown({
    Title = "Select Location",
    Values = {"Event Area", "Gear Shop", "Pet Eggs Shop", "Cosmetics Shop", "Garden 1", "Garden 2", "Garden 3", "Garden 4", "Garden 5", "Garden 6"},
    Value = "Event Area",
    Multi = false,
    AllowNone = false,
    Callback = function(selected)
        selectedLocation = selected
    end
})

-- Teleport button
PlayerTab:Button({
    Title = "Teleport",
    Desc = "Teleport to selected location",
    Callback = function()
        local pos = locations[selectedLocation]
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
            WindUI:Notify({
                Title = "Teleported!",
                Content = "Teleported to " .. selectedLocation,
                Duration = 2
            })
        else
            WindUI:Notify({
                Title = "Teleport Failed",
                Content = "TRY AGAIN",
                Duration = 5
            })
        end
    end
})

-- Walkspeed slider
PlayerTab:Slider({
    Title = "Walkspeed",
    Value = {
        Min = 16,
        Max = 100,
        Default = 16
    },
    Callback = function(val)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = val
        end
    end
})

-- Functions Tab Content
local function sellInventory()
    local player = LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    
    local originalPosition = humanoidRootPart.CFrame
    local targetPosition = Vector3.new(86.59001922607422, 2.999999761581421, 0.426799476146698)

    humanoidRootPart.CFrame = CFrame.new(targetPosition)
    wait(0.5)
    
    for i = 1, 3 do
        pcall(function()
            ReplicatedStorage.GameEvents.Sell_Inventory:FireServer()
        end)
        wait(0.2)
    end

    wait(2)
    humanoidRootPart.CFrame = originalPosition
end

FunctionsTab:Button({
    Title = "Sell all",
    Desc = "This will sell all items",
    Callback = function()
        sellInventory()
        WindUI:Notify({
            Title = "Sell all",
            Content = "Got the money?",
            Duration = 1
        })
    end
})

local function sellSingleItem()
    local player = LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    
    local originalPosition = humanoidRootPart.CFrame
    local targetPosition = Vector3.new(86.59001922607422, 2.999999761581421, 0.426799476146698)

    humanoidRootPart.CFrame = CFrame.new(targetPosition)
    wait(0.5)
    
    for i = 1, 3 do
        pcall(function()
            ReplicatedStorage.GameEvents.Sell_Item:FireServer()
        end)
        wait(0.2)
    end

    wait(2)
    humanoidRootPart.CFrame = originalPosition
end

FunctionsTab:Button({
    Title = "Sell item",
    Desc = "This will sell items in your hand",
    Callback = function()
        sellSingleItem()
        WindUI:Notify({
            Title = "Sell item",
            Content = "Got the money?",
            Duration = 1
        })
    end
})

-- GUI toggle functionality
local originalStates = {}

local function enableGUI()
    pcall(function()
        local playerGui = LocalPlayer:WaitForChild("PlayerGui")
        local teleportUI = playerGui:WaitForChild("Teleport_UI")
        local frame = teleportUI:WaitForChild("Frame")
        local gearFrame = frame:WaitForChild("Gear")
        local petsFrame = frame:WaitForChild("Pets")

        originalStates = {
            teleportUI = teleportUI.Enabled,
            frame = frame.Visible,
            gear = gearFrame.Visible,
            pets = petsFrame.Visible,
        }

        teleportUI.Enabled = true
        frame.Visible = true
        gearFrame.Visible = true
        petsFrame.Visible = true
    end)
end

local function disableGUI()
    pcall(function()
        local playerGui = LocalPlayer:WaitForChild("PlayerGui")
        local teleportUI = playerGui:WaitForChild("Teleport_UI")
        local frame = teleportUI:WaitForChild("Frame")
        local gearFrame = frame:WaitForChild("Gear")
        local petsFrame = frame:WaitForChild("Pets")

        teleportUI.Enabled = originalStates.teleportUI or false
        frame.Visible = originalStates.frame or false
        gearFrame.Visible = originalStates.gear or false
        petsFrame.Visible = originalStates.pets or false
    end)
end

FunctionsTab:Toggle({
    Title = "Enable GUI", 
    Value = false,
    Callback = function(state)
        if state then
            enableGUI()
            print("GUI enabled")
        else
            disableGUI()
            print("GUI disabled")
        end
    end
})

-- Auto Farm functionality
local function findPlayerFarm()
    local workspace = game:GetService("Workspace")
    local farmFolder = workspace:FindFirstChild("Farm")
    if not farmFolder then return nil end
    
    for _, farm in pairs(farmFolder:GetChildren()) do
        if farm.Name == "Farm" then
            local success, result = pcall(function()
                local important = farm:FindFirstChild("Important")
                if important then
                    local data = important:FindFirstChild("Data")
                    if data then
                        local owner = data:FindFirstChild("Owner")
                        if owner and owner.Value == LocalPlayer.Name then
                            return farm
                        end
                    end
                end
                return nil
            end)
            
            if success and result then
                return result
            end
        end
    end
    
    return nil
end

local function getPlantsInFarm(farm)
    if not farm then return {} end
    
    local plants = {}
    pcall(function()
        local important = farm:FindFirstChild("Important")
        if important then
            local plantsPhysical = important:FindFirstChild("Plants_Physical")
            if plantsPhysical then
                for _, plant in pairs(plantsPhysical:GetChildren()) do
                    if plant:IsA("Model") then
                        for _, child in pairs(plant:GetDescendants()) do
                            if child:IsA("ProximityPrompt") then
                                table.insert(plants, {
                                    model = plant,
                                    prompt = child,
                                    name = plant.Name
                                })
                                break
                            end
                        end
                    end
                end
            end
        end
    end)
    
    return plants
end

local function teleportTo(targetPosition)
    local character = LocalPlayer.Character
    if not character then return false end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return false end
    
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = targetPosition})
    
    tween:Play()
    tween.Completed:Wait()
    return true
end

local function clickProximityPrompt(prompt)
    if prompt and prompt:IsA("ProximityPrompt") then
        local success = pcall(function()
            fireproximityprompt(prompt)
        end)
        return success
    end
    return false
end

local function farmFor60Seconds()
    if not playerFarm then return end
    
    local farmingStartTime = tick()
    
    while (tick() - farmingStartTime) < 60 and autoFarmEnabled do
        local plants = getPlantsInFarm(playerFarm)
        
        if #plants == 0 then
            wait(2)
        else
            for _, plantData in pairs(plants) do
                if not autoFarmEnabled then break end
                
                if (tick() - farmingStartTime) >= 60 then break end
                
                local plant = plantData.model
                local prompt = plantData.prompt
                
                if plant and plant.Parent and prompt and prompt.Parent then
                    local plantPosition = plant:GetModelCFrame()
                    local plantSize = plant:GetExtentsSize()
                    local plantHeight = plantSize.Y / 2 + 3
                    
                    if teleportTo(plantPosition + Vector3.new(0, plantHeight, 0)) then
                        wait(0.5)
                        clickProximityPrompt(prompt)
                    end
                    
                    wait(0.3)
                end
            end
            wait(1)
        end
    end
end

local function waitAndSell()
    local sellLocation = CFrame.new(86.58584594726562, 2.999999761581421, 0.426784485578537)
    
    if teleportTo(sellLocation) then
        wait(1)
        pcall(function()
            ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("Sell_Inventory"):FireServer()
        end)
    end
    
    wait(4)
end

local function startAutoFarm()
    playerFarm = findPlayerFarm()
    
    if not playerFarm then
        WindUI:Notify({
            Title = "Farm Error",
            Content = "Could not find your farm!",
            Duration = 5
        })
        return
    end
    
    while autoFarmEnabled do
        if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.CharacterAdded:Wait()
            wait(2)
        end
        
        pcall(function()
            farmFor60Seconds()
        end)
        
        if not autoFarmEnabled then break end
        
        pcall(function()
            waitAndSell()
        end)
    end
end

-- Auto Farm Tab
FarmTab:Toggle({
    Title = "Auto Farm", 
    Value = false,
    Callback = function(state)
        autoFarmEnabled = state
        if state then
            spawn(function()
                startAutoFarm()
            end)
            WindUI:Notify({
                Title = "Auto Farm",
                Content = "Auto farming started!",
                Duration = 2
            })
        else
            WindUI:Notify({
                Title = "Auto Farm",
                Content = "Auto farming stopped!",
                Duration = 2
            })
        end
    end
})

-- Seed buying system
local seedDropdownOptions = {"ALL"}
for _, seed in ipairs(seeds) do
    table.insert(seedDropdownOptions, seed)
end

FarmTab:Dropdown({
    Title = "Select Seeds to Buy",
    Values = seedDropdownOptions,
    Value = {"ALL"},
    Multi = true,
    AllowNone = true,
    Callback = function(values)
        selectedSeeds = values
    end
})

local function buySelectedSeeds()
    local BuySeedStock = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("BuySeedStock")
    
    for _, selectedSeed in ipairs(selectedSeeds) do
        if selectedSeed == "ALL" then
            for _, seed in ipairs(seeds) do
                BuySeedStock:FireServer(seed)
                task.wait(0.2)
            end
        else
            BuySeedStock:FireServer(selectedSeed)
            task.wait(0.2)
        end
    end
end

FarmTab:Toggle({
    Title = "Auto Buy Seeds", 
    Value = false,
    Callback = function(state)
        autoBuyEnabled = state
        if state then
            spawn(function()
                while autoBuyEnabled do
                    buySelectedSeeds()
                    task.wait(1)
                end
            end)
        end
    end
})

-- Scripts Tab Content
local scriptData = {
    {
        title = "Jandel Chat System",
        desc = "Launch the script",
        url = "https://raw.githubusercontent.com/FryzerHub/Key-system-gui/refs/heads/main/Chat%20system%20GAG"
    },
    {
        title = "Pet Dupers (Can't Gift)",
        desc = "Launch the script",
        url = "https://raw.githubusercontent.com/FryzerHub/Key-system-gui/refs/heads/main/Pet%20dupe%20script%20wind%20ui%20lib"
    },
    {
        title = "Item Stealer",
        desc = "Launch the script",
        url = "https://raw.githubusercontent.com/ProGamerBoy610/Button-gui/refs/heads/main/items%20stealer%20v2%20gag"
    },
    {
        title = "Admin Commander (SPAWN ALL THINGS)",
        desc = "Launch the script",
        url = "https://raw.githubusercontent.com/FryzerHub/Key-system-gui/refs/heads/main/Jandle%20admin%20commander%20GUi%20key%20system"
    }
}

for _, script in ipairs(scriptData) do
    ScriptsTab:Button({
        Title = script.title,
        Desc = script.desc,
        Callback = function()
            loadstring(game:HttpGet(script.url))()
            WindUI:Notify({
                Title = "Script Loaded",
                Content = script.title .. " has been executed!",
                Duration = 3
            })
        end
    })
end

-- Window close handler
Window:OnClose(function()
    autoFarmEnabled = false
    autoBuyEnabled = false
    print("Fryzer Hub closed.")
end)

print("Fryzer Hub Modern loaded successfully!")
