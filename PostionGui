local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ScriptHubGUI"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 500, 0, 400)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 8)
mainCorner.Parent = mainFrame

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

local titleText = Instance.new("TextLabel")
titleText.Size = UDim2.new(1, -80, 1, 0)
titleText.Position = UDim2.new(0, 10, 0, 0)
titleText.BackgroundTransparency = 1
titleText.Text = "GROW A GARDEN"
titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
titleText.TextScaled = true
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.Font = Enum.Font.GothamBold
titleText.Parent = titleBar

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -65, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
minimizeButton.BorderSizePixel = 0
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextScaled = true
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.Parent = titleBar

local minCorner = Instance.new("UICorner")
minCorner.CornerRadius = UDim.new(0, 4)
minCorner.Parent = minimizeButton

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.BorderSizePixel = 0
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true
closeButton.Font = Enum.Font.GothamBold
closeButton.Parent = titleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 4)
closeCorner.Parent = closeButton

-- Navigation Panel
local navPanel = Instance.new("Frame")
navPanel.Name = "NavPanel"
navPanel.Size = UDim2.new(0, 120, 1, -50)
navPanel.Position = UDim2.new(0, 5, 0, 45)
navPanel.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
navPanel.BorderSizePixel = 0
navPanel.Parent = mainFrame

local navCorner = Instance.new("UICorner")
navCorner.CornerRadius = UDim.new(0, 6)
navCorner.Parent = navPanel

local navLayout = Instance.new("UIListLayout")
navLayout.SortOrder = Enum.SortOrder.LayoutOrder
navLayout.Padding = UDim.new(0, 2)
navLayout.Parent = navPanel

-- Navigation Buttons
local navButtons = {
    {name = "HOME", selected = true},
    {name = "SPECIAL", selected = false},
    {name = "MAIN", selected = false},
    {name = "SPAWNER", selected = false},
    {name = "DESTROY", selected = false},
    {name = "SETTINGS", selected = false},
    {name = "SWITCH", selected = false}
}

local function createNavButton(buttonData, index)
    local navButton = Instance.new("TextButton")
    navButton.Name = buttonData.name
    navButton.Size = UDim2.new(1, -4, 0, 40)
    navButton.Position = UDim2.new(0, 2, 0, 0)
    navButton.BackgroundColor3 = buttonData.selected and Color3.fromRGB(60, 60, 60) or Color3.fromRGB(45, 45, 45)
    navButton.BorderSizePixel = 0
    navButton.Text = buttonData.name
    navButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    navButton.TextScaled = true
    navButton.Font = Enum.Font.Gotham
    navButton.LayoutOrder = index
    navButton.Parent = navPanel
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 4)
    buttonCorner.Parent = navButton
    
    navButton.MouseButton1Click:Connect(function()
        -- Deselect all buttons
        for _, child in pairs(navPanel:GetChildren()) do
            if child:IsA("TextButton") then
                child.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            end
        end
        -- Select clicked button
        navButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        -- Update content panel based on selection
        updateContentPanel(buttonData.name)
    end)
    
    return navButton
end

for i, buttonData in ipairs(navButtons) do
    createNavButton(buttonData, i)
end

-- Content Panel
local contentPanel = Instance.new("Frame")
contentPanel.Name = "ContentPanel"
contentPanel.Size = UDim2.new(1, -135, 1, -50)
contentPanel.Position = UDim2.new(0, 130, 0, 45)
contentPanel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
contentPanel.BorderSizePixel = 0
contentPanel.Parent = mainFrame

local contentCorner = Instance.new("UICorner")
contentCorner.CornerRadius = UDim.new(0, 6)
contentCorner.Parent = contentPanel

local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Name = "ScrollFrame"
scrollFrame.Size = UDim2.new(1, -10, 1, -10)
scrollFrame.Position = UDim2.new(0, 5, 0, 5)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.ScrollBarThickness = 6
scrollFrame.Parent = contentPanel

local contentLayout = Instance.new("UIListLayout")
contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
contentLayout.Padding = UDim.new(0, 8)
contentLayout.Parent = scrollFrame

-- Blue Header Label (like SPAWNER SCRIPT)
local function createHeaderLabel(text)
    local header = Instance.new("TextLabel")
    header.Size = UDim2.new(1, -10, 0, 35)
    header.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
    header.BorderSizePixel = 0
    header.Text = text
    header.TextColor3 = Color3.fromRGB(255, 255, 255)
    header.TextScaled = true
    header.Font = Enum.Font.GothamBold
    header.Parent = scrollFrame
    
    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 4)
    headerCorner.Parent = header
    
    return header
end

-- Regular Text Label
local function createTextLabel(text)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 25)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextScaled = true
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.Gotham
    label.Parent = scrollFrame
    
    return label
end

-- Button
local function createButton(text, color)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 35)
    button.BackgroundColor3 = color or Color3.fromRGB(70, 130, 200)
    button.BorderSizePixel = 0
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.Font = Enum.Font.GothamBold
    button.Parent = scrollFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 4)
    buttonCorner.Parent = button
    
    button.MouseButton1Click:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(50, 100, 150)
        wait(0.1)
        button.BackgroundColor3 = color or Color3.fromRGB(70, 130, 200)
    end)
    
    return button
end

-- Toggle
local function createToggle(text, defaultState)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, -10, 0, 35)
    toggleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Parent = scrollFrame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 4)
    toggleCorner.Parent = toggleFrame
    
    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Size = UDim2.new(1, -70, 1, 0)
    toggleLabel.Position = UDim2.new(0, 10, 0, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = text
    toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleLabel.TextScaled = true
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.Font = Enum.Font.Gotham
    toggleLabel.Parent = toggleFrame
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 50, 0, 25)
    toggleButton.Position = UDim2.new(1, -55, 0, 5)
    toggleButton.BackgroundColor3 = defaultState and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(150, 0, 0)
    toggleButton.BorderSizePixel = 0
    toggleButton.Text = defaultState and "ON" or "OFF"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextScaled = true
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.Parent = toggleFrame
    
    local toggleButtonCorner = Instance.new("UICorner")
    toggleButtonCorner.CornerRadius = UDim.new(0, 4)
    toggleButtonCorner.Parent = toggleButton
    
    local isToggled = defaultState
    toggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        toggleButton.BackgroundColor3 = isToggled and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(150, 0, 0)
        toggleButton.Text = isToggled and "ON" or "OFF"
    end)
    
    return toggleFrame
end

-- Slider
local function createSlider(text, minVal, maxVal, defaultVal)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, -10, 0, 45)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Parent = scrollFrame
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 4)
    sliderCorner.Parent = sliderFrame
    
    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Size = UDim2.new(1, -10, 0, 20)
    sliderLabel.Position = UDim2.new(0, 5, 0, 5)
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Text = text .. ": " .. defaultVal
    sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderLabel.TextScaled = true
    sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    sliderLabel.Font = Enum.Font.Gotham
    sliderLabel.Parent = sliderFrame
    
    local sliderBar = Instance.new("Frame")
    sliderBar.Size = UDim2.new(1, -20, 0, 8)
    sliderBar.Position = UDim2.new(0, 10, 0, 30)
    sliderBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    sliderBar.BorderSizePixel = 0
    sliderBar.Parent = sliderFrame
    
    local sliderBarCorner = Instance.new("UICorner")
    sliderBarCorner.CornerRadius = UDim.new(0, 4)
    sliderBarCorner.Parent = sliderBar
    
    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((defaultVal - minVal) / (maxVal - minVal), 0, 1, 0)
    sliderFill.Position = UDim2.new(0, 0, 0, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 150, 200)
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderBar
    
    local sliderFillCorner = Instance.new("UICorner")
    sliderFillCorner.CornerRadius = UDim.new(0, 4)
    sliderFillCorner.Parent = sliderFill
    
    local currentValue = defaultVal
    
    local function updateSlider(input)
        local relativePos = math.clamp((input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
        currentValue = math.floor(minVal + (maxVal - minVal) * relativePos)
        sliderFill.Size = UDim2.new(relativePos, 0, 1, 0)
        sliderLabel.Text = text .. ": " .. currentValue
    end
    
    sliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            updateSlider(input)
            local connection
            connection = input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    connection:Disconnect()
                end
            end)
        end
    end)
    
    sliderBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
                updateSlider(input)
            end
        end
    end)
    
    return sliderFrame
end

-- Dropdown Menu
local function createDropdown(text, options)
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Size = UDim2.new(1, -10, 0, 35)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    dropdownFrame.BorderSizePixel = 0
    dropdownFrame.Parent = scrollFrame
    
    local dropdownCorner = Instance.new("UICorner")
    dropdownCorner.CornerRadius = UDim.new(0, 4)
    dropdownCorner.Parent = dropdownFrame
    
    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Size = UDim2.new(1, -10, 1, 0)
    dropdownButton.Position = UDim2.new(0, 5, 0, 0)
    dropdownButton.BackgroundTransparency = 1
    dropdownButton.Text = text .. ": " .. options[1]
    dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownButton.TextScaled = true
    dropdownButton.TextXAlignment = Enum.TextXAlignment.Left
    dropdownButton.Font = Enum.Font.Gotham
    dropdownButton.Parent = dropdownFrame
    
    local dropdownList = Instance.new("Frame")
    dropdownList.Size = UDim2.new(1, 0, 0, #options * 30)
    dropdownList.Position = UDim2.new(0, 0, 1, 5)
    dropdownList.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    dropdownList.BorderSizePixel = 0
    dropdownList.Visible = false
    dropdownList.ZIndex = 10
    dropdownList.Parent = dropdownFrame
    
    local dropdownListCorner = Instance.new("UICorner")
    dropdownListCorner.CornerRadius = UDim.new(0, 4)
    dropdownListCorner.Parent = dropdownList
    
    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Parent = dropdownList
    
    for i, option in ipairs(options) do
        local optionButton = Instance.new("TextButton")
        optionButton.Size = UDim2.new(1, 0, 0, 30)
        optionButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        optionButton.BorderSizePixel = 0
        optionButton.Text = option
        optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        optionButton.TextScaled = true
        optionButton.Font = Enum.Font.Gotham
        optionButton.LayoutOrder = i
        optionButton.Parent = dropdownList
        
        if i == 1 then
            local topCorner = Instance.new("UICorner")
            topCorner.CornerRadius = UDim.new(0, 4)
            topCorner.Parent = optionButton
        elseif i == #options then
            local bottomCorner = Instance.new("UICorner")
            bottomCorner.CornerRadius = UDim.new(0, 4)
            bottomCorner.Parent = optionButton
        end
        
        optionButton.MouseButton1Click:Connect(function()
            dropdownButton.Text = text .. ": " .. option
            dropdownList.Visible = false
        end)
        
        optionButton.MouseEnter:Connect(function()
            optionButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
        end)
        
        optionButton.MouseLeave:Connect(function()
            optionButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        end)
    end
    
    local isOpen = false
    dropdownButton.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        dropdownList.Visible = isOpen
        if isOpen then
            dropdownFrame.Size = UDim2.new(1, -10, 0, 35 + #options * 30 + 5)
        else
            dropdownFrame.Size = UDim2.new(1, -10, 0, 35)
        end
    end)
    
    return dropdownFrame
end

-- TextBox
local function createTextBox(placeholderText)
    local textBoxFrame = Instance.new("Frame")
    textBoxFrame.Size = UDim2.new(1, -10, 0, 35)
    textBoxFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    textBoxFrame.BorderSizePixel = 0
    textBoxFrame.Parent = scrollFrame
    
    local textBoxCorner = Instance.new("UICorner")
    textBoxCorner.CornerRadius = UDim.new(0, 4)
    textBoxCorner.Parent = textBoxFrame
    
    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(1, -10, 1, 0)
    textBox.Position = UDim2.new(0, 5, 0, 0)
    textBox.BackgroundTransparency = 1
    textBox.PlaceholderText = placeholderText
    textBox.Text = ""
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    textBox.TextScaled = true
    textBox.Font = Enum.Font.Gotham
    textBox.Parent = textBoxFrame
    
    return textBoxFrame
end

-- Mini Bar (for minimize functionality)
local miniBar = Instance.new("Frame")
miniBar.Name = "MiniBar"
miniBar.Size = UDim2.new(0, 200, 0, 30)
miniBar.Position = UDim2.new(0.5, -100, 0.1, 0)
miniBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
miniBar.BorderSizePixel = 0
miniBar.Parent = screenGui
miniBar.Visible = false
miniBar.Active = true
miniBar.Draggable = true

local miniCorner = Instance.new("UICorner")
miniCorner.CornerRadius = UDim.new(0, 6)
miniCorner.Parent = miniBar

local miniText = Instance.new("TextLabel")
miniText.Size = UDim2.new(1, -35, 1, 0)
miniText.Position = UDim2.new(0, 5, 0, 0)
miniText.BackgroundTransparency = 1
miniText.Text = "GROW A GARDEN"
miniText.TextColor3 = Color3.fromRGB(255, 255, 255)
miniText.TextScaled = true
miniText.TextXAlignment = Enum.TextXAlignment.Left
miniText.Font = Enum.Font.GothamBold
miniText.Parent = miniBar

local restoreButton = Instance.new("TextButton")
restoreButton.Size = UDim2.new(0, 25, 0, 25)
restoreButton.Position = UDim2.new(1, -30, 0, 2.5)
restoreButton.BackgroundColor3 = Color3.fromRGB(70, 130, 200)
restoreButton.BorderSizePixel = 0
restoreButton.Text = "+"
restoreButton.TextColor3 = Color3.fromRGB(255, 255, 255)
restoreButton.TextScaled = true
restoreButton.Font = Enum.Font.GothamBold
restoreButton.Parent = miniBar

local restoreCorner = Instance.new("UICorner")
restoreCorner.CornerRadius = UDim.new(0, 4)
restoreCorner.Parent = restoreButton

-- Content Update Function
function updateContentPanel(section)
    -- Clear existing content
    for _, child in pairs(scrollFrame:GetChildren()) do
        if child:IsA("GuiObject") then
            child:Destroy()
        end
    end
    
    if section == "HOME" then
        createHeaderLabel("SPAWNER SCRIPT")
        createTextLabel("Make Sure to only Execute Dark Spawner 1x")
        createTextLabel("Dark Spawner [ Mobile Only ]")
        createButton("ReModified v3.8 || Dark Spawner", Color3.fromRGB(0, 150, 0))
        createTextLabel("Pet Placer v1.0 [ Not Animated ]")
        createButton("ALLOW GIFT PET [NEW]", Color3.fromRGB(200, 50, 150))
        createTextLabel("Allow Gift Spawned Pets ^.^")
        
    elseif section == "SPECIAL" then
        createHeaderLabel("SPECIAL FEATURES")
        createToggle("Auto Farm", false)
        createToggle("Speed Hack", true)
        createSlider("Walk Speed", 16, 100, 50)
        createDropdown("Game Mode", {"Easy", "Normal", "Hard", "Extreme"})
        
    elseif section == "MAIN" then
        createHeaderLabel("MAIN SCRIPTS")
        createButton("Execute Main Script", Color3.fromRGB(70, 130, 200))
        createTextBox("Enter Script URL...")
        createToggle("Auto Execute", false)
        createSlider("Execution Delay", 1, 10, 3)
        
    elseif section == "SPAWNER" then
        createHeaderLabel("SPAWNER CONTROLS")
        createButton("Dark Spawner", Color3.fromRGB(50, 50, 200))
        createButton("Light Spawner", Color3.fromRGB(200, 200, 50))
        createToggle("Auto Spawn", true)
        createDropdown("Spawn Type", {"Random", "Pets", "Tools", "NPCs"})
        createSlider("Spawn Rate", 1, 20, 5)
        
    elseif section == "DESTROY" then
        createHeaderLabel("DESTRUCTION TOOLS")
        createButton("Clear All", Color3.fromRGB(200, 50, 50))
        createButton("Reset Character", Color3.fromRGB(150, 100, 50))
        createToggle("Safe Mode", true)
        createTextBox("Target Name...")
        
    elseif section == "SETTINGS" then
        createHeaderLabel("CONFIGURATION")
        createToggle("Auto Save", true)
        createToggle("Notifications", false)
        createSlider("GUI Scale", 50, 150, 100)
        createDropdown("Theme", {"Dark", "Light", "Blue", "Red"})
        createTextBox("Config Name...")
        createButton("Save Config", Color3.fromRGB(100, 150, 100))
        
    elseif section == "SWITCH" then
        createHeaderLabel("GAME SWITCHER")
        createButton("Join New Server", Color3.fromRGB(100, 100, 200))
        createButton("Rejoin Current", Color3.fromRGB(150, 150, 100))
        createDropdown("Server Region", {"US East", "US West", "Europe", "Asia"})
        createTextBox("Server ID...")
    end
    
    -- Update canvas size
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, contentLayout.AbsoluteContentSize.Y + 10)
end

-- Event Connections
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

minimizeButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    miniBar.Visible = true
end)

restoreButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = true
    miniBar.Visible = false
end)

-- Initialize with HOME content
updateContentPanel("HOME")

-- Mobile/Touch compatibility
UserInputService.TouchEnabled = true

-- Keyboard shortcut (F4 to toggle)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.F4 then
        if mainFrame.Visible then
            mainFrame.Visible = false
            miniBar.Visible = true
        else
            mainFrame.Visible = true
            miniBar.Visible = false
        end
    end
end)
