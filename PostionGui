-- FRYZER HUB - Enhanced Version
-- Advanced Hub GUI for Roblox Executor with Multi-Dropdown and Enhanced Systems

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Remove existing GUI if it exists
if PlayerGui:FindFirstChild("FryzerHubGUI") then
    PlayerGui:FindFirstChild("FryzerHubGUI"):Destroy()
end

-- Enhanced Configuration
local Config = {
    Colors = {
        Primary = Color3.fromRGB(12, 12, 18),
        Secondary = Color3.fromRGB(18, 18, 26),
        Tertiary = Color3.fromRGB(24, 24, 32),
        Accent = Color3.fromRGB(88, 101, 242),
        AccentHover = Color3.fromRGB(104, 117, 255),
        AccentDark = Color3.fromRGB(72, 85, 220),
        Success = Color3.fromRGB(34, 197, 94),
        Warning = Color3.fromRGB(249, 115, 22),
        Error = Color3.fromRGB(239, 68, 68),
        Text = Color3.fromRGB(248, 250, 252),
        TextSecondary = Color3.fromRGB(148, 163, 184),
        TextMuted = Color3.fromRGB(100, 116, 139),
        Border = Color3.fromRGB(30, 41, 59),
        BorderHover = Color3.fromRGB(51, 65, 85),
        Shadow = Color3.fromRGB(0, 0, 0),
        Gradient1 = Color3.fromRGB(139, 92, 246),
        Gradient2 = Color3.fromRGB(59, 130, 246),
        Glass = Color3.fromRGB(255, 255, 255)
    },
    Animations = {
        Fast = TweenInfo.new(0.15, Enum.EasingStyle.Quad),
        Normal = TweenInfo.new(0.25, Enum.EasingStyle.Quad),
        Slow = TweenInfo.new(0.4, Enum.EasingStyle.Quad),
        Bounce = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
        Elastic = TweenInfo.new(0.8, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out)
    },
    Effects = {
        GlowIntensity = 0.8,
        ParticleCount = 25,
        BlurRadius = 24
    }
}

-- Enhanced Library
local Library = {}
Library.Tabs = {}
Library.CurrentTab = nil
Library.Notifications = {}
Library.Settings = {
    Theme = "Dark",
    Transparency = 0,
    AnimationSpeed = 1,
    SoundEnabled = true
}

-- Create Enhanced ScreenGui with better layering
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "FryzerHubGUI"
ScreenGui.Parent = PlayerGui
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.DisplayOrder = 999
ScreenGui.Enabled = true

-- Background Blur Effect (Visual Enhancement)
local BlurFrame = Instance.new("Frame")
BlurFrame.Name = "BlurBackground"
BlurFrame.Parent = ScreenGui
BlurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
BlurFrame.BackgroundTransparency = 0.3
BlurFrame.Size = UDim2.new(1, 0, 1, 0)
BlurFrame.Visible = false
BlurFrame.ZIndex = 1

-- Main Container with Glass Effect
local MainContainer = Instance.new("Frame")
MainContainer.Name = "MainContainer"
MainContainer.Parent = ScreenGui
MainContainer.BackgroundColor3 = Config.Colors.Primary
MainContainer.BackgroundTransparency = 0.05
MainContainer.BorderSizePixel = 0
MainContainer.Size = UDim2.new(0, 520, 0, 360)
MainContainer.Position = UDim2.new(0.5, -260, 0.5, -180)
MainContainer.Active = true
MainContainer.Draggable = true
MainContainer.ZIndex = 2

-- Glass effect for main container
local MainGradient = Instance.new("UIGradient")
MainGradient.Parent = MainContainer
MainGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Config.Colors.Primary),
    ColorSequenceKeypoint.new(1, Config.Colors.Secondary)
}
MainGradient.Rotation = 145

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainContainer

local MainStroke = Instance.new("UIStroke")
MainStroke.Color = Config.Colors.Accent
MainStroke.Thickness = 1.5
MainStroke.Transparency = 0.3
MainStroke.Parent = MainContainer

-- Animated Header with Gradient
local HeaderFrame = Instance.new("Frame")
HeaderFrame.Name = "Header"
HeaderFrame.Parent = MainContainer
HeaderFrame.BackgroundColor3 = Config.Colors.Secondary
HeaderFrame.BackgroundTransparency = 0.1
HeaderFrame.BorderSizePixel = 0
HeaderFrame.Size = UDim2.new(1, 0, 0, 50)
HeaderFrame.Position = UDim2.new(0, 0, 0, 0)
HeaderFrame.ZIndex = 3

local HeaderGradient = Instance.new("UIGradient")
HeaderGradient.Parent = HeaderFrame
HeaderGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Config.Colors.Gradient1),
    ColorSequenceKeypoint.new(0.5, Config.Colors.Accent),
    ColorSequenceKeypoint.new(1, Config.Colors.Gradient2)
}
HeaderGradient.Rotation = 90

local HeaderCorner = Instance.new("UICorner")
HeaderCorner.CornerRadius = UDim.new(0, 12)
HeaderCorner.Parent = HeaderFrame

-- Fix header bottom corners
local HeaderFix = Instance.new("Frame")
HeaderFix.Parent = HeaderFrame
HeaderFix.BackgroundColor3 = Config.Colors.Secondary
HeaderFix.BackgroundTransparency = 0.1
HeaderFix.BorderSizePixel = 0
HeaderFix.Size = UDim2.new(1, 0, 0, 12)
HeaderFix.Position = UDim2.new(0, 0, 1, -12)
HeaderFix.ZIndex = 3

local HeaderFixGradient = Instance.new("UIGradient")
HeaderFixGradient.Parent = HeaderFix
HeaderFixGradient.Color = HeaderGradient.Color
HeaderFixGradient.Rotation = 90

-- Enhanced Title with Animation
local TitleContainer = Instance.new("Frame")
TitleContainer.Parent = HeaderFrame
TitleContainer.BackgroundTransparency = 1
TitleContainer.Size = UDim2.new(1, -150, 1, 0)
TitleContainer.Position = UDim2.new(0, 15, 0, 0)
TitleContainer.ZIndex = 4

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "Title"
TitleLabel.Parent = TitleContainer
TitleLabel.BackgroundTransparency = 1
TitleLabel.Size = UDim2.new(1, 0, 0, 24)
TitleLabel.Position = UDim2.new(0, 0, 0, 5)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "FRYZER HUB"
TitleLabel.TextColor3 = Config.Colors.Text
TitleLabel.TextSize = 16
TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Add subtle text shadow
local TitleShadow = TitleLabel:Clone()
TitleShadow.Parent = TitleContainer
TitleShadow.Position = UDim2.new(0, 1, 0, 6)
TitleShadow.TextColor3 = Color3.fromRGB(0, 0, 0)
TitleShadow.TextTransparency = 0.7
TitleShadow.ZIndex = 3

local SubtitleLabel = Instance.new("TextLabel")
SubtitleLabel.Name = "Subtitle"
SubtitleLabel.Parent = TitleContainer
SubtitleLabel.BackgroundTransparency = 1
SubtitleLabel.Size = UDim2.new(1, 0, 0, 16)
SubtitleLabel.Position = UDim2.new(0, 0, 0, 28)
SubtitleLabel.Font = Enum.Font.Gotham
SubtitleLabel.Text = "Advanced Executor Hub • v2.1"
SubtitleLabel.TextColor3 = Config.Colors.TextSecondary
SubtitleLabel.TextSize = 11
SubtitleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Enhanced Control Buttons with Better Design
local ControlsContainer = Instance.new("Frame")
ControlsContainer.Name = "Controls"
ControlsContainer.Parent = HeaderFrame
ControlsContainer.BackgroundTransparency = 1
ControlsContainer.Size = UDim2.new(0, 120, 1, 0)
ControlsContainer.Position = UDim2.new(1, -135, 0, 0)
ControlsContainer.ZIndex = 4

-- Settings Button
local SettingsButton = Instance.new("TextButton")
SettingsButton.Name = "Settings"
SettingsButton.Parent = ControlsContainer
SettingsButton.BackgroundColor3 = Config.Colors.Glass
SettingsButton.BackgroundTransparency = 0.9
SettingsButton.BorderSizePixel = 0
SettingsButton.Size = UDim2.new(0, 32, 0, 32)
SettingsButton.Position = UDim2.new(0, 0, 0.5, -16)
SettingsButton.Font = Enum.Font.GothamBold
SettingsButton.Text = "⚙"
SettingsButton.TextColor3 = Config.Colors.Text
SettingsButton.TextSize = 14

local SettingsCorner = Instance.new("UICorner")
SettingsCorner.CornerRadius = UDim.new(0, 8)
SettingsCorner.Parent = SettingsButton

-- Minimize Button (Enhanced)
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "Minimize"
MinimizeButton.Parent = ControlsContainer
MinimizeButton.BackgroundColor3 = Config.Colors.Glass
MinimizeButton.BackgroundTransparency = 0.9
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Size = UDim2.new(0, 32, 0, 32)
MinimizeButton.Position = UDim2.new(0, 40, 0.5, -16)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Text = "−"
MinimizeButton.TextColor3 = Config.Colors.Text
MinimizeButton.TextSize = 16

local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 8)
MinimizeCorner.Parent = MinimizeButton

-- Close Button (Enhanced)
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "Close"
CloseButton.Parent = ControlsContainer
CloseButton.BackgroundColor3 = Config.Colors.Glass
CloseButton.BackgroundTransparency = 0.9
CloseButton.BorderSizePixel = 0
CloseButton.Size = UDim2.new(0, 32, 0, 32)
CloseButton.Position = UDim2.new(0, 80, 0.5, -16)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "×"
CloseButton.TextColor3 = Config.Colors.Text
CloseButton.TextSize = 16

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseButton

-- Content Area with Better Layout
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "Content"
ContentFrame.Parent = MainContainer
ContentFrame.BackgroundTransparency = 1
ContentFrame.Size = UDim2.new(1, 0, 1, -50)
ContentFrame.Position = UDim2.new(0, 0, 0, 50)
ContentFrame.ZIndex = 3

-- Enhanced Sidebar with Glass Effect
local SidebarFrame = Instance.new("Frame")
SidebarFrame.Name = "Sidebar"
SidebarFrame.Parent = ContentFrame
SidebarFrame.BackgroundColor3 = Config.Colors.Secondary
SidebarFrame.BackgroundTransparency = 0.2
SidebarFrame.BorderSizePixel = 0
SidebarFrame.Size = UDim2.new(0, 140, 1, 0)
SidebarFrame.Position = UDim2.new(0, 0, 0, 0)
SidebarFrame.ZIndex = 3

local SidebarCorner = Instance.new("UICorner")
SidebarCorner.CornerRadius = UDim.new(0, 0)
SidebarCorner.Parent = SidebarFrame

local SidebarStroke = Instance.new("UIStroke")
SidebarStroke.Color = Config.Colors.Border
SidebarStroke.Thickness = 1
SidebarStroke.Transparency = 0.5
SidebarStroke.Parent = SidebarFrame

-- Sidebar Gradient
local SidebarGradient = Instance.new("UIGradient")
SidebarGradient.Parent = SidebarFrame
SidebarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Config.Colors.Secondary),
    ColorSequenceKeypoint.new(1, Config.Colors.Tertiary)
}
SidebarGradient.Rotation = 90

-- Tab ScrollingFrame with Custom Scrollbar
local TabScrollFrame = Instance.new("ScrollingFrame")
TabScrollFrame.Name = "TabScroll"
TabScrollFrame.Parent = SidebarFrame
TabScrollFrame.BackgroundTransparency = 1
TabScrollFrame.Size = UDim2.new(1, -12, 1, -12)
TabScrollFrame.Position = UDim2.new(0, 6, 0, 6)
TabScrollFrame.ScrollBarThickness = 4
TabScrollFrame.ScrollBarImageColor3 = Config.Colors.Accent
TabScrollFrame.ScrollBarImageTransparency = 0.3
TabScrollFrame.BorderSizePixel = 0
TabScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
TabScrollFrame.ScrollingDirection = Enum.ScrollingDirection.Y
TabScrollFrame.ZIndex = 4

-- Enhanced Tab Layout
local TabLayout = Instance.new("UIListLayout")
TabLayout.Parent = TabScrollFrame
TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabLayout.Padding = UDim.new(0, 4)
TabLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

-- Content Container with Glass Effect
local ContentContainer = Instance.new("Frame")
ContentContainer.Name = "ContentContainer"
ContentContainer.Parent = ContentFrame
ContentContainer.BackgroundColor3 = Config.Colors.Primary
ContentContainer.BackgroundTransparency = 0.1
ContentContainer.BorderSizePixel = 0
ContentContainer.Size = UDim2.new(1, -140, 1, 0)
ContentContainer.Position = UDim2.new(0, 140, 0, 0)
ContentContainer.ZIndex = 3

local ContentCorner = Instance.new("UICorner")
ContentCorner.CornerRadius = UDim.new(0, 0)
ContentCorner.Parent = ContentContainer

local ContentStroke = Instance.new("UIStroke")
ContentStroke.Color = Config.Colors.Border
ContentStroke.Thickness = 1
ContentStroke.Transparency = 0.5
ContentStroke.Parent = ContentContainer

-- Enhanced Content ScrollingFrame
local ContentScrollFrame = Instance.new("ScrollingFrame")
ContentScrollFrame.Name = "ContentScroll"
ContentScrollFrame.Parent = ContentContainer
ContentScrollFrame.BackgroundTransparency = 1
ContentScrollFrame.Size = UDim2.new(1, -20, 1, -20)
ContentScrollFrame.Position = UDim2.new(0, 10, 0, 10)
ContentScrollFrame.ScrollBarThickness = 4
ContentScrollFrame.ScrollBarImageColor3 = Config.Colors.Accent
ContentScrollFrame.ScrollBarImageTransparency = 0.3
ContentScrollFrame.BorderSizePixel = 0
ContentScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ContentScrollFrame.ZIndex = 4

-- Content Layout with Better Spacing
local ContentLayout = Instance.new("UIListLayout")
ContentLayout.Parent = ContentScrollFrame
ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
ContentLayout.Padding = UDim.new(0, 8)
ContentLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left

-- Enhanced Functions
function Library:CreateNotification(title, message, duration, notifType)
    local notifType = notifType or "Info"
    local colors = {
        Success = Config.Colors.Success,
        Warning = Config.Colors.Warning,
        Error = Config.Colors.Error,
        Info = Config.Colors.Accent
    }
    
    local NotifGui = Instance.new("ScreenGui")
    NotifGui.Name = "Notification"
    NotifGui.Parent = PlayerGui
    NotifGui.DisplayOrder = 1000
    
    local NotifFrame = Instance.new("Frame")
    NotifFrame.Parent = NotifGui
    NotifFrame.BackgroundColor3 = Config.Colors.Secondary
    NotifFrame.BorderSizePixel = 0
    NotifFrame.Size = UDim2.new(0, 300, 0, 80)
    NotifFrame.Position = UDim2.new(1, 320, 0, 50 + #Library.Notifications * 90)
    
    local NotifCorner = Instance.new("UICorner")
    NotifCorner.CornerRadius = UDim.new(0, 8)
    NotifCorner.Parent = NotifFrame
    
    local NotifStroke = Instance.new("UIStroke")
    NotifStroke.Color = colors[notifType]
    NotifStroke.Thickness = 2
    NotifStroke.Parent = NotifFrame
    
    local NotifTitle = Instance.new("TextLabel")
    NotifTitle.Parent = NotifFrame
    NotifTitle.BackgroundTransparency = 1
    NotifTitle.Size = UDim2.new(1, -20, 0, 25)
    NotifTitle.Position = UDim2.new(0, 10, 0, 8)
    NotifTitle.Font = Enum.Font.GothamBold
    NotifTitle.Text = title
    NotifTitle.TextColor3 = Config.Colors.Text
    NotifTitle.TextSize = 12
    NotifTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    local NotifMessage = Instance.new("TextLabel")
    NotifMessage.Parent = NotifFrame
    NotifMessage.BackgroundTransparency = 1
    NotifMessage.Size = UDim2.new(1, -20, 0, 40)
    NotifMessage.Position = UDim2.new(0, 10, 0, 30)
    NotifMessage.Font = Enum.Font.Gotham
    NotifMessage.Text = message
    NotifMessage.TextColor3 = Config.Colors.TextSecondary
    NotifMessage.TextSize = 10
    NotifMessage.TextWrapped = true
    NotifMessage.TextXAlignment = Enum.TextXAlignment.Left
    NotifMessage.TextYAlignment = Enum.TextYAlignment.Top
    
    -- Slide in animation
    TweenService:Create(NotifFrame, Config.Animations.Bounce, {
        Position = UDim2.new(1, -320, 0, 50 + #Library.Notifications * 90)
    }):Play()
    
    table.insert(Library.Notifications, NotifGui)
    
    -- Auto dismiss
    spawn(function()
        wait(duration or 5)
        TweenService:Create(NotifFrame, Config.Animations.Normal, {
            Position = UDim2.new(1, 320, 0, 50 + #Library.Notifications * 90)
        }):Play()
        wait(0.3)
        
        for i, notif in pairs(Library.Notifications) do
            if notif == NotifGui then
                table.remove(Library.Notifications, i)
                break
            end
        end
        NotifGui:Destroy()
    end)
    
    return NotifGui
end

function Library:CreateTab(name, icon)
    local Tab = {}
    Tab.Name = name
    Tab.Components = {}
    Tab.Icon = icon or "📁"
    
    -- Enhanced Tab Button with Glass Effect
    local TabButton = Instance.new("TextButton")
    TabButton.Name = name
    TabButton.Parent = TabScrollFrame
    TabButton.BackgroundColor3 = Config.Colors.Tertiary
    TabButton.BackgroundTransparency = 0.3
    TabButton.BorderSizePixel = 0
    TabButton.Size = UDim2.new(1, -8, 0, 36)
    TabButton.Font = Enum.Font.GothamBold
    TabButton.Text = Tab.Icon .. "  " .. name
    TabButton.TextColor3 = Config.Colors.TextSecondary
    TabButton.TextSize = 11
    TabButton.TextXAlignment = Enum.TextXAlignment.Left
    TabButton.ZIndex = 5
    
    -- Add padding to tab button text
    local TabPadding = Instance.new("UIPadding")
    TabPadding.Parent = TabButton
    TabPadding.PaddingLeft = UDim.new(0, 12)
    TabPadding.PaddingRight = UDim.new(0, 8)
    
    local TabCorner = Instance.new("UICorner")
    TabCorner.CornerRadius = UDim.new(0, 8)
    TabCorner.Parent = TabButton
    
    local TabStroke = Instance.new("UIStroke")
    TabStroke.Color = Config.Colors.Border
    TabStroke.Thickness = 1
    TabStroke.Transparency = 0.7
    TabStroke.Parent = TabButton
    
    -- Tab Content Frame
    local TabContent = Instance.new("Frame")
    TabContent.Name = name .. "Content"
    TabContent.Parent = ContentScrollFrame
    TabContent.BackgroundTransparency = 1
    TabContent.Size = UDim2.new(1, 0, 0, 0)
    TabContent.Visible = false
    TabContent.LayoutOrder = #Library.Tabs + 1
    TabContent.ZIndex = 4
    
    local TabContentLayout = Instance.new("UIListLayout")
    TabContentLayout.Parent = TabContent
    TabContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabContentLayout.Padding = UDim.new(0, 6)
    TabContentLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
    
    -- Update content size
    TabContentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        TabContent.Size = UDim2.new(1, 0, 0, TabContentLayout.AbsoluteContentSize.Y)
        ContentScrollFrame.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y)
    end)
    
    -- Enhanced Tab Selection
    TabButton.MouseButton1Click:Connect(function()
        Library:SelectTab(Tab)
        Library:CreateNotification("Tab Selected", "Switched to " .. name .. " tab", 2, "Info")
    end)
    
    -- Enhanced Hover Effects
    TabButton.MouseEnter:Connect(function()
        if Library.CurrentTab ~= Tab then
            TweenService:Create(TabButton, Config.Animations.Fast, {
                BackgroundColor3 = Config.Colors.BorderHover,
                BackgroundTransparency = 0.1,
                TextColor3 = Config.Colors.Text
            }):Play()
            TweenService:Create(TabStroke, Config.Animations.Fast, {
                Color = Config.Colors.Accent,
                Transparency = 0.3
            }):Play()
        end
    end)
    
    TabButton.MouseLeave:Connect(function()
        if Library.CurrentTab ~= Tab then
            TweenService:Create(TabButton, Config.Animations.Fast, {
                BackgroundColor3 = Config.Colors.Tertiary,
                BackgroundTransparency = 0.3,
                TextColor3 = Config.Colors.TextSecondary
            }):Play()
            TweenService:Create(TabStroke, Config.Animations.Fast, {
                Color = Config.Colors.Border,
                Transparency = 0.7
            }):Play()
        end
    end)
    
    Tab.Button = TabButton
    Tab.Content = TabContent
    Tab.Layout = TabContentLayout
    
    table.insert(Library.Tabs, Tab)
    
    -- Auto-select first tab
    if #Library.Tabs == 1 then
        Library:SelectTab(Tab)
    end
    
    -- Update canvas sizes
    TabScrollFrame.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
    
    return Tab
end

function Library:SelectTab(tab)
    -- Deselect current tab with animation
    if Library.CurrentTab then
        TweenService:Create(Library.CurrentTab.Button, Config.Animations.Normal, {
            BackgroundColor3 = Config.Colors.Tertiary,
            BackgroundTransparency = 0.3,
            TextColor3 = Config.Colors.TextSecondary
        }):Play()
        TweenService:Create(Library.CurrentTab.Button:FindFirstChild("UIStroke"), Config.Animations.Normal, {
            Color = Config.Colors.Border,
            Transparency = 0.7
        }):Play()
        Library.CurrentTab.Content.Visible = false
    end
    
    -- Select new tab with enhanced animation
    Library.CurrentTab = tab
    TweenService:Create(tab.Button, Config.Animations.Normal, {
        BackgroundColor3 = Config.Colors.Accent,
        BackgroundTransparency = 0.1,
        TextColor3 = Config.Colors.Text
    }):Play()
    TweenService:Create(tab.Button:FindFirstChild("UIStroke"), Config.Animations.Normal, {
        Color = Config.Colors.Text,
        Transparency = 0.2
    }):Play()
    
    tab.Content.Visible = true
    ContentScrollFrame.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y)
end

-- Enhanced Component Creation Functions

function Library:CreateSection(tab, title)
    local SectionFrame = Instance.new("Frame")
    SectionFrame.Name = title
    SectionFrame.Parent = tab.Content
    SectionFrame.BackgroundColor3 = Config.Colors.Secondary
    SectionFrame.BackgroundTransparency = 0.3
    SectionFrame.BorderSizePixel = 0
    SectionFrame.Size = UDim2.new(1, 0, 0, 35)
    SectionFrame.LayoutOrder = #tab.Components + 1
    
    local SectionCorner = Instance.new("UICorner")
    SectionCorner.CornerRadius = UDim.new(0, 6)
    SectionCorner.Parent = SectionFrame
    
    local SectionGradient = Instance.new("UIGradient")
    SectionGradient.Parent = SectionFrame
    SectionGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Config.Colors.Accent),
        ColorSequenceKeypoint.new(1, Config.Colors.AccentDark)
    }
    SectionGradient.Rotation = 45
    
    local SectionLabel = Instance.new("TextLabel")
    SectionLabel.Parent = SectionFrame
    SectionLabel.BackgroundTransparency = 1
    SectionLabel.Size = UDim2.new(1, -20, 1, 0)
    SectionLabel.Position = UDim2.new(0, 10, 0, 0)
    SectionLabel.Font = Enum.Font.GothamBold
    SectionLabel.Text = title
    SectionLabel.TextColor3 = Config.Colors.Text
    SectionLabel.TextSize = 12
    SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    table.insert(tab.Components, SectionFrame)
    return SectionFrame
end

function Library:CreateButton(tab, text, callback)
    local ButtonFrame = Instance.new("Frame")
    ButtonFrame.Name = text
    ButtonFrame.Parent = tab.Content
    ButtonFrame.BackgroundTransparency = 1
    ButtonFrame.Size = UDim2.new(1, 0, 0, 32)
    ButtonFrame.LayoutOrder = #tab.Components + 1
    
    local Button = Instance.new("TextButton")
    Button.Parent = ButtonFrame
    Button.BackgroundColor3 = Config.Colors.Secondary
    Button.BackgroundTransparency = 0.1
    Button.BorderSizePixel = 0
    Button.Size = UDim2.new(1, 0, 1, 0)
    Button.Font = Enum.Font.GothamBold
    Button.Text = text
    Button.TextColor3 = Config.Colors.Text
    Button.TextSize = 11
    
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(0, 6)
    ButtonCorner.Parent = Button
    
    local ButtonStroke = Instance.new("UIStroke")
    ButtonStroke.Color = Config.Colors.Border
    ButtonStroke.Thickness = 1
    ButtonStroke.Transparency = 0.5
    ButtonStroke.Parent = Button
    
    -- Status indicator with better design
    local StatusIndicator = Instance.new("Frame")
    StatusIndicator.Name = "StatusIndicator"
    StatusIndicator.Parent = Button
    StatusIndicator.BackgroundColor3 = Config.Colors.Border
    StatusIndicator.BorderSizePixel = 0
    StatusIndicator.Size = UDim2.new(0, 8, 0, 8)
    StatusIndicator.Position = UDim2.new(1, -16, 0.5, -4)
    
    local IndicatorCorner = Instance.new("UICorner")
    IndicatorCorner.CornerRadius = UDim.new(1, 0)
    IndicatorCorner.Parent = StatusIndicator
    
    -- Button functionality with enhanced feedback
    Button.MouseButton1Click:Connect(function()
        -- Ripple effect
        local Ripple = Instance.new("Frame")
        Ripple.Parent = Button
        Ripple.BackgroundColor3 = Config.Colors.Accent
        Ripple.BackgroundTransparency = 0.7
        Ripple.BorderSizePixel = 0
        Ripple.Size = UDim2.new(0, 0, 0, 0)
        Ripple.Position = UDim2.new(0.5, 0, 0.5, 0)
        Ripple.ZIndex = 10
        
        local RippleCorner = Instance.new("UICorner")
        RippleCorner.CornerRadius = UDim.new(1, 0)
        RippleCorner.Parent = Ripple
        
        TweenService:Create(Ripple, Config.Animations.Normal, {
            Size = UDim2.new(2, 0, 2, 0),
            Position = UDim2.new(-0.5, 0, -0.5, 0),
            BackgroundTransparency = 1
        }):Play()
        
        -- Status indicator animation
        TweenService:Create(StatusIndicator, Config.Animations.Fast, {
            BackgroundColor3 = Config.Colors.Success,
            Size = UDim2.new(0, 12, 0, 12),
            Position = UDim2.new(1, -18, 0.5, -6)
        }):Play()
        
        -- Execute callback
        if callback then
            pcall(callback)
        end
        
        -- Cleanup and reset
        spawn(function()
            wait(0.3)
            Ripple:Destroy()
            wait(1)
            TweenService:Create(StatusIndicator, Config.Animations.Normal, {
                BackgroundColor3 = Config.Colors.Border,
                Size = UDim2.new(0, 8, 0, 8),
                Position = UDim2.new(1, -16, 0.5, -4)
            }):Play()
        end)
    end)
    
    -- Enhanced hover effects
    Button.MouseEnter:Connect(function()
        TweenService:Create(Button, Config.Animations.Fast, {
            BackgroundColor3 = Config.Colors.BorderHover,
            BackgroundTransparency = 0.05
        }):Play()
        TweenService:Create(ButtonStroke, Config.Animations.Fast, {
            Color = Config.Colors.Accent,
            Transparency = 0.2
        }):Play()
    end)
    
    Button.MouseLeave:Connect(function()
        TweenService:Create(Button, Config.Animations.Fast, {
            BackgroundColor3 = Config.Colors.Secondary,
            BackgroundTransparency = 0.1
        }):Play()
        TweenService:Create(ButtonStroke, Config.Animations.Fast, {
            Color = Config.Colors.Border,
            Transparency = 0.5
        }):Play()
    end)
    
    table.insert(tab.Components, ButtonFrame)
    
    tab.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tab.Content.Size = UDim2.new(1, 0, 0, tab.Layout.AbsoluteContentSize.Y)
        ContentScrollFrame.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y)
    end)
    
    return Button
end

function Library:CreateToggle(tab, text, default, callback)
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Name = text
    ToggleFrame.Parent = tab.Content
    ToggleFrame.BackgroundColor3 = Config.Colors.Secondary
    ToggleFrame.BackgroundTransparency = 0.1
    ToggleFrame.BorderSizePixel = 0
    ToggleFrame.Size = UDim2.new(1, 0, 0, 32)
    ToggleFrame.LayoutOrder = #tab.Components + 1
    
    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.CornerRadius = UDim.new(0, 6)
    ToggleCorner.Parent = ToggleFrame
    
    local ToggleStroke = Instance.new("UIStroke")
    ToggleStroke.Color = Config.Colors.Border
    ToggleStroke.Thickness = 1
    ToggleStroke.Transparency = 0.5
    ToggleStroke.Parent = ToggleFrame
    
    local ToggleLabel = Instance.new("TextLabel")
    ToggleLabel.Parent = ToggleFrame
    ToggleLabel.BackgroundTransparency = 1
    ToggleLabel.Size = UDim2.new(1, -60, 1, 0)
    ToggleLabel.Position = UDim2.new(0, 12, 0, 0)
    ToggleLabel.Font = Enum.Font.Gotham
    ToggleLabel.Text = text
    ToggleLabel.TextColor3 = Config.Colors.Text
    ToggleLabel.TextSize = 11
    ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Enhanced Toggle Switch
    local ToggleSwitch = Instance.new("Frame")
    ToggleSwitch.Name = "Switch"
    ToggleSwitch.Parent = ToggleFrame
    ToggleSwitch.BackgroundColor3 = default and Config.Colors.Success or Config.Colors.BorderHover
    ToggleSwitch.BorderSizePixel = 0
    ToggleSwitch.Size = UDim2.new(0, 40, 0, 20)
    ToggleSwitch.Position = UDim2.new(1, -50, 0.5, -10)
    
    local SwitchCorner = Instance.new("UICorner")
    SwitchCorner.CornerRadius = UDim.new(1, 0)
    SwitchCorner.Parent = ToggleSwitch
    
    local SwitchButton = Instance.new("Frame")
    SwitchButton.Name = "Button"
    SwitchButton.Parent = ToggleSwitch
    SwitchButton.BackgroundColor3 = Config.Colors.Text
    SwitchButton.BorderSizePixel = 0
    SwitchButton.Size = UDim2.new(0, 16, 0, 16)
    SwitchButton.Position = default and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
    
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(1, 0)
    ButtonCorner.Parent = SwitchButton
    
    -- Add subtle shadow to switch button
    local SwitchShadow = Instance.new("Frame")
    SwitchShadow.Parent = ToggleSwitch
    SwitchShadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    SwitchShadow.BackgroundTransparency = 0.8
    SwitchShadow.BorderSizePixel = 0
    SwitchShadow.Size = UDim2.new(0, 16, 0, 16)
    SwitchShadow.Position = default and UDim2.new(1, -17, 0.5, -7) or UDim2.new(0, 3, 0.5, -7)
    SwitchShadow.ZIndex = SwitchButton.ZIndex - 1
    
    local ShadowCorner = Instance.new("UICorner")
    ShadowCorner.CornerRadius = UDim.new(1, 0)
    ShadowCorner.Parent = SwitchShadow
    
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Parent = ToggleFrame
    ToggleButton.BackgroundTransparency = 1
    ToggleButton.Size = UDim2.new(1, 0, 1, 0)
    ToggleButton.Text = ""
    
    local isToggled = default or false
    
    ToggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        
        -- Animate switch
        TweenService:Create(ToggleSwitch, Config.Animations.Normal, {
            BackgroundColor3 = isToggled and Config.Colors.Success or Config.Colors.BorderHover
        }):Play()
        
        TweenService:Create(SwitchButton, Config.Animations.Bounce, {
            Position = isToggled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
        }):Play()
        
        TweenService:Create(SwitchShadow, Config.Animations.Bounce, {
            Position = isToggled and UDim2.new(1, -17, 0.5, -7) or UDim2.new(0, 3, 0.5, -7)
        }):Play()
        
        -- Subtle glow effect when enabled
        if isToggled then
            local Glow = Instance.new("Frame")
            Glow.Parent = ToggleSwitch
            Glow.BackgroundColor3 = Config.Colors.Success
            Glow.BackgroundTransparency = 0.7
            Glow.BorderSizePixel = 0
            Glow.Size = UDim2.new(1, 4, 1, 4)
            Glow.Position = UDim2.new(0, -2, 0, -2)
            Glow.ZIndex = ToggleSwitch.ZIndex - 1
            
            local GlowCorner = Instance.new("UICorner")
            GlowCorner.CornerRadius = UDim.new(1, 0)
            GlowCorner.Parent = Glow
            
            TweenService:Create(Glow, Config.Animations.Normal, {
                BackgroundTransparency = 1,
                Size = UDim2.new(1, 8, 1, 8),
                Position = UDim2.new(0, -4, 0, -4)
            }):Play()
            
            spawn(function()
                wait(0.3)
                Glow:Destroy()
            end)
        end
        
        if callback then
            pcall(callback, isToggled)
        end
    end)
    
    -- Enhanced hover effects
    ToggleButton.MouseEnter:Connect(function()
        TweenService:Create(ToggleFrame, Config.Animations.Fast, {
            BackgroundColor3 = Config.Colors.BorderHover,
            BackgroundTransparency = 0.05
        }):Play()
        TweenService:Create(ToggleStroke, Config.Animations.Fast, {
            Color = Config.Colors.Accent,
            Transparency = 0.2
        }):Play()
    end)
    
    ToggleButton.MouseLeave:Connect(function()
        TweenService:Create(ToggleFrame, Config.Animations.Fast, {
            BackgroundColor3 = Config.Colors.Secondary,
            BackgroundTransparency = 0.1
        }):Play()
        TweenService:Create(ToggleStroke, Config.Animations.Fast, {
            Color = Config.Colors.Border,
            Transparency = 0.5
        }):Play()
    end)
    
    table.insert(tab.Components, ToggleFrame)
    
    tab.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tab.Content.Size = UDim2.new(1, 0, 0, tab.Layout.AbsoluteContentSize.Y)
        ContentScrollFrame.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y)
    end)
    
    return {
        Toggle = ToggleFrame,
        SetValue = function(value)
            isToggled = value
            TweenService:Create(ToggleSwitch, Config.Animations.Normal, {
                BackgroundColor3 = value and Config.Colors.Success or Config.Colors.BorderHover
            }):Play()
            TweenService:Create(SwitchButton, Config.Animations.Normal, {
                Position = value and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
            }):Play()
            TweenService:Create(SwitchShadow, Config.Animations.Normal, {
                Position = value and UDim2.new(1, -17, 0.5, -7) or UDim2.new(0, 3, 0.5, -7)
            }):Play()
        end,
        GetValue = function()
            return isToggled
        end
    }
end

function Library:CreateSlider(tab, text, min, max, default, callback)
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Name = text
    SliderFrame.Parent = tab.Content
    SliderFrame.BackgroundColor3 = Config.Colors.Secondary
    SliderFrame.BackgroundTransparency = 0.1
    SliderFrame.BorderSizePixel = 0
    SliderFrame.Size = UDim2.new(1, 0, 0, 50)
    SliderFrame.LayoutOrder = #tab.Components + 1
    
    local SliderCorner = Instance.new("UICorner")
    SliderCorner.CornerRadius = UDim.new(0, 6)
    SliderCorner.Parent = SliderFrame
    
    local SliderStroke = Instance.new("UIStroke")
    SliderStroke.Color = Config.Colors.Border
    SliderStroke.Thickness = 1
    SliderStroke.Transparency = 0.5
    SliderStroke.Parent = SliderFrame
    
    -- Label Container
    local LabelContainer = Instance.new("Frame")
    LabelContainer.Parent = SliderFrame
    LabelContainer.BackgroundTransparency = 1
    LabelContainer.Size = UDim2.new(1, -20, 0, 20)
    LabelContainer.Position = UDim2.new(0, 10, 0, 5)
    
    local SliderLabel = Instance.new("TextLabel")
    SliderLabel.Parent = LabelContainer
    SliderLabel.BackgroundTransparency = 1
    SliderLabel.Size = UDim2.new(1, -50, 1, 0)
    SliderLabel.Position = UDim2.new(0, 0, 0, 0)
    SliderLabel.Font = Enum.Font.Gotham
    SliderLabel.Text = text
    SliderLabel.TextColor3 = Config.Colors.Text
    SliderLabel.TextSize = 11
    SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    local ValueLabel = Instance.new("TextLabel")
    ValueLabel.Parent = LabelContainer
    ValueLabel.BackgroundColor3 = Config.Colors.Accent
    ValueLabel.BackgroundTransparency = 0.8
    ValueLabel.BorderSizePixel = 0
    ValueLabel.Size = UDim2.new(0, 45, 1, 0)
    ValueLabel.Position = UDim2.new(1, -45, 0, 0)
    ValueLabel.Font = Enum.Font.GothamBold
    ValueLabel.Text = tostring(default or min)
    ValueLabel.TextColor3 = Config.Colors.Text
    ValueLabel.TextSize = 10
    ValueLabel.TextXAlignment = Enum.TextXAlignment.Center
    
    local ValueCorner = Instance.new("UICorner")
    ValueCorner.CornerRadius = UDim.new(0, 4)
    ValueCorner.Parent = ValueLabel
    
    -- Enhanced Slider Track
    local SliderTrack = Instance.new("Frame")
    SliderTrack.Parent = SliderFrame
    SliderTrack.BackgroundColor3 = Config.Colors.BorderHover
    SliderTrack.BorderSizePixel = 0
    SliderTrack.Size = UDim2.new(1, -20, 0, 6)
    SliderTrack.Position = UDim2.new(0, 10, 1, -16)
    
    local TrackCorner = Instance.new("UICorner")
    TrackCorner.CornerRadius = UDim.new(1, 0)
    TrackCorner.Parent = SliderTrack
    
    -- Slider Fill with Gradient
    local SliderFill = Instance.new("Frame")
    SliderFill.Parent = SliderTrack
    SliderFill.BackgroundColor3 = Config.Colors.Accent
    SliderFill.BorderSizePixel = 0
    SliderFill.Size = UDim2.new((default or min) / max, 0, 1, 0)
    SliderFill.Position = UDim2.new(0, 0, 0, 0)
    
    local FillCorner = Instance.new("UICorner")
    FillCorner.CornerRadius = UDim.new(1, 0)
    FillCorner.Parent = SliderFill
    
    local FillGradient = Instance.new("UIGradient")
    FillGradient.Parent = SliderFill
    FillGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Config.Colors.Accent),
        ColorSequenceKeypoint.new(1, Config.Colors.AccentDark)
    }
    
    -- Enhanced Slider Handle
    local SliderHandle = Instance.new("Frame")
    SliderHandle.Parent = SliderTrack
    SliderHandle.BackgroundColor3 = Config.Colors.Text
    SliderHandle.BorderSizePixel = 0
    SliderHandle.Size = UDim2.new(0, 16, 0, 16)
    SliderHandle.Position = UDim2.new((default or min) / max, -8, 0.5, -8)
    
    local HandleCorner = Instance.new("UICorner")
    HandleCorner.CornerRadius = UDim.new(1, 0)
    HandleCorner.Parent = SliderHandle
    
    -- Handle shadow
    local HandleShadow = Instance.new("Frame")
    HandleShadow.Parent = SliderTrack
    HandleShadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    HandleShadow.BackgroundTransparency = 0.7
    HandleShadow.BorderSizePixel = 0
    HandleShadow.Size = UDim2.new(0, 16, 0, 16)
    HandleShadow.Position = UDim2.new((default or min) / max, -7, 0.5, -7)
    HandleShadow.ZIndex = SliderHandle.ZIndex - 1
    
    local ShadowCorner = Instance.new("UICorner")
    ShadowCorner.CornerRadius = UDim.new(1, 0)
    ShadowCorner.Parent = HandleShadow
    
    local SliderButton = Instance.new("TextButton")
    SliderButton.Parent = SliderFrame
    SliderButton.BackgroundTransparency = 1
    SliderButton.Size = UDim2.new(1, 0, 1, 0)
    SliderButton.Text = ""
    
    local currentValue = default or min
    local dragging = false
    
    local function UpdateSlider(input)
        local relativeX = math.clamp((input.Position.X - SliderTrack.AbsolutePosition.X) / SliderTrack.AbsoluteSize.X, 0, 1)
        currentValue = math.floor(min + (max - min) * relativeX)
        
        ValueLabel.Text = tostring(currentValue)
        
        TweenService:Create(SliderFill, Config.Animations.Fast, {
            Size = UDim2.new(relativeX, 0, 1, 0)
        }):Play()
        
        TweenService:Create(SliderHandle, Config.Animations.Fast, {
            Position = UDim2.new(relativeX, -8, 0.5, -8)
        }):Play()
        
        TweenService:Create(HandleShadow, Config.Animations.Fast, {
            Position = UDim2.new(relativeX, -7, 0.5, -7)
        }):Play()
        
        if callback then
            pcall(callback, currentValue)
        end
    end
    
    SliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            UpdateSlider(input)
            
            -- Handle grow effect
            TweenService:Create(SliderHandle, Config.Animations.Fast, {
                Size = UDim2.new(0, 20, 0, 20),
                Position = UDim2.new((currentValue - min) / (max - min), -10, 0.5, -10)
            }):Play()
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            UpdateSlider(input)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
            
            -- Handle shrink effect
            TweenService:Create(SliderHandle, Config.Animations.Fast, {
                Size = UDim2.new(0, 16, 0, 16),
                Position = UDim2.new((currentValue - min) / (max - min), -8, 0.5, -8)
            }):Play()
        end
    end)
    
    -- Enhanced hover effects
    SliderButton.MouseEnter:Connect(function()
        TweenService:Create(SliderFrame, Config.Animations.Fast, {
            BackgroundColor3 = Config.Colors.BorderHover,
            BackgroundTransparency = 0.05
        }):Play()
        TweenService:Create(SliderStroke, Config.Animations.Fast, {
            Color = Config.Colors.Accent,
            Transparency = 0.2
        }):Play()
    end)
    
    SliderButton.MouseLeave:Connect(function()
        if not dragging then
            TweenService:Create(SliderFrame, Config.Animations.Fast, {
                BackgroundColor3 = Config.Colors.Secondary,
                BackgroundTransparency = 0.1
            }):Play()
            TweenService:Create(SliderStroke, Config.Animations.Fast, {
                Color = Config.Colors.Border,
                Transparency = 0.5
            }):Play()
        end
    end)
    
    table.insert(tab.Components, SliderFrame)
    
    tab.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tab.Content.Size = UDim2.new(1, 0, 0, tab.Layout.AbsoluteContentSize.Y)
        ContentScrollFrame.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y)
    end)
    
    return {
        Slider = SliderFrame,
        SetValue = function(value)
            currentValue = value
            local relativeX = (value - min) / (max - min)
            ValueLabel.Text = tostring(value)
            SliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
            SliderHandle.Position = UDim2.new(relativeX, -8, 0.5, -8)
            HandleShadow.Position = UDim2.new(relativeX, -7, 0.5, -7)
        end,
        GetValue = function()
            return currentValue
        end
    }
end

-- ENHANCED MULTI-DROPDOWN SYSTEM
function Library:CreateMultiDropdown(tab, text, options, defaults, callback)
    local MultiDropdownFrame = Instance.new("Frame")
    MultiDropdownFrame.Name = text
    MultiDropdownFrame.Parent = tab.Content
    MultiDropdownFrame.BackgroundColor3 = Config.Colors.Secondary
    MultiDropdownFrame.BackgroundTransparency = 0.1
    MultiDropdownFrame.BorderSizePixel = 0
    MultiDropdownFrame.Size = UDim2.new(1, 0, 0, 32)
    MultiDropdownFrame.LayoutOrder = #tab.Components + 1
    MultiDropdownFrame.ZIndex = 1
    
    local MultiDropdownCorner = Instance.new("UICorner")
    MultiDropdownCorner.CornerRadius = UDim.new(0, 6)
    MultiDropdownCorner.Parent = MultiDropdownFrame
    
    local MultiDropdownStroke = Instance.new("UIStroke")
    MultiDropdownStroke.Color = Config.Colors.Border
    MultiDropdownStroke.Thickness = 1
    MultiDropdownStroke.Transparency = 0.5
    MultiDropdownStroke.Parent = MultiDropdownFrame
    
    -- Selected items display
    local selectedValues = defaults or {}
    
    local function GetDisplayText()
        if #selectedValues == 0 then
            return text .. ": None Selected"
        elseif #selectedValues == 1 then
            return text .. ": " .. selectedValues[1]
        else
            return text .. ": " .. #selectedValues .. " Selected"
        end
    end
    
    -- Main Button
    local MultiDropdownButton = Instance.new("TextButton")
    MultiDropdownButton.Parent = MultiDropdownFrame
    MultiDropdownButton.BackgroundTransparency = 1
    MultiDropdownButton.Size = UDim2.new(1, -35, 1, 0)
    MultiDropdownButton.Position = UDim2.new(0, 10, 0, 0)
    MultiDropdownButton.Font = Enum.Font.Gotham
    MultiDropdownButton.Text = GetDisplayText()
    MultiDropdownButton.TextColor3 = Config.Colors.Text
    MultiDropdownButton.TextSize = 11
    MultiDropdownButton.TextXAlignment = Enum.TextXAlignment.Left
    MultiDropdownButton.TextTruncate = Enum.TextTruncate.AtEnd
    MultiDropdownButton.ZIndex = 2
    
    -- Enhanced Arrow with Animation
    local Arrow = Instance.new("TextLabel")
    Arrow.Parent = MultiDropdownFrame
    Arrow.BackgroundTransparency = 1
    Arrow.Size = UDim2.new(0, 25, 1, 0)
    Arrow.Position = UDim2.new(1, -25, 0, 0)
    Arrow.Font = Enum.Font.GothamBold
    Arrow.Text = "▼"
    Arrow.TextColor3 = Config.Colors.TextSecondary
    Arrow.TextSize = 10
    Arrow.TextXAlignment = Enum.TextXAlignment.Center
    Arrow.ZIndex = 2
    
    -- Create Options Frame with Enhanced Design
    local OptionsFrame = Instance.new("Frame")
    OptionsFrame.Name = text .. "_MultiOptions"
    OptionsFrame.Parent = ScreenGui
    OptionsFrame.BackgroundColor3 = Config.Colors.Primary
    OptionsFrame.BorderSizePixel = 0
    OptionsFrame.Size = UDim2.new(0, MultiDropdownFrame.AbsoluteSize.X, 0, math.min(#options * 28 + 10, 200))
    OptionsFrame.Visible = false
    OptionsFrame.ZIndex = 1000
    
    local OptionsCorner = Instance.new("UICorner")
    OptionsCorner.CornerRadius = UDim.new(0, 6)
    OptionsCorner.Parent = OptionsFrame
    
    local OptionsStroke = Instance.new("UIStroke")
    OptionsStroke.Color = Config.Colors.Accent
    OptionsStroke.Thickness = 1.5
    OptionsStroke.Transparency = 0.3
    OptionsStroke.Parent = OptionsFrame
    
    -- Options gradient background
    local OptionsGradient = Instance.new("UIGradient")
    OptionsGradient.Parent = OptionsFrame
    OptionsGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Config.Colors.Primary),
        ColorSequenceKeypoint.new(1, Config.Colors.Secondary)
    }
    OptionsGradient.Rotation = 90
    
    -- Enhanced ScrollFrame for options
    local OptionsScrollFrame = Instance.new("ScrollingFrame")
    OptionsScrollFrame.Parent = OptionsFrame
    OptionsScrollFrame.BackgroundTransparency = 1
    OptionsScrollFrame.Size = UDim2.new(1, -8, 1, -8)
    OptionsScrollFrame.Position = UDim2.new(0, 4, 0, 4)
    OptionsScrollFrame.ScrollBarThickness = 4
    OptionsScrollFrame.ScrollBarImageColor3 = Config.Colors.Accent
    OptionsScrollFrame.BorderSizePixel = 0
    OptionsScrollFrame.CanvasSize = UDim2.new(0, 0, 0, #options * 28)
    OptionsScrollFrame.ZIndex = 1001
    
    local OptionsLayout = Instance.new("UIListLayout")
    OptionsLayout.Parent = OptionsScrollFrame
    OptionsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    OptionsLayout.Padding = UDim.new(0, 2)
    
    local isOpen = false
    
    -- Function to update position with enhanced positioning
    local function UpdateOptionsPosition()
        local dropdownPos = MultiDropdownFrame.AbsolutePosition
        local dropdownSize = MultiDropdownFrame.AbsoluteSize
        
        local newX = dropdownPos.X
        local newY = dropdownPos.Y + dropdownSize.Y + 4
        
        -- Screen boundary checks
        local screenHeight = ScreenGui.AbsoluteSize.Y
        local optionsHeight = OptionsFrame.AbsoluteSize.Y
        local screenWidth = ScreenGui.AbsoluteSize.X
        local optionsWidth = OptionsFrame.AbsoluteSize.X
        
        if newY + optionsHeight > screenHeight then
            newY = dropdownPos.Y - optionsHeight - 4
        end
        
        if newX + optionsWidth > screenWidth then
            newX = screenWidth - optionsWidth - 10
        end
        
        OptionsFrame.Position = UDim2.new(0, newX, 0, newY)
        OptionsFrame.Size = UDim2.new(0, dropdownSize.X, 0, math.min(#options * 28 + 10, 200))
    end
    
    -- Create enhanced option buttons with checkboxes
    for i, option in pairs(options) do
        local OptionContainer = Instance.new("Frame")
        OptionContainer.Parent = OptionsScrollFrame
        OptionContainer.BackgroundColor3 = Config.Colors.Secondary
        OptionContainer.BackgroundTransparency = 0.3
        OptionContainer.BorderSizePixel = 0
        OptionContainer.Size = UDim2.new(1, 0, 0, 26)
        OptionContainer.LayoutOrder = i
        OptionContainer.ZIndex = 1002
        
        local OptionCorner = Instance.new("UICorner")
        OptionCorner.CornerRadius = UDim.new(0, 4)
        OptionCorner.Parent = OptionContainer
        
        -- Checkbox
        local Checkbox = Instance.new("Frame")
        Checkbox.Parent = OptionContainer
        Checkbox.BackgroundColor3 = Config.Colors.BorderHover
        Checkbox.BorderSizePixel = 0
        Checkbox.Size = UDim2.new(0, 16, 0, 16)
        Checkbox.Position = UDim2.new(0, 8, 0.5, -8)
        Checkbox.ZIndex = 1003
        
        local CheckboxCorner = Instance.new("UICorner")
        CheckboxCorner.CornerRadius = UDim.new(0, 3)
        CheckboxCorner.Parent = Checkbox
        
        local CheckboxStroke = Instance.new("UIStroke")
        CheckboxStroke.Color = Config.Colors.Border
        CheckboxStroke.Thickness = 1
        CheckboxStroke.Parent = Checkbox
        
        -- Checkmark
        local Checkmark = Instance.new("TextLabel")
        Checkmark.Parent = Checkbox
        Checkmark.BackgroundTransparency = 1
        Checkmark.Size = UDim2.new(1, 0, 1, 0)
        Checkmark.Font = Enum.Font.GothamBold
        Checkmark.Text = "✓"
        Checkmark.TextColor3 = Config.Colors.Text
        Checkmark.TextSize = 12
        Checkmark.TextXAlignment = Enum.TextXAlignment.Center
        Checkmark.Visible = false
        Checkmark.ZIndex = 1004
        
        -- Option Button
        local OptionButton = Instance.new("TextButton")
        OptionButton.Parent = OptionContainer
        OptionButton.BackgroundTransparency = 1
        OptionButton.Size = UDim2.new(1, -32, 1, 0)
        OptionButton.Position = UDim2.new(0, 30, 0, 0)
        OptionButton.Font = Enum.Font.Gotham
        OptionButton.Text = option
        OptionButton.TextColor3 = Config.Colors.Text
        OptionButton.TextSize = 10
        OptionButton.TextXAlignment = Enum.TextXAlignment.Left
        OptionButton.ZIndex = 1003
        
        -- Check if option is selected by default
        local isSelected = false
        for _, selected in pairs(selectedValues) do
            if selected == option then
                isSelected = true
                Checkmark.Visible = true
                Checkbox.BackgroundColor3 = Config.Colors.Success
                CheckboxStroke.Color = Config.Colors.Success
                break
            end
        end
        
        -- Option click handler
        OptionButton.MouseButton1Click:Connect(function()
            isSelected = not isSelected
            
            if isSelected then
                -- Add to selected values
                table.insert(selectedValues, option)
                Checkmark.Visible = true
                
                TweenService:Create(Checkbox, Config.Animations.Normal, {
                    BackgroundColor3 = Config.Colors.Success
                }):Play()
                TweenService:Create(CheckboxStroke, Config.Animations.Normal, {
                    Color = Config.Colors.Success
                }):Play()
                
                -- Scale animation for checkmark
                Checkmark.Size = UDim2.new(0, 0, 0, 0)
                TweenService:Create(Checkmark, Config.Animations.Bounce, {
                    Size = UDim2.new(1, 0, 1, 0)
                }):Play()
            else
                -- Remove from selected values
                for i, selected in pairs(selectedValues) do
                    if selected == option then
                        table.remove(selectedValues, i)
                        break
                    end
                end
                
                TweenService:Create(Checkmark, Config.Animations.Fast, {
                    Size = UDim2.new(0, 0, 0, 0)
                }):Play()
                
                spawn(function()
                    wait(0.15)
                    Checkmark.Visible = false
                    Checkmark.Size = UDim2.new(1, 0, 1, 0)
                end)
                
                TweenService:Create(Checkbox, Config.Animations.Normal, {
                    BackgroundColor3 = Config.Colors.BorderHover
                }):Play()
                TweenService:Create(CheckboxStroke, Config.Animations.Normal, {
                    Color = Config.Colors.Border
                }):Play()
            end
            
            -- Update display text
            MultiDropdownButton.Text = GetDisplayText()
            
            if callback then
                pcall(callback, selectedValues)
            end
        end)
        
        -- Enhanced hover effects
        OptionButton.MouseEnter:Connect(function()
            TweenService:Create(OptionContainer, Config.Animations.Fast, {
                BackgroundColor3 = Config.Colors.BorderHover,
                BackgroundTransparency = 0.1
            }):Play()
        end)
        
        OptionButton.MouseLeave:Connect(function()
            TweenService:Create(OptionContainer, Config.Animations.Fast, {
                BackgroundColor3 = Config.Colors.Secondary,
                BackgroundTransparency = 0.3
            }):Play()
        end)
    end
    
    -- Main dropdown click handler with enhanced animations
    MultiDropdownButton.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        
        if isOpen then
            UpdateOptionsPosition()
            OptionsFrame.Visible = true
            
            -- Enhanced opening animation
            OptionsFrame.Size = UDim2.new(0, MultiDropdownFrame.AbsoluteSize.X, 0, 0)
            OptionsFrame.BackgroundTransparency = 1
            
            TweenService:Create(OptionsFrame, Config.Animations.Bounce, {
                Size = UDim2.new(0, MultiDropdownFrame.AbsoluteSize.X, 0, math.min(#options * 28 + 10, 200)),
                BackgroundTransparency = 0
            }):Play()
            
            TweenService:Create(Arrow, Config.Animations.Normal, {
                Rotation = 180,
                TextColor3 = Config.Colors.Accent
            }):Play()
            
            TweenService:Create(MultiDropdownStroke, Config.Animations.Fast, {
                Color = Config.Colors.Accent,
                Transparency = 0.2
            }):Play()
        else
            TweenService:Create(OptionsFrame, Config.Animations.Normal, {
                Size = UDim2.new(0, MultiDropdownFrame.AbsoluteSize.X, 0, 0),
                BackgroundTransparency = 1
            }):Play()
            
            TweenService:Create(Arrow, Config.Animations.Normal, {
                Rotation = 0,
                TextColor3 = Config.Colors.TextSecondary
            }):Play()
            
            TweenService:Create(MultiDropdownStroke, Config.Animations.Fast, {
                Color = Config.Colors.Border,
                Transparency = 0.5
            }):Play()
            
            spawn(function()
                wait(0.25)
                OptionsFrame.Visible = false
            end)
        end
    end)
    
    -- Close dropdown when clicking elsewhere
    UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            if isOpen then
                local mousePos = input.Position
                local dropdownPos = MultiDropdownFrame.AbsolutePosition
                local dropdownSize = MultiDropdownFrame.AbsoluteSize
                local optionsPos = OptionsFrame.AbsolutePosition
                local optionsSize = OptionsFrame.AbsoluteSize
                
                local clickInDropdown = mousePos.X >= dropdownPos.X and mousePos.X <= dropdownPos.X + dropdownSize.X and
                                       mousePos.Y >= dropdownPos.Y and mousePos.Y <= dropdownPos.Y + dropdownSize.Y
                
                local clickInOptions = mousePos.X >= optionsPos.X and mousePos.X <= optionsPos.X + optionsSize.X and
                                      mousePos.Y >= optionsPos.Y and mousePos.Y <= optionsPos.Y + optionsSize.Y
                
                if not clickInDropdown and not clickInOptions then
                    isOpen = false
                    TweenService:Create(OptionsFrame, Config.Animations.Normal, {
                        Size = UDim2.new(0, MultiDropdownFrame.AbsoluteSize.X, 0, 0),
                        BackgroundTransparency = 1
                    }):Play()
                    
                    TweenService:Create(Arrow, Config.Animations.Normal, {
                        Rotation = 0,
                        TextColor3 = Config.Colors.TextSecondary
                    }):Play()
                    
                    TweenService:Create(MultiDropdownStroke, Config.Animations.Fast, {
                        Color = Config.Colors.Border,
                        Transparency = 0.5
                    }):Play()
                    
                    spawn(function()
                        wait(0.25)
                        OptionsFrame.Visible = false
                    end)
                end
            end
        end
    end)
    
    -- Update position when parent moves
    spawn(function()
        while MultiDropdownFrame.Parent do
            if isOpen then
                UpdateOptionsPosition()
            end
            wait(0.1)
        end
    end)
    
    -- Cleanup
    MultiDropdownFrame.AncestryChanged:Connect(function()
        if not MultiDropdownFrame.Parent then
            OptionsFrame:Destroy()
        end
    end)
    
    -- Enhanced hover effects
    MultiDropdownButton.MouseEnter:Connect(function()
        if not isOpen then
            TweenService:Create(MultiDropdownFrame, Config.Animations.Fast, {
                BackgroundColor3 = Config.Colors.BorderHover,
                BackgroundTransparency = 0.05
            }):Play()
            TweenService:Create(MultiDropdownStroke, Config.Animations.Fast, {
                Color = Config.Colors.Accent,
                Transparency = 0.3
            }):Play()
        end
    end)
    
    MultiDropdownButton.MouseLeave:Connect(function()
        if not isOpen then
            TweenService:Create(MultiDropdownFrame, Config.Animations.Fast, {
                BackgroundColor3 = Config.Colors.Secondary,
                BackgroundTransparency = 0.1
            }):Play()
            TweenService:Create(MultiDropdownStroke, Config.Animations.Fast, {
                Color = Config.Colors.Border,
                Transparency = 0.5
            }):Play()
        end
    end)
    
    table.insert(tab.Components, MultiDropdownFrame)
    
    tab.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tab.Content.Size = UDim2.new(1, 0, 0, tab.Layout.AbsoluteContentSize.Y)
        ContentScrollFrame.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y)
    end)
    
    return {
        MultiDropdown = MultiDropdownFrame,
        SetValues = function(values)
            selectedValues = values or {}
            MultiDropdownButton.Text = GetDisplayText()
            
            -- Update checkboxes
            for _, container in pairs(OptionsScrollFrame:GetChildren()) do
                if container:IsA("Frame") then
                    local optionButton = container:FindFirstChild("TextButton")
                    local checkbox = container:FindFirstChild("Frame")
                    if optionButton and checkbox then
                        local checkmark = checkbox:FindFirstChild("TextLabel")
                        local checkboxStroke = checkbox:FindFirstChild("UIStroke")
                        local isSelected = false
                        
                        for _, selected in pairs(selectedValues) do
                            if selected == optionButton.Text then
                                isSelected = true
                                break
                            end
                        end
                        
                        if isSelected then
                            checkmark.Visible = true
                            checkbox.BackgroundColor3 = Config.Colors.Success
                            checkboxStroke.Color = Config.Colors.Success
                        else
                            checkmark.Visible = false
                            checkbox.BackgroundColor3 = Config.Colors.BorderHover
                            checkboxStroke.Color = Config.Colors.Border
                        end
                    end
                end
            end
        end,
        GetValues = function()
            return selectedValues
        end
    }
end

-- Enhanced TextBox with Better Design
function Library:CreateTextBox(tab, text, placeholder, callback)
    local TextBoxFrame = Instance.new("Frame")
    TextBoxFrame.Name = text
    TextBoxFrame.Parent = tab.Content
    TextBoxFrame.BackgroundColor3 = Config.Colors.Secondary
    TextBoxFrame.BackgroundTransparency = 0.1
    TextBoxFrame.BorderSizePixel = 0
    TextBoxFrame.Size = UDim2.new(1, 0, 0, 50)
    TextBoxFrame.LayoutOrder = #tab.Components + 1
    
    local TextBoxCorner = Instance.new("UICorner")
    TextBoxCorner.CornerRadius = UDim.new(0, 6)
    TextBoxCorner.Parent = TextBoxFrame
    
    local TextBoxStroke = Instance.new("UIStroke")
    TextBoxStroke.Color = Config.Colors.Border
    TextBoxStroke.Thickness = 1
    TextBoxStroke.Transparency = 0.5
    TextBoxStroke.Parent = TextBoxFrame
    
    -- Label
    local TextBoxLabel = Instance.new("TextLabel")
    TextBoxLabel.Parent = TextBoxFrame
    TextBoxLabel.BackgroundTransparency = 1
    TextBoxLabel.Size = UDim2.new(1, -20, 0, 20)
    TextBoxLabel.Position = UDim2.new(0, 10, 0, 5)
    TextBoxLabel.Font = Enum.Font.Gotham
    TextBoxLabel.Text = text
    TextBoxLabel.TextColor3 = Config.Colors.Text
    TextBoxLabel.TextSize = 11
    TextBoxLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Enhanced TextBox
    local TextBox = Instance.new("TextBox")
    TextBox.Parent = TextBoxFrame
    TextBox.BackgroundColor3 = Config.Colors.Primary
    TextBox.BackgroundTransparency = 0.3
    TextBox.BorderSizePixel = 0
    TextBox.Size = UDim2.new(1, -20, 0, 20)
    TextBox.Position = UDim2.new(0, 10, 1, -25)
    TextBox.Font = Enum.Font.Gotham
    TextBox.PlaceholderText = placeholder or "Enter text..."
    TextBox.Text = ""
    TextBox.TextColor3 = Config.Colors.Text
    TextBox.PlaceholderColor3 = Config.Colors.TextMuted
    TextBox.TextSize = 10
    TextBox.TextXAlignment = Enum.TextXAlignment.Left
    TextBox.ClearButtonEnabled = true
    
    local TextBoxInputCorner = Instance.new("UICorner")
    TextBoxInputCorner.CornerRadius = UDim.new(0, 4)
    TextBoxInputCorner.Parent = TextBox
    
    local TextBoxInputStroke = Instance.new("UIStroke")
    TextBoxInputStroke.Color = Config.Colors.Border
    TextBoxInputStroke.Thickness = 1
    TextBoxInputStroke.Transparency = 0.7
    TextBoxInputStroke.Parent = TextBox
    
    -- Add padding to textbox
    local TextBoxPadding = Instance.new("UIPadding")
    TextBoxPadding.Parent = TextBox
    TextBoxPadding.PaddingLeft = UDim.new(0, 8)
    TextBoxPadding.PaddingRight = UDim.new(0, 8)
    
    -- Enhanced focus effects
    TextBox.Focused:Connect(function()
        TweenService:Create(TextBoxInputStroke, Config.Animations.Fast, {
            Color = Config.Colors.Accent,
            Transparency = 0.2
        }):Play()
        TweenService:Create(TextBoxStroke, Config.Animations.Fast, {
            Color = Config.Colors.Accent,
            Transparency = 0.3
        }):Play()
        TweenService:Create(TextBox, Config.Animations.Fast, {
            BackgroundTransparency = 0.1
        }):Play()
    end)
    
    TextBox.FocusLost:Connect(function(enterPressed)
        TweenService:Create(TextBoxInputStroke, Config.Animations.Fast, {
            Color = Config.Colors.Border,
            Transparency = 0.7
        }):Play()
        TweenService:Create(TextBoxStroke, Config.Animations.Fast, {
            Color = Config.Colors.Border,
            Transparency = 0.5
        }):Play()
        TweenService:Create(TextBox, Config.Animations.Fast, {
            BackgroundTransparency = 0.3
        }):Play()
        
        if callback and (enterPressed or TextBox.Text ~= "") then
            pcall(callback, TextBox.Text)
        end
    end)
    
    table.insert(tab.Components, TextBoxFrame)
    
    tab.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tab.Content.Size = UDim2.new(1, 0, 0, tab.Layout.AbsoluteContentSize.Y)
        ContentScrollFrame.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y)
    end)
    
    return {
        TextBox = TextBoxFrame,
        GetText = function() return TextBox.Text end,
        SetText = function(newText) TextBox.Text = newText end
    }
end

-- Enhanced Keybind System
function Library:CreateKeybind(tab, text, defaultKey, callback)
    local KeybindFrame = Instance.new("Frame")
    KeybindFrame.Name = text
    KeybindFrame.Parent = tab.Content
    KeybindFrame.BackgroundColor3 = Config.Colors.Secondary
    KeybindFrame.BackgroundTransparency = 0.1
    KeybindFrame.BorderSizePixel = 0
    KeybindFrame.Size = UDim2.new(1, 0, 0, 32)
    KeybindFrame.LayoutOrder = #tab.Components + 1
    
    local KeybindCorner = Instance.new("UICorner")
    KeybindCorner.CornerRadius = UDim.new(0, 6)
    KeybindCorner.Parent = KeybindFrame
    
    local KeybindStroke = Instance.new("UIStroke")
    KeybindStroke.Color = Config.Colors.Border
    KeybindStroke.Thickness = 1
    KeybindStroke.Transparency = 0.5
    KeybindStroke.Parent = KeybindFrame
    
    local KeybindLabel = Instance.new("TextLabel")
    KeybindLabel.Parent = KeybindFrame
    KeybindLabel.BackgroundTransparency = 1
    KeybindLabel.Size = UDim2.new(1, -80, 1, 0)
    KeybindLabel.Position = UDim2.new(0, 12, 0, 0)
    KeybindLabel.Font = Enum.Font.Gotham
    KeybindLabel.Text = text
    KeybindLabel.TextColor3 = Config.Colors.Text
    KeybindLabel.TextSize = 11
    KeybindLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    local currentKey = defaultKey or Enum.KeyCode.Unknown
    local isBinding = false
    
    local KeybindButton = Instance.new("TextButton")
    KeybindButton.Parent = KeybindFrame
    KeybindButton.BackgroundColor3 = Config.Colors.Primary
    KeybindButton.BackgroundTransparency = 0.2
    KeybindButton.BorderSizePixel = 0
    KeybindButton.Size = UDim2.new(0, 65, 0, 24)
    KeybindButton.Position = UDim2.new(1, -70, 0.5, -12)
    KeybindButton.Font = Enum.Font.GothamBold
    KeybindButton.Text = currentKey.Name
    KeybindButton.TextColor3 = Config.Colors.Text
    KeybindButton.TextSize = 9
    KeybindButton.TextScaled = true
    
    local KeybindButtonCorner = Instance.new("UICorner")
    KeybindButtonCorner.CornerRadius = UDim.new(0, 4)
    KeybindButtonCorner.Parent = KeybindButton
    
    local KeybindButtonStroke = Instance.new("UIStroke")
    KeybindButtonStroke.Color = Config.Colors.Accent
    KeybindButtonStroke.Thickness = 1
    KeybindButtonStroke.Transparency = 0.5
    KeybindButtonStroke.Parent = KeybindButton
    
    -- Keybind functionality
    KeybindButton.MouseButton1Click:Connect(function()
        if not isBinding then
            isBinding = true
            KeybindButton.Text = "Press Key..."
            KeybindButton.TextColor3 = Config.Colors.Warning
            
            TweenService:Create(KeybindButtonStroke, Config.Animations.Fast, {
                Color = Config.Colors.Warning,
                Transparency = 0.2
            }):Play()
            
            local connection
            connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
                if gameProcessed then return end
                
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    currentKey = input.KeyCode
                    KeybindButton.Text = currentKey.Name
                    KeybindButton.TextColor3 = Config.Colors.Text
                    isBinding = false
                    
                    TweenService:Create(KeybindButtonStroke, Config.Animations.Fast, {
                        Color = Config.Colors.Accent,
                        Transparency = 0.5
                    }):Play()
                    
                    connection:Disconnect()
                end
            end)
        end
    end)
    
    -- Key detection for activation
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed or isBinding then return end
        
        if input.KeyCode == currentKey and currentKey ~= Enum.KeyCode.Unknown then
            if callback then
                pcall(callback)
            end
            
            -- Visual feedback
            TweenService:Create(KeybindButton, Config.Animations.Fast, {
                BackgroundColor3 = Config.Colors.Success
            }):Play()
            
            spawn(function()
                wait(0.2)
                TweenService:Create(KeybindButton, Config.Animations.Fast, {
                    BackgroundColor3 = Config.Colors.Primary
                }):Play()
            end)
        end
    end)
    
    table.insert(tab.Components, KeybindFrame)
    
    tab.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tab.Content.Size = UDim2.new(1, 0, 0, tab.Layout.AbsoluteContentSize.Y)
        ContentScrollFrame.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y)
    end)
    
    return {
        Keybind = KeybindFrame,
        SetKey = function(key)
            currentKey = key
            KeybindButton.Text = key.Name
        end,
        GetKey = function()
            return currentKey
        end
    }
end

-- Enhanced Control Button Functions
SettingsButton.MouseButton1Click:Connect(function()
    Library:CreateNotification("Settings", "Settings panel opened", 3, "Info")
    -- Add settings functionality here
end)

MinimizeButton.MouseButton1Click:Connect(function()
    ScreenGui.Enabled = false
    Library:CreateNotification("Minimized", "Hub minimized to system tray", 2, "Info")
    
    -- Update circle toggle if it exists
    local fryzerGUI = PlayerGui:FindFirstChild("FryzerToggleGUI")
    if fryzerGUI and fryzerGUI:FindFirstChild("CircleFrame") then
        local circleFrame = fryzerGUI.CircleFrame
        TweenService:Create(circleFrame, Config.Animations.Normal, {
            BackgroundColor3 = Config.Colors.BorderHover,
            BorderColor3 = Config.Colors.Border
        }):Play()
    end
end)

-- Enhanced Close Dialog
local function CreateEnhancedConfirmDialog()
    local ConfirmGui = Instance.new("ScreenGui")
    ConfirmGui.Name = "EnhancedConfirmDialog"
    ConfirmGui.Parent = PlayerGui
    ConfirmGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ConfirmGui.DisplayOrder = 2000
    
    -- Animated blur background
    local BlurBackground = Instance.new("Frame")
    BlurBackground.Parent = ConfirmGui
    BlurBackground.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    BlurBackground.BackgroundTransparency = 1
    BlurBackground.Size = UDim2.new(1, 0, 1, 0)
    
    TweenService:Create(BlurBackground, Config.Animations.Normal, {
        BackgroundTransparency = 0.5
    }):Play()
    
    local ConfirmFrame = Instance.new("Frame")
    ConfirmFrame.Parent = ConfirmGui
    ConfirmFrame.BackgroundColor3 = Config.Colors.Primary
    ConfirmFrame.BorderSizePixel = 0
    ConfirmFrame.Size = UDim2.new(0, 350, 0, 140)
    ConfirmFrame.Position = UDim2.new(0.5, -175, 0.5, -70)
    
    local ConfirmCorner = Instance.new("UICorner")
    ConfirmCorner.CornerRadius = UDim.new(0, 8)
    ConfirmCorner.Parent = ConfirmFrame
    
    local ConfirmStroke = Instance.new("UIStroke")
    ConfirmStroke.Color = Config.Colors.Error
    ConfirmStroke.Thickness = 2
    ConfirmStroke.Parent = ConfirmFrame
    
    local ConfirmGradient = Instance.new("UIGradient")
    ConfirmGradient.Parent = ConfirmFrame
    ConfirmGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Config.Colors.Primary),
        ColorSequenceKeypoint.new(1, Config.Colors.Secondary)
    }
    ConfirmGradient.Rotation = 90
    
    local ConfirmTitle = Instance.new("TextLabel")
    ConfirmTitle.Parent = ConfirmFrame
    ConfirmTitle.BackgroundTransparency = 1
    ConfirmTitle.Size = UDim2.new(1, 0, 0, 35)
    ConfirmTitle.Position = UDim2.new(0, 0, 0, 10)
    ConfirmTitle.Font = Enum.Font.GothamBold
    ConfirmTitle.Text = "⚠️ Confirm Close"
    ConfirmTitle.TextColor3 = Config.Colors.Text
    ConfirmTitle.TextSize = 16
    
    local ConfirmText = Instance.new("TextLabel")
    ConfirmText.Parent = ConfirmFrame
    ConfirmText.BackgroundTransparency = 1
    ConfirmText.Size = UDim2.new(1, -20, 0, 30)
    ConfirmText.Position = UDim2.new(0, 10, 0, 45)
    ConfirmText.Font = Enum.Font.Gotham
    ConfirmText.Text = "Are you sure you want to close Fryzer Hub?\nAll unsaved settings will be lost."
    ConfirmText.TextColor3 = Config.Colors.TextSecondary
    ConfirmText.TextSize = 11
    ConfirmText.TextWrapped = true
    
    local ButtonsFrame = Instance.new("Frame")
    ButtonsFrame.Parent = ConfirmFrame
    ButtonsFrame.BackgroundTransparency = 1
    ButtonsFrame.Size = UDim2.new(1, -20, 0, 35)
    ButtonsFrame.Position = UDim2.new(0, 10, 1, -45)
    
    local CancelButton = Instance.new("TextButton")
    CancelButton.Parent = ButtonsFrame
    CancelButton.BackgroundColor3 = Config.Colors.Secondary
    CancelButton.BorderSizePixel = 0
    CancelButton.Size = UDim2.new(0.45, 0, 1, 0)
    CancelButton.Position = UDim2.new(0, 0, 0, 0)
    CancelButton.Font = Enum.Font.GothamBold
    CancelButton.Text = "Cancel"
    CancelButton.TextColor3 = Config.Colors.Text
    CancelButton.TextSize = 12
    
    local CancelCorner = Instance.new("UICorner")
    CancelCorner.CornerRadius = UDim.new(0, 6)
    CancelCorner.Parent = CancelButton
    
    local ConfirmCloseButton = Instance.new("TextButton")
    ConfirmCloseButton.Parent = ButtonsFrame
    ConfirmCloseButton.BackgroundColor3 = Config.Colors.Error
    ConfirmCloseButton.BorderSizePixel = 0
    ConfirmCloseButton.Size = UDim2.new(0.45, 0, 1, 0)
    ConfirmCloseButton.Position = UDim2.new(0.55, 0, 0, 0)
    ConfirmCloseButton.Font = Enum.Font.GothamBold
    ConfirmCloseButton.Text = "Close Hub"
    ConfirmCloseButton.TextColor3 = Config.Colors.Text
    ConfirmCloseButton.TextSize = 12
    
    local ConfirmCloseCorner = Instance.new("UICorner")
    ConfirmCloseCorner.CornerRadius = UDim.new(0, 6)
    ConfirmCloseCorner.Parent = ConfirmCloseButton
    
    -- Animate in with bounce
    ConfirmFrame.Size = UDim2.new(0, 0, 0, 0)
    TweenService:Create(ConfirmFrame, Config.Animations.Elastic, {
        Size = UDim2.new(0, 350, 0, 140)
    }):Play()
    
    CancelButton.MouseButton1Click:Connect(function()
        TweenService:Create(BlurBackground, Config.Animations.Fast, {
            BackgroundTransparency = 1
        }):Play()
        TweenService:Create(ConfirmFrame, Config.Animations.Fast, {
            Size = UDim2.new(0, 0, 0, 0)
        }):Play()
        
        spawn(function()
            wait(0.2)
            ConfirmGui:Destroy()
        end)
    end)
    
    ConfirmCloseButton.MouseButton1Click:Connect(function()
        -- Close everything
        ScreenGui:Destroy()
        ConfirmGui:Destroy()
        
        local fryzerGUI = PlayerGui:FindFirstChild("FryzerToggleGUI")
        if fryzerGUI then
            fryzerGUI:Destroy()
        end
        
        Library:CreateNotification("Goodbye!", "Fryzer Hub closed successfully", 3, "Success")
    end)
    
    -- Enhanced hover effects
    CancelButton.MouseEnter:Connect(function()
        TweenService:Create(CancelButton, Config.Animations.Fast, {
            BackgroundColor3 = Config.Colors.BorderHover
        }):Play()
    end)
    CancelButton.MouseLeave:Connect(function()
        TweenService:Create(CancelButton, Config.Animations.Fast, {
            BackgroundColor3 = Config.Colors.Secondary
        }):Play()
    end)
    
    ConfirmCloseButton.MouseEnter:Connect(function()
        TweenService:Create(ConfirmCloseButton, Config.Animations.Fast, {
            BackgroundColor3 = Color3.fromRGB(220, 50, 50)
        }):Play()
    end)
    ConfirmCloseButton.MouseLeave:Connect(function()
        TweenService:Create(ConfirmCloseButton, Config.Animations.Fast, {
            BackgroundColor3 = Config.Colors.Error
        }):Play()
    end)
end

CloseButton.MouseButton1Click:Connect(function()
    CreateEnhancedConfirmDialog()
end)

-- Enhanced Control Button Hover Effects
local function CreateControlHoverEffect(button, hoverColor)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, Config.Animations.Fast, {
            BackgroundTransparency = 0.3,
            TextColor3 = hoverColor
        }):Play()
        
        -- Scale effect
        TweenService:Create(button, Config.Animations.Fast, {
            Size = button.Size + UDim2.new(0, 2, 0, 2)
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, Config.Animations.Fast, {
            BackgroundTransparency = 0.9,
            TextColor3 = Config.Colors.Text
        }):Play()
        
        TweenService:Create(button, Config.Animations.Fast, {
            Size = button.Size - UDim2.new(0, 2, 0, 2)
        }):Play()
    end)
end

CreateControlHoverEffect(SettingsButton, Config.Colors.Accent)
CreateControlHoverEffect(MinimizeButton, Config.Colors.Warning)
CreateControlHoverEffect(CloseButton, Config.Colors.Error)

-- Enhanced Entrance Animation with Particles
local function CreateEntranceEffect()
    -- Particle system for entrance
    for i = 1, Config.Effects.ParticleCount do
        local Particle = Instance.new("Frame")
        Particle.Parent = ScreenGui
        Particle.BackgroundColor3 = Config.Colors.Accent
        Particle.BorderSizePixel = 0
        Particle.Size = UDim2.new(0, math.random(2, 6), 0, math.random(2, 6))
        Particle.Position = UDim2.new(0.5, math.random(-300, 300), 0.5, math.random(-200, 200))
        Particle.BackgroundTransparency = math.random(30, 70) / 100
        Particle.ZIndex = 1
        
        local ParticleCorner = Instance.new("UICorner")
        ParticleCorner.CornerRadius = UDim.new(1, 0)
        ParticleCorner.Parent = Particle
        
        -- Animate particles
        TweenService:Create(Particle, TweenInfo.new(
            math.random(15, 25) / 10,
            Enum.EasingStyle.Quad,
            Enum.EasingDirection.Out
        ), {
            Position = UDim2.new(0.5, math.random(-50, 50), 0.5, math.random(-50, 50)),
            BackgroundTransparency = 1,
            Size = UDim2.new(0, 0, 0, 0)
        }):Play()
        
        spawn(function()
            wait(2.5)
            Particle:Destroy()
        end)
    end
end

-- Main GUI Entrance Animation
MainContainer.Size = UDim2.new(0, 0, 0, 0)
MainContainer.Position = UDim2.new(0.5, 0, 0.5, 0)
MainContainer.BackgroundTransparency = 1

-- Animate main container
TweenService:Create(MainContainer, Config.Animations.Elastic, {
    Size = UDim2.new(0, 520, 0, 360),
    Position = UDim2.new(0.5, -260, 0.5, -180),
    BackgroundTransparency = 0.05
}):Play()

-- Header animation
HeaderFrame.Size = UDim2.new(0, 0, 0, 50)
spawn(function()
    wait(0.3)
    TweenService:Create(HeaderFrame, Config.Animations.Bounce, {
        Size = UDim2.new(1, 0, 0, 50)
    }):Play()
end)

-- Create entrance effect
CreateEntranceEffect()

-- Welcome notification
spawn(function()
    wait(1)
    Library:CreateNotification("Welcome!", "Fryzer Hub loaded successfully", 4, "Success")
end)

-- Example Usage and Demo Content
spawn(function()
    wait(0.5)
    
    -- Main Tab
    local MainTab = Library:CreateTab("Main", "🏠")
    Library:CreateSection(MainTab, "Player Features")
    
    Library:CreateButton(MainTab, "Super Speed", function()
        Library:CreateNotification("Speed", "Super speed activated!", 3, "Success")
    end)
    
    Library:CreateToggle(MainTab, "God Mode", false, function(state)
        Library:CreateNotification("God Mode", state and "Enabled" or "Disabled", 2, state and "Success" or "Warning")
    end)
    
    Library:CreateSlider(MainTab, "Walk Speed", 16, 100, 16, function(value)
        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
        end
    end)
    
    Library:CreateMultiDropdown(MainTab, "Player Abilities", {
        "Infinite Jump", "No Fall Damage", "Super Jump", "Fly Mode", "Noclip", "Speed Boost"
    }, {"Infinite Jump"}, function(selected)
        Library:CreateNotification("Abilities", #selected .. " abilities selected", 2, "Info")
    end)
    
    -- Combat Tab
    local CombatTab = Library:CreateTab("Combat", "⚔️")
    Library:CreateSection(CombatTab, "Combat Features")
    
    Library:CreateButton(CombatTab, "Auto Attack", function()
        Library:CreateNotification("Combat", "Auto attack enabled!", 3, "Success")
    end)
    
    Library:CreateToggle(CombatTab, "Aimbot", false, function(state)
        Library:CreateNotification("Aimbot", state and "Enabled" or "Disabled", 2, state and "Success" or "Warning")
    end)
    
    Library:CreateKeybind(CombatTab, "Combat Toggle", Enum.KeyCode.C, function()
        Library:CreateNotification("Keybind", "Combat mode toggled!", 2, "Info")
    end)
    
    -- Visual Tab
    local VisualTab = Library:CreateTab("Visuals", "👁️")
    Library:CreateSection(VisualTab, "ESP & Visuals")
    
    Library:CreateToggle(VisualTab, "Player ESP", false, function(state)
        Library:CreateNotification("ESP", "Player ESP " .. (state and "enabled" or "disabled"), 2, "Info")
    end)
    
    Library:CreateMultiDropdown(VisualTab, "ESP Elements", {
        "Names", "Health", "Distance", "Boxes", "Tracers", "Skeletons"
    }, {"Names", "Health"}, function(selected)
        Library:CreateNotification("ESP", "Updated ESP elements", 2, "Success")
    end)
    
    -- Settings Tab
    local SettingsTab = Library:CreateTab("Settings", "⚙️")
    Library:CreateSection(SettingsTab, "Configuration")
    
    Library:CreateTextBox(SettingsTab, "Config Name", "Enter config name...", function(text)
        Library:CreateNotification("Config", "Config saved: " .. text, 3, "Success")
    end)
    
    Library:CreateButton(SettingsTab, "Save Config", function()
        Library:CreateNotification("Config", "Configuration saved successfully!", 3, "Success")
    end)
    
    Library:CreateButton(SettingsTab, "Load Config", function()
        Library:CreateNotification("Config", "Configuration loaded successfully!", 3, "Success")
    end)
    
    -- Credits Tab
    local CreditsTab = Library:CreateTab("Credits", "ℹ️")
    Library:CreateSection(CreditsTab, "Information")
    
    Library:CreateButton(CreditsTab, "Discord Server", function()
        Library:CreateNotification("Discord", "Discord link copied to clipboard!", 3, "Info")
    end)
    
    Library:CreateButton(CreditsTab, "Check Updates", function()
        Library:CreateNotification("Update", "Checking for updates...", 3, "Info")
    end)
end)

-- Performance optimizations
RunService.Heartbeat:Connect(function()
    -- Optimize animations and effects
    if MainContainer.AbsoluteSize.X > 0 then
        -- Update any real-time elements here
    end
end)

return Library
