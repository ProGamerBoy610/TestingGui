-- Auto Farm GUI for Roblox Simulator Games
-- Compatible with most executors (Synapse, KRNL, etc.)

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Configuration
local autoFarmEnabled = false
local farmConnection
local petConnection

-- Create GUI
local function createGUI()
    -- Destroy existing GUI if it exists
    if playerGui:FindFirstChild("AutoFarmGUI") then
        playerGui:FindFirstChild("AutoFarmGUI"):Destroy()
    end

    -- Main ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AutoFarmGUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 300, 0, 180)
    mainFrame.Position = UDim2.new(0, 50, 0, 50)
    mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = screenGui

    -- Corner rounding
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = mainFrame

    -- Gradient
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 30))
    }
    gradient.Rotation = 45
    gradient.Parent = mainFrame

    -- Title
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, 0, 0, 40)
    title.Position = UDim2.new(0, 0, 0, 10)
    title.BackgroundTransparency = 1
    title.Text = "ðŸšœ Auto Farm GUI"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextScaled = true
    title.Font = Enum.Font.GothamBold
    title.Parent = mainFrame

    -- Auto Farm Toggle Button
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0.8, 0, 0, 50)
    toggleButton.Position = UDim2.new(0.1, 0, 0, 60)
    toggleButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
    toggleButton.BorderSizePixel = 0
    toggleButton.Text = "Auto Farm: OFF"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextScaled = true
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.Parent = mainFrame

    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 8)
    toggleCorner.Parent = toggleButton

    -- Status Label
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(0.8, 0, 0, 25)
    statusLabel.Position = UDim2.new(0.1, 0, 0, 120)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "Status: Disabled"
    statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    statusLabel.TextScaled = true
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.Parent = mainFrame

    -- Credit Label
    local creditLabel = Instance.new("TextLabel")
    creditLabel.Name = "CreditLabel"
    creditLabel.Size = UDim2.new(1, 0, 0, 20)
    creditLabel.Position = UDim2.new(0, 0, 1, -25)
    creditLabel.BackgroundTransparency = 1
    creditLabel.Text = "Created by YourName"
    creditLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
    creditLabel.TextScaled = true
    creditLabel.Font = Enum.Font.Gotham
    creditLabel.Parent = mainFrame

    return screenGui, toggleButton, statusLabel
end

-- Function to find collectible items (coins, chests, etc.)
local function findCollectibles()
    local collectibles = {}
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        return collectibles
    end

    local playerPosition = character.HumanoidRootPart.Position
    
    -- Common collectible names in simulator games
    local collectibleNames = {
        "Coin", "Coins", "Chest", "Chests", "Orb", "Orbs", 
        "Diamond", "Diamonds", "Gem", "Gems", "Crystal", "Crystals",
        "Cash", "Money", "Treasure", "Loot", "Pickup", "Collectible"
    }
    
    -- Search in workspace
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") or obj:IsA("Model") then
            for _, name in pairs(collectibleNames) do
                if string.find(obj.Name:lower(), name:lower()) then
                    local objPosition = obj:IsA("Model") and obj.PrimaryPart and obj.PrimaryPart.Position or obj.Position
                    if objPosition then
                        local distance = (playerPosition - objPosition).Magnitude
                        if distance <= 100 then -- Within 100 studs
                            table.insert(collectibles, obj)
                        end
                    end
                end
            end
        end
    end
    
    return collectibles
end

-- Function to find player's pets
local function findPets()
    local pets = {}
    local character = player.Character
    if not character then return pets end
    
    -- Common pet locations and names
    local petLocations = {
        character,
        workspace:FindFirstChild("Pets"),
        workspace:FindFirstChild("PlayerPets"),
        workspace:FindFirstChild(player.Name .. "_Pets"),
        workspace:FindFirstChild(player.Name)
    }
    
    for _, location in pairs(petLocations) do
        if location then
            for _, obj in pairs(location:GetDescendants()) do
                if obj:IsA("Model") and (
                    string.find(obj.Name:lower(), "pet") or 
                    string.find(obj.Name:lower(), "companion") or
                    obj:FindFirstChild("PetScript") or
                    obj:FindFirstChild("IsPet")
                ) then
                    table.insert(pets, obj)
                end
            end
        end
    end
    
    return pets
end

-- Function to send pets to target
local function sendPetsToTarget(target)
    local pets = findPets()
    
    for _, pet in pairs(pets) do
        if pet and pet:FindFirstChild("PrimaryPart") then
            -- Try different common remote events for pet actions
            local remoteEvents = {
                "PetAction", "SendPet", "MovePet", "PetTarget", 
                "CollectWithPet", "PetCollect", "UsePet"
            }
            
            for _, eventName in pairs(remoteEvents) do
                local event = ReplicatedStorage:FindFirstChild(eventName)
                if event and event:IsA("RemoteEvent") then
                    pcall(function()
                        event:FireServer(pet, target)
                    end)
                end
            end
        end
    end
end

-- Function to collect items directly
local function collectItem(item)
    -- Try different collection methods
    local remoteEvents = {
        "Collect", "CollectItem", "PickUp", "Grab", "Take",
        "CollectCoin", "CollectChest", "GetItem", "ClaimItem"
    }
    
    for _, eventName in pairs(remoteEvents) do
        local event = ReplicatedStorage:FindFirstChild(eventName)
        if event and event:IsA("RemoteEvent") then
            pcall(function()
                event:FireServer(item)
            end)
        end
    end
    
    -- Try touching the item (some games use touch detection)
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        pcall(function()
            if item:IsA("BasePart") then
                item:Touch(character.HumanoidRootPart)
            elseif item:IsA("Model") and item.PrimaryPart then
                item.PrimaryPart:Touch(character.HumanoidRootPart)
            end
        end)
    end
end

-- Auto farm function
local function autoFarm()
    if not autoFarmEnabled then return end
    
    local collectibles = findCollectibles()
    
    for _, item in pairs(collectibles) do
        if item and item.Parent then
            -- Send pets to collect
            sendPetsToTarget(item)
            
            -- Also try direct collection
            collectItem(item)
            
            wait(0.1) -- Small delay to prevent spam
        end
    end
end

-- Toggle auto farm
local function toggleAutoFarm(button, statusLabel)
    autoFarmEnabled = not autoFarmEnabled
    
    if autoFarmEnabled then
        button.Text = "Auto Farm: ON"
        button.BackgroundColor3 = Color3.fromRGB(50, 220, 50)
        statusLabel.Text = "Status: Active - Farming..."
        statusLabel.TextColor3 = Color3.fromRGB(50, 255, 50)
        
        -- Start farming loop
        farmConnection = RunService.Heartbeat:Connect(function()
            autoFarm()
        end)
    else
        button.Text = "Auto Farm: OFF"
        button.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
        statusLabel.Text = "Status: Disabled"
        statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
        
        -- Stop farming loop
        if farmConnection then
            farmConnection:Disconnect()
            farmConnection = nil
        end
    end
end

-- Create and setup GUI
local gui, toggleButton, statusLabel = createGUI()

-- Connect toggle button
toggleButton.MouseButton1Click:Connect(function()
    toggleAutoFarm(toggleButton, statusLabel)
end)

-- Add button animations
toggleButton.MouseEnter:Connect(function()
    local tween = TweenService:Create(toggleButton, TweenInfo.new(0.2), {Size = UDim2.new(0.85, 0, 0, 55)})
    tween:Play()
end)

toggleButton.MouseLeave:Connect(function()
    local tween = TweenService:Create(toggleButton, TweenInfo.new(0.2), {Size = UDim2.new(0.8, 0, 0, 50)})
    tween:Play()
end)

print("Auto Farm GUI loaded! GUI should appear on your screen.")
print("Toggle the button to start/stop auto farming.")
print("The script will automatically detect coins, chests, and other collectibles nearby.")
print("Make sure to customize the credit label with your name!")

-- Clean up when player leaves
player.CharacterRemoving:Connect(function()
    if farmConnection then
        farmConnection:Disconnect()
    end
    if petConnection then
        petConnection:Disconnect()
    end
end)
