-- Fryzer Hub - Complete Combined Script
-- Usage: loadstring(game:HttpGet("your-script-url"))()

-- Load circle toggle and main library
loadstring(game:HttpGet("https://raw.githubusercontent.com/ProGamerBoy610/Script-Hub/refs/heads/main/circle%20togle.lua"))()
loadstring(game:HttpGet("https://raw.githubusercontent.com/ProGamerBoy610/Script-Hub/refs/heads/main/maintop.lua"))()

-- Wait for Library to be available
while not Library do
    wait(0.1)
end

-- Create tabs
local infoTab = Library:CreateTab("INFO")
local homeTab = Library:CreateTab("HOME")
local specialTab = Library:CreateTab("SPECIAL")
local mainTab = Library:CreateTab("MAIN")
local spawnerTab = Library:CreateTab("SPAWNER")
local destroyTab = Library:CreateTab("DESTROY")
local settingsTab = Library:CreateTab("SETTINGS")
local playerTab = Library:CreateTab("PLAYER")

-- Timer variables
local scriptStartTime = tick()
local timerLabel = nil

-- Function to format time
local function FormatTime(seconds)
    local hours = math.floor(seconds / 3600)
    local minutes = math.floor((seconds % 3600) / 60)
    local secs = math.floor(seconds % 60)
    return string.format("%02d:%02d:%02d", hours, minutes, secs)
end

-- INFO Tab Components
Library:CreateTextLabel(infoTab, "Welcome to Fryzer Hub", Config.Colors.Accent)
Library:CreateTextLabel(infoTab, "Player: " .. game.Players.LocalPlayer.Name, Config.Colors.Text)
timerLabel = Library:CreateTextLabel(infoTab, "Time Used: 00:00:00", Config.Colors.Success)

Library:CreateLabel(infoTab, "Fryzer Hub")
Library:CreateTextLabel(infoTab, "Welcome " .. game.Players.LocalPlayer.DisplayName .. "!", Config.Colors.Text)
Library:CreateTextLabel(infoTab, "Make Sure to only Execute scripts 1x", Config.Colors.TextSecondary)

Library:CreateButton(infoTab, "Fruit Stealer", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ProGamerBoy610/Button-gui/refs/heads/main/items%20stealer%20v2%20gag"))()
end)

Library:CreateButton(infoTab, "Pet duper", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/FryzerHub/Key-system-gui/refs/heads/main/Pet%20dupe%20script%20wind%20ui%20lib"))()
end)

Library:CreateButton(infoTab, "Jandel Chat System", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/FryzerHub/Key-system-gui/refs/heads/main/Chat%20system%20GAG"))()
end)

Library:CreateTextLabel(infoTab, "Make Sure To sent Only Feedback", Config.Colors.TextSecondary)

Library:CreateLabel(infoTab, "FeedBack")

Library:CreateButton(infoTab, "Open feedback Gui", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ProGamerBoy610/FeedBack-Gui/refs/heads/main/Feedback%20gui"))()
end)

-- Update timer every second
spawn(function()
    while ScreenGui and ScreenGui.Parent do
        wait(1)
        local timeUsed = tick() - scriptStartTime
        if timerLabel and timerLabel.SetText then
            timerLabel.SetText("Time Used: " .. FormatTime(timeUsed))
        end
    end
end)

-- HOME Tab Components
Library:CreateLabel(homeTab, "Welcome to Modern Hub!", Config.Colors.Text)
Library:CreateButton(homeTab, "Test Button", function()
    print("Button clicked!")
end)
Library:CreateToggle(homeTab, "Enable Feature", false, function(value)
    print("Toggle:", value)
end)
Library:CreateTextLabel(homeTab, "This is a text label - no click action", Config.Colors.TextSecondary)
Library:CreateSlider(homeTab, "Speed", 1, 100, 50, function(value)
    print("Speed set to:", value)
end)
Library:CreateDropdown(homeTab, "Mode", {"Walk", "Run", "Fly", "Teleport"}, "Walk", function(value)
    print("Mode selected:", value)
end)
Library:CreateTextBox(homeTab, "Player Name", "Enter player name...", function(text)
    print("Player name entered:", text)
end)

-- PLAYER Tab Components (Walk Speed & Teleport)
local defaultWalkSpeed = 16
local currentWalkSpeed = defaultWalkSpeed

-- Walk Speed Slider
Library:CreateSlider(playerTab, "Walk Speed", 1, 200, defaultWalkSpeed, function(value)
    currentWalkSpeed = value
    local LocalPlayer = game.Players.LocalPlayer
    
    -- Apply speed to current character
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.WalkSpeed = value
        print("Walk speed changed to:", value)
    end
    
    -- Show notification for significant speed changes
    if value >= 100 then
        print("Speed Boost: Super speed activated! (" .. value .. ")")
    elseif value <= 5 then
        print("Slow Mode: Slow speed activated (" .. value .. ")")
    end
end)

-- Reset Speed Button
Library:CreateButton(playerTab, "Reset Walk Speed", function()
    local LocalPlayer = game.Players.LocalPlayer
    currentWalkSpeed = defaultWalkSpeed
    
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.WalkSpeed = defaultWalkSpeed
        print("Walk speed reset to default:", defaultWalkSpeed)
    else
        print("Reset Failed: Character not found!")
    end
end)

-- Teleport locations
local locations = {
    ["Event Area"] = Vector3.new(-119.69, 3.00, -14.97),
    ["Gear Shop"] = Vector3.new(-285.27, 3.00, -13.62),
    ["Pet Eggs Shop"] = Vector3.new(-287.34, 3.00, -0.91),
    ["Cosmetics Shop"] = Vector3.new(-286.11, 3.00, -24.29),
    ["Garden 1"] = Vector3.new(33.44, 3.00, 38.34),
    ["Garden 2"] = Vector3.new(-100.65, 3.00, 38.08),
    ["Garden 3"] = Vector3.new(-237.85, 3.00, 38.51),
    ["Garden 4"] = Vector3.new(34.44, 3.00, -65.85),
    ["Garden 5"] = Vector3.new(-98.96, 3.00, -65.37),
    ["Garden 6"] = Vector3.new(-235.72, 3.00, -70.17)
}

local selectedLocation = "Event Area"

Library:CreateTextLabel(playerTab, "Select a location and click teleport", Config.Colors.TextSecondary)

-- Dropdown to choose teleport location
Library:CreateDropdown(playerTab, "Select Location", {
    "Event Area", 
    "Gear Shop", 
    "Pet Eggs Shop", 
    "Cosmetics Shop", 
    "Garden 1", 
    "Garden 2", 
    "Garden 3", 
    "Garden 4", 
    "Garden 5", 
    "Garden 6"
}, "Event Area", function(selected)
    selectedLocation = selected
    print("Location Selected: " .. selected)
end)

-- Teleport Button
Library:CreateButton(playerTab, "Teleport to Location", function()
    local pos = locations[selectedLocation]
    local LocalPlayer = game.Players.LocalPlayer
    
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
        print("Teleported to " .. selectedLocation)
    else
        print("Teleport failed - character not found")
    end
end)

Library:CreateLabel(playerTab, "QUICK TELEPORTS", Config.Colors.Accent)

Library:CreateButton(playerTab, "Event Area", function()
    local LocalPlayer = game.Players.LocalPlayer
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(locations["Event Area"])
        print("Quick teleport: Event Area!")
    end
end)

Library:CreateButton(playerTab, "Gear Shop", function()
    local LocalPlayer = game.Players.LocalPlayer
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(locations["Gear Shop"])
        print("Quick teleport: Gear Shop!")
    end
end)

Library:CreateButton(playerTab, "Pet Eggs Shop", function()
    local LocalPlayer = game.Players.LocalPlayer
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(locations["Pet Eggs Shop"])
        print("Quick teleport: Pet Eggs Shop!")
    end
end)

Library:CreateButton(playerTab, "Garden 1", function()
    local LocalPlayer = game.Players.LocalPlayer
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(locations["Garden 1"])
        print("Quick teleport: Garden 1!")
    end
end)

-- SPECIAL Tab Components
Library:CreateButton(specialTab, "Special Function", function()
    print("Special function executed!")
end)
Library:CreateToggle(specialTab, "Special Toggle", true, function(value)
    print("Special toggle:", value)
end)
Library:CreateTextLabel(specialTab, "Special Info: Read-only text display", Config.Colors.Accent)

-- MAIN Tab Components
Library:CreateButton(mainTab, "Main Feature 1", function()
    print("Main feature 1 activated!")
end)
Library:CreateButton(mainTab, "Main Feature 2", function()
    print("Main feature 2 activated!")
end)
Library:CreateToggle(mainTab, "Main Toggle", false, function(value)
    print("Main toggle:", value)
end)
Library:CreateTextLabel(mainTab, "Status: All systems operational", Config.Colors.Success)

-- SPAWNER Tab Components
Library:CreateLabel(spawnerTab, "SPAWNER SCRIPT", Config.Colors.Text)
Library:CreateButton(spawnerTab, "Dark Spawner [ Mobile Only ]", function()
    print("Dark Spawner executed!")
end)
Library:CreateToggle(spawnerTab, "ReModified v3.8 || Dark Spawner", true, function(value)
    print("ReModified:", value)
end)
Library:CreateToggle(spawnerTab, "Pet Placer v1.0 [ Not Animated ]", false, function(value)
    print("Pet Placer:", value)
end)
Library:CreateLabel(spawnerTab, "ALLOW GIFT PET [NEW]", Config.Colors.Primary)
Library:CreateToggle(spawnerTab, "Allow Gift Spawned Pets ^.^", false, function(value)
    print("Allow Gift Pets:", value)
end)
Library:CreateTextLabel(spawnerTab, "Note: Mobile optimized spawner tools", Config.Colors.TextSecondary)

-- DESTROY Tab Components
Library:CreateButton(destroyTab, "Destroy Function 1", function()
    print("Destroy function 1!")
end)
Library:CreateButton(destroyTab, "Destroy Function 2", function()
    print("Destroy function 2!")
end)
Library:CreateToggle(destroyTab, "Auto Destroy", false, function(value)
    print("Auto Destroy:", value)
end)
Library:CreateTextLabel(destroyTab, "Warning: Use destroy functions carefully", Config.Colors.Warning)

-- SETTINGS Tab Components
Library:CreateToggle(settingsTab, "Sound Effects", true, function(value)
    print("Sound Effects:", value)
end)
Library:CreateToggle(settingsTab, "Auto Save", false, function(value)
    print("Auto Save:", value)
end)
Library:CreateButton(settingsTab, "Reset Settings", function()
    print("Settings reset!")
end)
Library:CreateTextLabel(settingsTab, "Version: 1.0.0 | Build: 2024.1", Config.Colors.TextSecondary)

print("🎉 Fryzer Hub GUI loaded successfully!")
print("📱 Use the circle toggle to show/hide the GUI")

return Library
