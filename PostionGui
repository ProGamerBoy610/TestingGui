-- Load WindUI Library
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

-- Configure Notifications
WindUI:SetNotificationLower(true)

-- Add Custom Theme
WindUI:AddTheme({
    Name = "Custom Dark Theme",
    Accent = Color3.fromHex("#18181b"),
    Dialog = Color3.fromHex("#161616"),
    Outline = Color3.fromHex("#FFFFFF"),
    Text = Color3.fromHex("#FFFFFF"),
    Placeholder = Color3.fromHex("#7a7a7a"),
    Background = Color3.fromHex("#101010"),
    Button = Color3.fromHex("#52525b"),
    Icon = Color3.fromHex("#a1a1aa")
})

-- Create Main Window
local Window = WindUI:CreateWindow({
    Title = "Complete Hub Example",
    Icon = "zap",
    Author = "by Developer",
    Folder = "CompleteHub",
    Size = UDim2.fromOffset(580, 460),
    MinSize = Vector2.new(560, 350),
    MaxSize = Vector2.new(850, 560),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 200,
    BackgroundImageTransparency = 0.42,
    HideSearchBar = false,
    ScrollBarEnabled = true,
    User = {
        Enabled = true,
        Anonymous = false,
        Callback = function()
            print("User profile clicked")
        end,
    },
    KeySystem = {
        Key = { "1234", "5678", "admin" },
        Note = "Join our Discord for keys or use default: 1234",
        Thumbnail = {
            Image = "rbxassetid://",
            Title = "Key System",
        },
        URL = "https://discord.gg/yourserver",
        SaveKey = true,
    },
})

-- Edit Open Button
Window:EditOpenButton({
    Title = "Open Hub",
    Icon = "layout-dashboard",
    CornerRadius = UDim.new(0, 16),
    StrokeThickness = 2,
    Color = ColorSequence.new(
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    ),
    OnlyMobile = false,
    Enabled = true,
    Draggable = true,
})

-- Add Version Tag
Window:Tag({
    Title = "v2.0.0",
    Color = Color3.fromHex("#30ff6a"),
    Radius = 8,
})

-- Send Welcome Notification
WindUI:Notify({
    Title = "Welcome!",
    Content = "Hub loaded successfully. Enjoy!",
    Duration = 5,
    Icon = "check-circle",
})

-- ==================== MAIN TAB ====================
local MainTab = Window:Tab({
    Title = "Main",
    Icon = "home",
    Locked = false,
})

MainTab:Select()

local MainSection = MainTab:Section({
    Title = "Main Features",
    Icon = "star",
    Opened = true,
})

local MainButton = MainTab:Button({
    Title = "Execute Script",
    Desc = "Run the main script functionality",
    Locked = false,
    Callback = function()
        WindUI:Notify({
            Title = "Success",
            Content = "Script executed!",
            Duration = 3,
            Icon = "check",
        })
    end
})

local MainToggle = MainTab:Toggle({
    Title = "Auto Farm",
    Desc = "Enable automatic farming",
    Icon = "tractor",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        print("Auto Farm: " .. tostring(state))
    end
})

local SpeedSlider = MainTab:Slider({
    Title = "Walk Speed",
    Step = 1,
    Value = {
        Min = 16,
        Max = 200,
        Default = 16,
    },
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
    end
})

local JumpSlider = MainTab:Slider({
    Title = "Jump Power",
    Step = 1,
    Value = {
        Min = 50,
        Max = 300,
        Default = 50,
    },
    Callback = function(value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
    end
})

MainTab:Divider()

-- ==================== COMBAT TAB ====================
local CombatTab = Window:Tab({
    Title = "Combat",
    Icon = "sword",
    Locked = false,
})

local CombatSection = CombatTab:Section({
    Title = "Combat Options",
    Icon = "shield",
    Opened = true,
})

local AimbotToggle = CombatTab:Toggle({
    Title = "Aimbot",
    Desc = "Enable aimbot assistance",
    Icon = "crosshair",
    Type = "Switch",
    Default = false,
    Callback = function(state)
        print("Aimbot: " .. tostring(state))
    end
})

local ESPToggle = CombatTab:Toggle({
    Title = "Player ESP",
    Desc = "Show player locations",
    Icon = "eye",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        print("ESP: " .. tostring(state))
    end
})

local WeaponDropdown = CombatTab:Dropdown({
    Title = "Select Weapon",
    Values = { "Sword", "Gun", "Bow", "Staff" },
    Value = "Sword",
    Callback = function(option)
        print("Weapon selected: " .. option)
    end
})

local TargetDropdown = CombatTab:Dropdown({
    Title = "Target Priority (Multi)",
    Values = { "Closest", "Lowest HP", "Highest Level", "Players", "NPCs" },
    Value = { "Closest" },
    Multi = true,
    AllowNone = false,
    Callback = function(options)
        print("Targets: " .. game:GetService("HttpService"):JSONEncode(options))
    end
})

CombatTab:Divider()

local DamageSlider = CombatTab:Slider({
    Title = "Damage Multiplier",
    Step = 0.5,
    Value = {
        Min = 1,
        Max = 10,
        Default = 1,
    },
    Callback = function(value)
        print("Damage Multiplier: " .. value)
    end
})

-- ==================== TELEPORT TAB ====================
local TeleportTab = Window:Tab({
    Title = "Teleport",
    Icon = "map-pin",
    Locked = false,
})

local TeleportSection = TeleportTab:Section({
    Title = "Teleport Locations",
    Icon = "navigation",
    Opened = true,
})

local LocationDropdown = TeleportTab:Dropdown({
    Title = "Teleport to Location",
    Values = { "Spawn", "Shop", "Arena", "Boss Room", "Secret Area" },
    Value = "Spawn",
    Callback = function(option)
        print("Teleporting to: " .. option)
    end
})

TeleportTab:Button({
    Title = "Teleport to Waypoint",
    Desc = "Teleport to selected location",
    Locked = false,
    Callback = function()
        WindUI:Notify({
            Title = "Teleported",
            Content = "You have been teleported!",
            Duration = 3,
            Icon = "map-pin",
        })
    end
})

TeleportTab:Divider()

local CoordinatesInput = TeleportTab:Input({
    Title = "Custom Coordinates",
    Desc = "Format: X, Y, Z",
    Value = "0, 0, 0",
    InputIcon = "map",
    Type = "Input",
    Placeholder = "Enter coordinates...",
    Callback = function(input)
        print("Coordinates entered: " .. input)
    end
})

-- ==================== VISUAL TAB ====================
local VisualTab = Window:Tab({
    Title = "Visual",
    Icon = "eye",
    Locked = false,
})

local VisualSection = VisualTab:Section({
    Title = "Visual Settings",
    Icon = "palette",
    Opened = true,
})

local FullbrightToggle = VisualTab:Toggle({
    Title = "Fullbright",
    Desc = "Remove darkness from the game",
    Icon = "sun",
    Type = "Switch",
    Default = false,
    Callback = function(state)
        print("Fullbright: " .. tostring(state))
    end
})

local FOVSlider = VisualTab:Slider({
    Title = "Field of View",
    Step = 1,
    Value = {
        Min = 70,
        Max = 120,
        Default = 70,
    },
    Callback = function(value)
        workspace.CurrentCamera.FieldOfView = value
    end
})

local ESPColorDropdown = VisualTab:Dropdown({
    Title = "ESP Color",
    Values = { "Red", "Blue", "Green", "Yellow", "Purple" },
    Value = "Red",
    Callback = function(option)
        print("ESP Color: " .. option)
    end
})

VisualTab:Divider()

VisualTab:Paragraph({
    Title = "Visual Effects Info",
    Desc = "These settings enhance your visual experience in-game. Use responsibly!",
    Color = "Blue",
    Image = "",
    ImageSize = 30,
    Thumbnail = "",
    ThumbnailSize = 80,
    Locked = false,
    Buttons = {
        {
            Icon = "info",
            Title = "Learn More",
            Callback = function()
                print("Info button clicked")
            end,
        }
    }
})

-- ==================== MISC TAB ====================
local MiscTab = Window:Tab({
    Title = "Misc",
    Icon = "settings",
    Locked = false,
})

local MiscSection = MiscTab:Section({
    Title = "Miscellaneous Options",
    Icon = "wrench",
    Opened = true,
})

local AntiAFKToggle = MiscTab:Toggle({
    Title = "Anti-AFK",
    Desc = "Prevent being kicked for inactivity",
    Icon = "shield-check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        print("Anti-AFK: " .. tostring(state))
    end
})

local InfiniteJumpToggle = MiscTab:Toggle({
    Title = "Infinite Jump",
    Desc = "Jump unlimited times",
    Icon = "arrow-up",
    Type = "Switch",
    Default = false,
    Callback = function(state)
        print("Infinite Jump: " .. tostring(state))
    end
})

local NoClipToggle = MiscTab:Toggle({
    Title = "No Clip",
    Desc = "Walk through walls",
    Icon = "ghost",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        print("No Clip: " .. tostring(state))
    end
})

MiscTab:Divider()

local UsernameInput = MiscTab:Input({
    Title = "Custom Username",
    Desc = "Display a custom username",
    Value = game.Players.LocalPlayer.Name,
    InputIcon = "user",
    Type = "Input",
    Placeholder = "Enter username...",
    Callback = function(input)
        print("Username set to: " .. input)
    end
})

local NotesInput = MiscTab:Input({
    Title = "Notes",
    Desc = "Write your notes here",
    Value = "",
    InputIcon = "file-text",
    Type = "Textarea",
    Placeholder = "Enter your notes...",
    Callback = function(input)
        print("Notes saved: " .. input)
    end
})

MiscTab:Space()

MiscTab:Button({
    Title = "Rejoin Server",
    Desc = "Rejoin the current server",
    Locked = false,
    Callback = function()
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
    end
})

-- ==================== SETTINGS TAB ====================
local SettingsTab = Window:Tab({
    Title = "Settings",
    Icon = "cog",
    Locked = false,
})

local SettingsSection = SettingsTab:Section({
    Title = "Hub Settings",
    Icon = "sliders",
    Opened = true,
})

local ThemeDropdown = SettingsTab:Dropdown({
    Title = "Theme",
    Values = { "Dark", "Light", "Custom Dark Theme" },
    Value = "Dark",
    Callback = function(option)
        print("Theme changed to: " .. option)
    end
})

local UIScaleSlider = SettingsTab:Slider({
    Title = "UI Scale",
    Step = 0.1,
    Value = {
        Min = 0.5,
        Max = 1.5,
        Default = 1,
    },
    Callback = function(value)
        print("UI Scale: " .. value)
    end
})

SettingsTab:Divider()

SettingsTab:Button({
    Title = "Reset Settings",
    Desc = "Reset all settings to default",
    Locked = false,
    Callback = function()
        WindUI:Notify({
            Title = "Reset",
            Content = "Settings have been reset!",
            Duration = 3,
            Icon = "refresh-cw",
        })
    end
})

SettingsTab:Space()

SettingsTab:Paragraph({
    Title = "About This Hub",
    Desc = "This is a complete example hub showcasing all WindUI components. Use this as a template for your own projects!",
    Color = "Green",
    Locked = false,
    Buttons = {
        {
            Icon = "github",
            Title = "GitHub",
            Callback = function()
                print("GitHub link clicked")
            end,
        },
        {
            Icon = "message-circle",
            Title = "Discord",
            Callback = function()
                print("Discord link clicked")
            end,
        }
    }
})

-- ==================== CREDITS SECTION ====================
local CreditsSection = Window:Section({
    Title = "Credits",
    Icon = "award",
    Opened = true,
})

-- Final notification
WindUI:Notify({
    Title = "Fully Loaded",
    Content = "All features are now available!",
    Duration = 4,
    Icon = "check-circle",
})
