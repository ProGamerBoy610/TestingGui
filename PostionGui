-- Fryzer Hub GUI Script for Roblox (Updated)
-- Added draggable opener, more tabs, and cooler looks with gradients, strokes, animations.

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.Name = "FryzerHub"

-- Opener GUI (2nd GUI): Ball shape with text "Fryzer"
local openerFrame = Instance.new("Frame")
openerFrame.Size = UDim2.new(0, 100, 0, 100)
openerFrame.Position = UDim2.new(0.5, -50, 0.5, -50)
openerFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
openerFrame.BackgroundTransparency = 0.3
openerFrame.BorderSizePixel = 0
openerFrame.Parent = screenGui

local uiCornerOpener = Instance.new("UICorner")
uiCornerOpener.CornerRadius = UDim.new(0.5, 0)
uiCornerOpener.Parent = openerFrame

local uiGradientOpener = Instance.new("UIGradient")
uiGradientOpener.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
}
uiGradientOpener.Parent = openerFrame

local uiStrokeOpener = Instance.new("UIStroke")
uiStrokeOpener.Color = Color3.fromRGB(255, 255, 255)
uiStrokeOpener.Transparency = 0.5
uiStrokeOpener.Parent = openerFrame

local openerLabel = Instance.new("TextLabel")
openerLabel.Size = UDim2.new(1, 0, 1, 0)
openerLabel.BackgroundTransparency = 1
openerLabel.Text = "Fryzer"
openerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
openerLabel.TextSize = 20
openerLabel.Font = Enum.Font.GothamBold
openerLabel.Parent = openerFrame

-- Main GUI
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 600, 0, 400)
mainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = screenGui

local uiCornerMain = Instance.new("UICorner")
uiCornerMain.CornerRadius = UDim.new(0, 10)
uiCornerMain.Parent = mainFrame

local uiGradientMain = Instance.new("UIGradient")
uiGradientMain.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 20))
}
uiGradientMain.Parent = mainFrame

local uiStrokeMain = Instance.new("UIStroke")
uiStrokeMain.Color = Color3.fromRGB(100, 100, 100)
uiStrokeMain.Parent = mainFrame

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local uiCornerTitle = Instance.new("UICorner")
uiCornerTitle.CornerRadius = UDim.new(0, 10)
uiCornerTitle.Parent = titleBar

local uiGradientTitle = Instance.new("UIGradient")
uiGradientTitle.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(10, 10, 10))
}
uiGradientTitle.Parent = titleBar

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -100, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Fryzer Hub"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 24
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -70, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Parent = titleBar

local uiCornerMin = Instance.new("UICorner")
uiCornerMin.Parent = minimizeButton

local uiStrokeMin = Instance.new("UIStroke")
uiStrokeMin.Color = Color3.fromRGB(255, 255, 255)
uiStrokeMin.Transparency = 0.8
uiStrokeMin.Parent = minimizeButton

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Parent = titleBar

local uiCornerClose = Instance.new("UICorner")
uiCornerClose.Parent = closeButton

local uiStrokeClose = Instance.new("UIStroke")
uiStrokeClose.Color = Color3.fromRGB(255, 255, 255)
uiStrokeClose.Transparency = 0.8
uiStrokeClose.Parent = closeButton

-- Tabs on Left
local tabsFrame = Instance.new("Frame")
tabsFrame.Size = UDim2.new(0, 150, 1, -40)
tabsFrame.Position = UDim2.new(0, 0, 0, 40)
tabsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
tabsFrame.BorderSizePixel = 0
tabsFrame.Parent = mainFrame

local uiGradientTabs = Instance.new("UIGradient")
uiGradientTabs.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 30))
}
uiGradientTabs.Parent = tabsFrame

local uiListLayoutTabs = Instance.new("UIListLayout")
uiListLayoutTabs.FillDirection = Enum.FillDirection.Vertical
uiListLayoutTabs.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayoutTabs.Parent = tabsFrame

-- Function to create tabs
local currentTab = nil
local function createTab(name)
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(1, 0, 0, 50)
    tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tabButton.Text = name
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.Font = Enum.Font.Gotham
    tabButton.Parent = tabsFrame
    
    local uiCornerTab = Instance.new("UICorner")
    uiCornerTab.CornerRadius = UDim.new(0, 5)
    uiCornerTab.Parent = tabButton
    
    local uiStrokeTab = Instance.new("UIStroke")
    uiStrokeTab.Color = Color3.fromRGB(80, 80, 80)
    uiStrokeTab.Parent = tabButton
    
    local contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Size = UDim2.new(1, -150, 1, -40)
    contentFrame.Position = UDim2.new(0, 150, 0, 40)
    contentFrame.BackgroundTransparency = 1
    contentFrame.ScrollBarThickness = 6
    contentFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    contentFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    contentFrame.Visible = false
    contentFrame.Parent = mainFrame
    
    local uiListLayoutContent = Instance.new("UIListLayout")
    uiListLayoutContent.FillDirection = Enum.FillDirection.Vertical
    uiListLayoutContent.SortOrder = Enum.SortOrder.LayoutOrder
    uiListLayoutContent.Padding = UDim.new(0, 10)
    uiListLayoutContent.Parent = contentFrame
    
    local uiPaddingContent = Instance.new("UIPadding")
    uiPaddingContent.PaddingTop = UDim.new(0, 10)
    uiPaddingContent.PaddingLeft = UDim.new(0, 10)
    uiPaddingContent.PaddingRight = UDim.new(0, 10)
    uiPaddingContent.PaddingBottom = UDim.new(0, 10)
    uiPaddingContent.Parent = contentFrame
    
    tabButton.MouseButton1Click:Connect(function()
        if currentTab then
            currentTab.Visible = false
        end
        contentFrame.Visible = true
        currentTab = contentFrame
        
        -- Animation for tab selection
        TweenService:Create(tabButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 120, 255)}):Play()
        for _, btn in ipairs(tabsFrame:GetChildren()) do
            if btn:IsA("TextButton") and btn ~= tabButton then
                TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
            end
        end
    end)
    
    return contentFrame
end

-- Create more tabs
local componentsTab = createTab("Components")
local settingsTab = createTab("Settings")
local scriptsTab = createTab("Scripts")
local infoTab = createTab("Info")
local extrasTab = createTab("Extras")

-- Add example components to tabs (customize as needed)

-- Components Tab
local textLabelEx = Instance.new("TextLabel")
textLabelEx.Size = UDim2.new(1, 0, 0, 30)
textLabelEx.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
textLabelEx.Text = "Example Label"
textLabelEx.TextColor3 = Color3.fromRGB(255, 255, 255)
textLabelEx.Parent = componentsTab

local uiCornerLabel = Instance.new("UICorner")
uiCornerLabel.Parent = textLabelEx

-- Button Example
local buttonEx = Instance.new("TextButton")
buttonEx.Size = UDim2.new(1, 0, 0, 40)
buttonEx.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
buttonEx.Text = "[] Press Me"
buttonEx.TextColor3 = Color3.fromRGB(255, 255, 255)
buttonEx.Parent = componentsTab

local uiCornerButton = Instance.new("UICorner")
uiCornerButton.Parent = buttonEx

buttonEx.MouseButton1Click:Connect(function()
    buttonEx.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    wait(1)
    buttonEx.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
end)

-- Add similar components to other tabs...
-- For Settings Tab: Add a toggle
local toggleSettings = Instance.new("TextButton")
toggleSettings.Size = UDim2.new(1, 0, 0, 40)
toggleSettings.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleSettings.Text = "Off []"
toggleSettings.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleSettings.Parent = settingsTab

local toggled = false
toggleSettings.MouseButton1Click:Connect(function()
    toggled = not toggled
    if toggled then
        toggleSettings.Text = "On [Green]"
        toggleSettings.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    else
        toggleSettings.Text = "Off []"
        toggleSettings.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    end
end)

-- For Scripts Tab: Add a textbox
local scriptBox = Instance.new("TextBox")
scriptBox.Size = UDim2.new(1, 0, 0, 100)
scriptBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
scriptBox.Text = "Enter script..."
scriptBox.TextColor3 = Color3.fromRGB(255, 255, 255)
scriptBox.MultiLine = true
scriptBox.Parent = scriptsTab

-- For Info Tab: Add labels
local infoLabel = Instance.new("TextLabel")
infoLabel.Size = UDim2.new(1, 0, 0, 30)
infoLabel.BackgroundTransparency = 1
infoLabel.Text = "Hub Version: 1.0"
infoLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
infoLabel.Parent = infoTab

-- For Extras Tab: Add slider
local sliderFrameExtras = Instance.new("Frame")
sliderFrameExtras.Size = UDim2.new(1, 0, 0, 40)
sliderFrameExtras.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
sliderFrameExtras.Parent = extrasTab

local sliderBarExtras = Instance.new("Frame")
sliderBarExtras.Size = UDim2.new(1, -20, 0, 10)
sliderBarExtras.Position = UDim2.new(0, 10, 0.5, -5)
sliderBarExtras.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
sliderBarExtras.Parent = sliderFrameExtras

local sliderHandleExtras = Instance.new("Frame")
sliderHandleExtras.Size = UDim2.new(0, 20, 0, 20)
sliderHandleExtras.Position = UDim2.new(0, 0, 0.5, -10)
sliderHandleExtras.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sliderHandleExtras.Parent = sliderFrameExtras

local uiCornerSliderExtras = Instance.new("UICorner")
uiCornerSliderExtras.Parent = sliderHandleExtras

-- Similar dragging logic for slider as before...

-- (Copy the slider dragging code from previous, but for extras)

local draggingSlider = false
local valueExtras = 0

sliderHandleExtras.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingSlider = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingSlider = false
    end
end)

RunService.RenderStepped:Connect(function()
    if draggingSlider then
        local mousePos = UserInputService:GetMouseLocation()
        local relPos = mousePos - sliderFrameExtras.AbsolutePosition
        valueExtras = math.clamp(relPos.X / sliderFrameExtras.AbsoluteSize.X, 0, 1)
        sliderHandleExtras.Position = UDim2.new(valueExtras, -10, 0.5, -10)
    end
end)

-- Confirmation Frame
local confirmFrame = Instance.new("Frame")
confirmFrame.Size = UDim2.new(0, 300, 0, 150)
confirmFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
confirmFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
confirmFrame.BorderSizePixel = 0
confirmFrame.Visible = false
confirmFrame.Parent = screenGui

local uiCornerConfirm = Instance.new("UICorner")
uiCornerConfirm.Parent = confirmFrame

local uiGradientConfirm = Instance.new("UIGradient")
uiGradientConfirm.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 20))
}
uiGradientConfirm.Parent = confirmFrame

local confirmLabel = Instance.new("TextLabel")
confirmLabel.Size = UDim2.new(1, 0, 0.6, 0)
confirmLabel.Text = "Close Hub? This will not reactivate."
confirmLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
confirmLabel.TextWrapped = true
confirmLabel.Parent = confirmFrame

local yesButton = Instance.new("TextButton")
yesButton.Size = UDim2.new(0.4, 0, 0.3, 0)
yesButton.Position = UDim2.new(0.1, 0, 0.7, 0)
yesButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
yesButton.Text = "Yes"
yesButton.Parent = confirmFrame

local noButton = Instance.new("TextButton")
noButton.Size = UDim2.new(0.4, 0, 0.3, 0)
noButton.Position = UDim2.new(0.5, 0, 0.7, 0)
noButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
noButton.Text = "No"
noButton.Parent = confirmFrame

-- Events
openerFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -300, 0.5, -200), Visible = true}):Play()
    end
end)

minimizeButton.MouseButton1Click:Connect(function()
    TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = UDim2.new(0.5, -300, 1, 0), Visible = false}):Play()
end)

closeButton.MouseButton1Click:Connect(function()
    confirmFrame.Visible = true
end)

yesButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

noButton.MouseButton1Click:Connect(function()
    confirmFrame.Visible = false
end)

-- Draggable Main Frame
local draggingMain = false
local dragInputMain
local dragStartMain
local startPosMain

local function updateMain(input)
    local delta = input.Position - dragStartMain
    mainFrame.Position = UDim2.new(startPosMain.X.Scale, startPosMain.X.Offset + delta.X, startPosMain.Y.Scale, startPosMain.Y.Offset + delta.Y)
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingMain = true
        dragStartMain = input.Position
        startPosMain = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                draggingMain = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInputMain = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInputMain and draggingMain then
        updateMain(input)
    end
end)

-- Draggable Opener Frame
local draggingOpener = false
local dragInputOpener
local dragStartOpener
local startPosOpener

local function updateOpener(input)
    local delta = input.Position - dragStartOpener
    openerFrame.Position = UDim2.new(startPosOpener.X.Scale, startPosOpener.X.Offset + delta.X, startPosOpener.Y.Scale, startPosOpener.Y.Offset + delta.Y)
end

openerFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        if not mainFrame.Visible then  -- Only drag if main is not open, or adjust as needed
            draggingOpener = true
            dragStartOpener = input.Position
            startPosOpener = openerFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    draggingOpener = false
                end
            end)
        end
    end
end)

openerFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInputOpener = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInputOpener and draggingOpener then
        updateOpener(input)
    end
end)

-- Show first tab by default
componentsTab.Visible = true
TweenService:Create(tabsFrame:GetChildren()[1], TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 120, 255)}):Play()

-- Additional cool effects: Hover animations for buttons
local function addHoverEffect(button)
    local originalColor = button.BackgroundColor3
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = originalColor:Lerp(Color3.fromRGB(255, 255, 255), 0.1)}):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = originalColor}):Play()
    end)
end

addHoverEffect(minimizeButton)
addHoverEffect(closeButton)
addHoverEffect(yesButton)
addHoverEffect(noButton)
addHoverEffect(buttonEx)
addHoverEffect(toggleSettings)

-- Add more as needed
