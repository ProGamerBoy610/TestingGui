-- Enhanced Click-Based Auto Farm System with Teleportation
-- Finds coins in nested folders, teleports to them, and clicks with ClickDetector

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ========================
-- CONFIGURATION SETTINGS
-- ========================
local CONFIG = {
    FARM_ENABLED = false,
    CLICK_DELAY = 7, -- Wait 7 seconds after clicking (5-10 range)
    TELEPORT_OFFSET = Vector3.new(0, 3, 0), -- Teleport closer to the coin
    COIN_NAME = "Coin", -- Name of the coin object
    MAX_SEARCH_DEPTH = 8, -- Increased search depth
    SEARCH_WORKSPACE = true, -- Search entire workspace for coins
    CLICK_DISTANCE = 50, -- Maximum distance to attempt clicking
}

-- ========================
-- GLOBAL VARIABLES
-- ========================
local autoFarmConnection
local isCurrentlyFarming = false
local farmStats = {
    coinsFound = 0,
    coinsClicked = 0,
    currentCoin = nil,
    lastClickTime = 0
}

-- ========================
-- UTILITY FUNCTIONS
-- ========================

-- Deep search function to find all objects with specific name
local function findAllObjectsNamed(parent, targetName, maxDepth, currentDepth)
    if not parent then return {} end
    if currentDepth > maxDepth then return {} end
    
    local foundObjects = {}
    
    -- Check all children
    for _, child in pairs(parent:GetChildren()) do
        -- If this child matches our target name
        if child.Name == targetName then
            table.insert(foundObjects, child)
        end
        
        -- Recursively search in this child if it's a folder/model
        if child:IsA("Folder") or child:IsA("Model") or child:IsA("Part") then
            local childResults = findAllObjectsNamed(child, targetName, maxDepth, currentDepth + 1)
            for _, result in pairs(childResults) do
                table.insert(foundObjects, result)
            end
        end
    end
    
    return foundObjects
end

-- Check if a coin is valid for farming
local function isValidCoin(coin)
    if not coin or not coin.Parent then
        return false
    end
    
    -- Check if it has a ClickDetector (search in descendants too)
    local clickDetector = coin:FindFirstChildOfClass("ClickDetector")
    if not clickDetector then
        clickDetector = coin:FindFirstChildWhichIsA("ClickDetector", true)
    end
    
    if not clickDetector then
        return false
    end
    
    -- Check if coin is not broken/disabled
    if coin:GetAttribute("Broken") or 
       coin:GetAttribute("Collected") or
       coin:GetAttribute("Disabled") then
        return false
    end
    
    -- Check transparency (collected coins are often transparent)
    if coin:IsA("BasePart") and coin.Transparency >= 0.9 then
        return false
    end
    
    -- Check if it's a valid part or model
    if not (coin:IsA("BasePart") or coin:IsA("Model")) then
        return false
    end
    
    return true
end

-- Get position of coin (handle both BasePart and Model)
local function getCoinPosition(coin)
    if coin:IsA("BasePart") then
        return coin.Position
    elseif coin:IsA("Model") then
        if coin.PrimaryPart then
            return coin.PrimaryPart.Position
        else
            -- Find the first BasePart in the model
            for _, child in pairs(coin:GetDescendants()) do
                if child:IsA("BasePart") then
                    return child.Position
                end
            end
        end
    end
    return nil
end

-- Enhanced teleport function with better positioning
local function teleportToPosition(position)
    local character = player.Character
    if not character then return false end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return false end
    
    -- Teleport with offset
    local teleportPosition = position + CONFIG.TELEPORT_OFFSET
    
    -- Use CFrame with proper orientation
    local lookDirection = (position - teleportPosition).Unit
    local newCFrame = CFrame.lookAt(teleportPosition, teleportPosition + lookDirection)
    
    humanoidRootPart.CFrame = newCFrame
    
    -- Wait a moment for the teleport to register
    wait(0.1)
    
    return true
end

-- Enhanced click function with multiple methods
local function clickCoin(coin)
    if not coin or not coin.Parent then return false end
    
    -- Find ClickDetector
    local clickDetector = coin:FindFirstChildOfClass("ClickDetector")
    if not clickDetector then
        clickDetector = coin:FindFirstChildWhichIsA("ClickDetector", true)
    end
    
    if not clickDetector then return false end
    
    -- Check distance
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local coinPos = getCoinPosition(coin)
        if coinPos then
            local distance = (character.HumanoidRootPart.Position - coinPos).Magnitude
            if distance > CONFIG.CLICK_DISTANCE then
                print("üî¥ Coin too far away: " .. math.floor(distance) .. " studs")
                return false
            end
        end
    end
    
    -- Multiple click attempts
    local success = false
    
    -- Method 1: Standard fireclickdetector
    pcall(function()
        fireclickdetector(clickDetector)
        success = true
    end)
    
    -- Method 2: Direct event firing if first method fails
    if not success then
        pcall(function()
            clickDetector.MouseClick:Fire(player)
            success = true
        end)
    end
    
    -- Method 3: Using the detector's parent
    if not success then
        pcall(function()
            fireclickdetector(clickDetector, 0)
            success = true
        end)
    end
    
    return success
end

-- ========================
-- MAIN FARMING FUNCTIONS
-- ========================

-- Find all coins in the workspace
local function findAllCoins()
    local allCoins = {}
    
    if CONFIG.SEARCH_WORKSPACE then
        -- Search the entire workspace for coins
        local foundCoins = findAllObjectsNamed(workspace, CONFIG.COIN_NAME, CONFIG.MAX_SEARCH_DEPTH, 0)
        
        -- Filter valid coins
        for _, coin in pairs(foundCoins) do
            if isValidCoin(coin) then
                table.insert(allCoins, coin)
            end
        end
    end
    
    farmStats.coinsFound = #allCoins
    return allCoins
end

-- Main farming cycle
local function executeFarmCycle()
    if not CONFIG.FARM_ENABLED or isCurrentlyFarming then 
        return 
    end
    
    isCurrentlyFarming = true
    
    -- Find all available coins
    local coins = findAllCoins()
    
    if #coins == 0 then
        isCurrentlyFarming = false
        return
    end
    
    -- Process each coin
    for _, coin in pairs(coins) do
        if not CONFIG.FARM_ENABLED then break end
        
        -- Double-check coin is still valid
        if not isValidCoin(coin) then
            continue
        end
        
        farmStats.currentCoin = coin
        
        -- Get coin position
        local coinPosition = getCoinPosition(coin)
        if not coinPosition then
            continue
        end
        
        -- Teleport to coin
        if teleportToPosition(coinPosition) then
            wait(0.5) -- Wait for teleportation to complete
            
            -- Click the coin
            if clickCoin(coin) then
                farmStats.coinsClicked = farmStats.coinsClicked + 1
                farmStats.lastClickTime = tick()
                print("‚úÖ Successfully clicked coin #" .. farmStats.coinsClicked .. " at position: " .. tostring(coinPosition))
                print("‚è∞ Waiting " .. CONFIG.CLICK_DELAY .. " seconds before next coin...")
                
                -- Wait the specified delay
                wait(CONFIG.CLICK_DELAY)
            else
                print("‚ùå Failed to click coin at position: " .. tostring(coinPosition))
            end
        else
            print("‚ùå Failed to teleport to coin at position: " .. tostring(coinPosition))
        end
        
        -- Small delay between coins
        wait(0.2)
    end
    
    farmStats.currentCoin = nil
    isCurrentlyFarming = false
end

-- ========================
-- GUI CREATION
-- ========================

local function createAutoFarmGUI()
    -- Remove existing GUI if present
    if playerGui:FindFirstChild("AutoFarmGUI") then
        playerGui:FindFirstChild("AutoFarmGUI"):Destroy()
    end
    
    -- Create main ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AutoFarmGUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui
    
    -- Main frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 320, 0, 220)
    mainFrame.Position = UDim2.new(0, 20, 0, 20)
    mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = screenGui
    
    -- Frame styling
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 15)
    corner.Parent = mainFrame
    
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 40)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 25))
    }
    gradient.Rotation = 90
    gradient.Parent = mainFrame
    
    -- Title label
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, 0, 0, 35)
    titleLabel.Position = UDim2.new(0, 0, 0, 10)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "üéØ Enhanced Click Farm System"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = mainFrame
    
    -- Toggle button
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(0.85, 0, 0, 50)
    toggleButton.Position = UDim2.new(0.075, 0, 0, 55)
    toggleButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
    toggleButton.BorderSizePixel = 0
    toggleButton.Text = "Auto Farm: OFF"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextScaled = true
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.Parent = mainFrame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 10)
    toggleCorner.Parent = toggleButton
    
    -- Test button
    local testButton = Instance.new("TextButton")
    testButton.Name = "TestButton"
    testButton.Size = UDim2.new(0.85, 0, 0, 25)
    testButton.Position = UDim2.new(0.075, 0, 0, 110)
    testButton.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
    testButton.BorderSizePixel = 0
    testButton.Text = "Test Coin Detection"
    testButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    testButton.TextScaled = true
    testButton.Font = Enum.Font.Gotham
    testButton.Parent = mainFrame
    
    local testCorner = Instance.new("UICorner")
    testCorner.CornerRadius = UDim.new(0, 5)
    testCorner.Parent = testButton
    
    -- Status label
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(0.9, 0, 0, 25)
    statusLabel.Position = UDim2.new(0.05, 0, 0, 140)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "Status: Inactive"
    statusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
    statusLabel.TextScaled = true
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.Parent = mainFrame
    
    -- Stats label
    local statsLabel = Instance.new("TextLabel")
    statsLabel.Name = "StatsLabel"
    statsLabel.Size = UDim2.new(0.9, 0, 0, 25)
    statsLabel.Position = UDim2.new(0.05, 0, 0, 165)
    statsLabel.BackgroundTransparency = 1
    statsLabel.Text = "Found: 0 | Clicked: 0"
    statsLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
    statsLabel.TextScaled = true
    statsLabel.Font = Enum.Font.Gotham
    statsLabel.Parent = mainFrame
    
    -- Credit label
    local creditLabel = Instance.new("TextLabel")
    creditLabel.Name = "CreditLabel"
    creditLabel.Size = UDim2.new(1, 0, 0, 20)
    creditLabel.Position = UDim2.new(0, 0, 1, -25)
    creditLabel.BackgroundTransparency = 1
    creditLabel.Text = "Enhanced Click Farm Pro"
    creditLabel.TextColor3 = Color3.fromRGB(100, 100, 100)
    creditLabel.TextScaled = true
    creditLabel.Font = Enum.Font.Gotham
    creditLabel.Parent = mainFrame
    
    return screenGui, toggleButton, testButton, statusLabel, statsLabel
end

-- ========================
-- CONTROL FUNCTIONS
-- ========================

-- Toggle auto farm
local function toggleAutoFarm(button, statusLabel, statsLabel)
    CONFIG.FARM_ENABLED = not CONFIG.FARM_ENABLED
    
    if CONFIG.FARM_ENABLED then
        -- Enable farming
        button.Text = "Auto Farm: ON"
        button.BackgroundColor3 = Color3.fromRGB(50, 220, 50)
        
        -- Start the farming loop
        autoFarmConnection = RunService.Heartbeat:Connect(function()
            if not isCurrentlyFarming then
                spawn(executeFarmCycle)
            end
        end)
        
        print("‚úÖ Auto Farm ENABLED - Looking for coins named '" .. CONFIG.COIN_NAME .. "'")
    else
        -- Disable farming
        button.Text = "Auto Farm: OFF"
        button.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
        
        -- Stop the farming loop
        if autoFarmConnection then
            autoFarmConnection:Disconnect()
            autoFarmConnection = nil
        end
        
        isCurrentlyFarming = false
        print("‚ùå Auto Farm DISABLED")
    end
    
    -- Update status
    updateStatus(statusLabel, statsLabel)
end

-- Update status display
local function updateStatus(statusLabel, statsLabel)
    if CONFIG.FARM_ENABLED then
        if isCurrentlyFarming then
            statusLabel.Text = "Status: Farming in progress..."
            statusLabel.TextColor3 = Color3.fromRGB(255, 165, 0)
        else
            statusLabel.Text = "Status: Active - Searching for coins"
            statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
        end
    else
        statusLabel.Text = "Status: Inactive"
        statusLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
    end
    
    statsLabel.Text = string.format("Found: %d | Clicked: %d", farmStats.coinsFound, farmStats.coinsClicked)
end

-- Test function to find coins
local function testCoinDetection()
    print("üîç Testing coin detection...")
    local coins = findAllCoins()
    print("üìä Found " .. #coins .. " coins named '" .. CONFIG.COIN_NAME .. "'")
    
    for i, coin in pairs(coins) do
        if i <= 5 then -- Show first 5 coins
            local position = getCoinPosition(coin)
            local clickDetector = coin:FindFirstChildOfClass("ClickDetector") or coin:FindFirstChildWhichIsA("ClickDetector", true)
            local hasClickDetector = clickDetector ~= nil
            print(string.format("  Coin #%d: %s | Position: %s | ClickDetector: %s", 
                i, coin:GetFullName(), tostring(position), tostring(hasClickDetector)))
        end
    end
    
    if #coins > 5 then
        print("  ... and " .. (#coins - 5) .. " more coins")
    end
    
    if #coins == 0 then
        print("‚ùå No coins found! Make sure:")
        print("   ‚Ä¢ Coins are named exactly '" .. CONFIG.COIN_NAME .. "'")
        print("   ‚Ä¢ Coins have ClickDetector objects")
        print("   ‚Ä¢ You're in the right game/area")
    end
end

-- ========================
-- INITIALIZATION
-- ========================

-- Create and setup GUI
local gui, toggleButton, testButton, statusLabel, statsLabel = createAutoFarmGUI()

-- Connect toggle button
toggleButton.MouseButton1Click:Connect(function()
    toggleAutoFarm(toggleButton, statusLabel, statsLabel)
end)

-- Connect test button
testButton.MouseButton1Click:Connect(function()
    testCoinDetection()
end)

-- Add button hover effects
toggleButton.MouseEnter:Connect(function()
    local tween = TweenService:Create(toggleButton, TweenInfo.new(0.2), {
        Size = UDim2.new(0.9, 0, 0, 55)
    })
    tween:Play()
end)

toggleButton.MouseLeave:Connect(function()
    local tween = TweenService:Create(toggleButton, TweenInfo.new(0.2), {
        Size = UDim2.new(0.85, 0, 0, 50)
    })
    tween:Play()
end)

-- Status update loop
spawn(function()
    while gui.Parent do
        wait(1)
        updateStatus(statusLabel, statsLabel)
    end
end)

-- Cleanup on player leaving
player.CharacterRemoving:Connect(function()
    if autoFarmConnection then
        autoFarmConnection:Disconnect()
    end
end)

-- ========================
-- INITIAL TESTING
-- ========================

-- Test coin detection on startup
spawn(function()
    wait(2) -- Wait for everything to load
    testCoinDetection()
end)

-- ========================
-- COMPLETION MESSAGE
-- ========================

print("üéâ Enhanced Click-Based Auto Farm System loaded!")
print("üîß Configuration:")
print("   ‚Ä¢ Target Name: '" .. CONFIG.COIN_NAME .. "'")
print("   ‚Ä¢ Click Delay: " .. CONFIG.CLICK_DELAY .. " seconds")
print("   ‚Ä¢ Search Depth: " .. CONFIG.MAX_SEARCH_DEPTH .. " levels")
print("   ‚Ä¢ Teleport Offset: " .. tostring(CONFIG.TELEPORT_OFFSET))
print("   ‚Ä¢ Click Distance: " .. CONFIG.CLICK_DISTANCE .. " studs")
print("")
print("üéÆ Enhanced Features:")
print("   ‚Ä¢ Deeper folder searching (up to 8 levels)")
print("   ‚Ä¢ Better teleportation positioning")
print("   ‚Ä¢ Multiple click detection methods")
print("   ‚Ä¢ Improved ClickDetector finding")
print("   ‚Ä¢ Distance checking before clicking")
print("   ‚Ä¢ Test button for coin detection")
print("")
print("üöÄ Ready to use! Click 'Test Coin Detection' to verify coins are found.")
print("üìù Use the toggle button to start farming!")
