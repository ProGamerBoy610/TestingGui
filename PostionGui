local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer

-- Configuration
local Config = {
    WalkSpeed = 16,
    FlySpeed = 1,
    KillAuraDistance = 25,
    AutoChopDistance = 25,
    Colors = {
        Items = Color3.fromRGB(255, 255, 0),
        Enemy = Color3.fromRGB(255, 0, 0),
        Children = Color3.fromRGB(0, 255, 0),
        PeltTrader = Color3.fromRGB(0, 255, 255)
    }
}

-- State Variables
local State = {
    ActiveEspItems = false,
    ActiveDistanceEsp = false,
    ActiveEspEnemy = false,
    ActiveEspChildren = false,
    ActiveEspPeltTrader = false,
    ActivateFly = false,
    FLYING = false,
    ActiveNoCooldownPrompt = false,
    ActiveNoFog = false,
    ActiveAutoChopTree = false,
    ActiveKillAura = false,
    ActiveNoclip = false,
    ActiveSpeedBoost = false
}

-- Popup Confirmation
local Confirmed = false
WindUI:Popup({
    Title = "99 Nights In The Forest",
    Icon = "rbxassetid://129260712070622",
    IconThemed = true,
    Content = "Script by Iliankytb - Converted to WindUI",
    Buttons = {
        {
            Title = "Cancel",
            Variant = "Secondary",
        },
        {
            Title = "Continue",
            Icon = "arrow-right",
            Callback = function() Confirmed = true end,
            Variant = "Primary",
        }
    }
})
repeat task.wait() until Confirmed

-- Create Window
local Window = WindUI:CreateWindow({
    Title = "Fryzer Hub",
    Icon = "rbxassetid://129260712070622",
    IconThemed = true,
    Author = "99 Nights Forest Hub",
    Folder = "ForestHub",
    Size = UDim2.fromOffset(580, 360),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    ScrollBarEnabled = true,
    KeySystem = false,
    
    User = {
        Enabled = true,
        Anonymous = false,
        Username = LocalPlayer.DisplayName,
        UserId = LocalPlayer.UserId
    }
})

-- Utility Functions
local function getServerInfo()
    local playerCount = #Players:GetPlayers()
    local maxPlayers = Players.MaxPlayers
    local isStudio = RunService:IsStudio()
    
    return {
        PlaceId = game.PlaceId,
        JobId = game.JobId,
        IsStudio = isStudio,
        CurrentPlayers = playerCount,
        MaxPlayers = maxPlayers
    }
end

local function createEsp(char, color, text, parent, offset)
    if not char or char:FindFirstChild("ESP") then return end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESP_Highlight"
    highlight.Adornee = char
    highlight.FillColor = color
    highlight.FillTransparency = 1
    highlight.OutlineColor = color
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = char
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP"
    billboard.Size = UDim2.new(0, 50, 0, 25)
    billboard.AlwaysOnTop = true
    billboard.StudsOffset = Vector3.new(0, offset or 0, 0)
    billboard.Adornee = parent
    billboard.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = color
    label.TextScaled = true
    label.Parent = billboard
    
    -- Distance update loop
    task.spawn(function()
        local Camera = Workspace.CurrentCamera
        while highlight and billboard and parent and parent.Parent do
            if Camera and parent:IsA("BasePart") then
                local distance = (Camera.CFrame.Position - parent.Position).Magnitude
                if State.ActiveDistanceEsp then
                    label.Text = text .. " (" .. math.floor(distance + 0.5) .. " m)"
                else
                    label.Text = text
                end
            end
            wait(0.1)
        end
    end)
end

local function removeEsp(char, parent)
    if char:FindFirstChildOfClass("Highlight") then
        char:FindFirstChildOfClass("Highlight"):Destroy()
    end
    if parent:FindFirstChildOfClass("BillboardGui") then
        parent:FindFirstChildOfClass("BillboardGui"):Destroy()
    end
end

-- Fly System
local IYMouse = LocalPlayer:GetMouse()
local flyKeyDown, flyKeyUp

local function sFLY()
    repeat wait() until LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    
    local T = LocalPlayer.Character:WaitForChild("HumanoidRootPart")
    local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
    local SPEED = 0
    
    local function FLY()
        State.FLYING = true
        local BG = Instance.new('BodyGyro')
        local BV = Instance.new('BodyVelocity')
        BG.P = 9e4
        BG.Parent = T
        BV.Parent = T
        BG.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
        BG.CFrame = T.CFrame
        BV.Velocity = Vector3.new(0, 0, 0)
        BV.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        
        task.spawn(function()
            repeat wait()
                if LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                    LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
                end
                if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
                    SPEED = 50
                elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
                    SPEED = 0
                end
                if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
                    BV.Velocity = ((Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + 
                        ((Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, 
                        (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                else
                    BV.Velocity = Vector3.new(0, 0, 0)
                end
                BG.CFrame = Workspace.CurrentCamera.CoordinateFrame
            until not State.FLYING
            BG:Destroy()
            BV:Destroy()
            if LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            end
        end)
    end
    
    flyKeyDown = IYMouse.KeyDown:Connect(function(KEY)
        if KEY:lower() == 'w' then
            CONTROL.F = Config.FlySpeed
        elseif KEY:lower() == 's' then
            CONTROL.B = -Config.FlySpeed
        elseif KEY:lower() == 'a' then
            CONTROL.L = -Config.FlySpeed
        elseif KEY:lower() == 'd' then 
            CONTROL.R = Config.FlySpeed
        elseif KEY:lower() == 'e' then
            CONTROL.Q = Config.FlySpeed * 2
        elseif KEY:lower() == 'q' then
            CONTROL.E = -Config.FlySpeed * 2
        end
    end)
    
    flyKeyUp = IYMouse.KeyUp:Connect(function(KEY)
        if KEY:lower() == 'w' then CONTROL.F = 0
        elseif KEY:lower() == 's' then CONTROL.B = 0
        elseif KEY:lower() == 'a' then CONTROL.L = 0
        elseif KEY:lower() == 'd' then CONTROL.R = 0
        elseif KEY:lower() == 'e' then CONTROL.Q = 0
        elseif KEY:lower() == 'q' then CONTROL.E = 0
        end
    end)
    
    FLY()
end

local function NOFLY()
    State.FLYING = false
    if flyKeyDown then flyKeyDown:Disconnect() end
    if flyKeyUp then flyKeyUp:Disconnect() end
    if LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
        LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
    end
end

-- Create Tabs
local InfoTab = Window:Tab({ Title = "Info", Icon = "info" })
local PlayerTab = Window:Tab({ Title = "Player", Icon = "user" })
local EspTab = Window:Tab({ Title = "ESP", Icon = "eye" })
local GameTab = Window:Tab({ Title = "Game", Icon = "gamepad-2" })

-- Info Tab
local serverInfo = getServerInfo()
InfoTab:Paragraph({
    Title = "Server Information",
    Content = string.format("Place ID: %s\nJob ID: %s\nPlayers: %d/%d", 
        serverInfo.PlaceId, serverInfo.JobId, serverInfo.CurrentPlayers, serverInfo.MaxPlayers)
})

-- Player Tab
PlayerTab:Slider({
    Title = "Walk Speed",
    Value = {
        Min = 0,
        Max = 500,
        Default = 16
    },
    Callback = function(value)
        Config.WalkSpeed = value
        if State.ActiveSpeedBoost and LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = value
        end
    end
})

PlayerTab:Toggle({
    Title = "Speed Boost",
    Value = false,
    Callback = function(state)
        State.ActiveSpeedBoost = state
        task.spawn(function()
            while State.ActiveSpeedBoost do
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
                    LocalPlayer.Character.Humanoid.WalkSpeed = Config.WalkSpeed
                end
                task.wait(0.1)
            end
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
                LocalPlayer.Character.Humanoid.WalkSpeed = 16
            end
        end)
    end
})

PlayerTab:Slider({
    Title = "Fly Speed",
    Value = {
        Min = 0.1,
        Max = 10,
        Default = 1
    },
    Callback = function(value)
        Config.FlySpeed = value
    end
})

PlayerTab:Toggle({
    Title = "Fly",
    Value = false,
    Callback = function(state)
        State.ActivateFly = state
        if state and not State.FLYING then
            sFLY()
        elseif not state and State.FLYING then
            NOFLY()
        end
    end
})

PlayerTab:Toggle({
    Title = "Noclip",
    Value = false,
    Callback = function(state)
        State.ActiveNoclip = state
        task.spawn(function()
            while State.ActiveNoclip do
                if LocalPlayer.Character then
                    for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
                task.wait(0.1)
            end
            if LocalPlayer.Character then
                for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                    if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                        part.CanCollide = true
                    end
                end
            end
        end)
    end
})

PlayerTab:Toggle({
    Title = "Instant Prompt",
    Value = false,
    Callback = function(state)
        State.ActiveNoCooldownPrompt = state
        if state then
            for _, prompt in pairs(Workspace:GetDescendants()) do
                if prompt:IsA("ProximityPrompt") and prompt.HoldDuration ~= 0 then
                    prompt:SetAttribute("HoldDurationOld", prompt.HoldDuration)
                    prompt.HoldDuration = 0
                end
            end
        else
            for _, prompt in pairs(Workspace:GetDescendants()) do
                if prompt:IsA("ProximityPrompt") and prompt:GetAttribute("HoldDurationOld") then
                    prompt.HoldDuration = prompt:GetAttribute("HoldDurationOld")
                end
            end
        end
    end
})

PlayerTab:Toggle({
    Title = "No Fog",
    Value = false,
    Callback = function(state)
        State.ActiveNoFog = state
        task.spawn(function()
            while State.ActiveNoFog do
                for _, part in pairs(Workspace.Map.Boundaries:GetChildren()) do
                    if part:IsA("Part") then
                        part:Destroy()
                    end
                end
                wait(0.1)
            end
        end)
    end
})

PlayerTab:Button({
    Title = "Teleport to Campfire",
    Callback = function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = Workspace.Map.Campground.MainFire.PrimaryPart.CFrame
        end
    end
})

-- ESP Tab
EspTab:Toggle({
    Title = "Show Distance in ESP",
    Value = false,
    Callback = function(state)
        State.ActiveDistanceEsp = state
    end
})

EspTab:Toggle({
    Title = "Items ESP",
    Value = false,
    Callback = function(state)
        State.ActiveEspItems = state
        task.spawn(function()
            while State.ActiveEspItems do
                for _, obj in pairs(Workspace.Items:GetChildren()) do
                    if obj:IsA("Model") and obj.PrimaryPart and not obj:FindFirstChildOfClass("Highlight") then
                        createEsp(obj, Config.Colors.Items, obj.Name, obj.PrimaryPart, 2)
                    end
                end
                task.wait(0.1)
            end
            for _, obj in pairs(Workspace.Items:GetChildren()) do
                if obj:IsA("Model") and obj.PrimaryPart then
                    removeEsp(obj, obj.PrimaryPart)
                end
            end
        end)
    end
})

EspTab:Toggle({
    Title = "Enemy ESP",
    Value = false,
    Callback = function(state)
        State.ActiveEspEnemy = state
        task.spawn(function()
            while State.ActiveEspEnemy do
                for _, obj in pairs(Workspace.Characters:GetChildren()) do
                    if obj:IsA("Model") and obj.PrimaryPart and 
                       obj.Name ~= "Lost Child" and obj.Name ~= "Lost Child2" and 
                       obj.Name ~= "Lost Child3" and obj.Name ~= "Lost Child4" and 
                       obj.Name ~= "Pelt Trader" and not obj:FindFirstChildOfClass("Highlight") then
                        createEsp(obj, Config.Colors.Enemy, obj.Name, obj.PrimaryPart, 2)
                    end
                end
                task.wait(0.1)
            end
            for _, obj in pairs(Workspace.Characters:GetChildren()) do
                if obj:IsA("Model") and obj.PrimaryPart then
                    removeEsp(obj, obj.PrimaryPart)
                end
            end
        end)
    end
})

EspTab:Toggle({
    Title = "Children ESP",
    Value = false,
    Callback = function(state)
        State.ActiveEspChildren = state
        task.spawn(function()
            while State.ActiveEspChildren do
                for _, obj in pairs(Workspace.Characters:GetChildren()) do
                    if obj:IsA("Model") and obj.PrimaryPart and 
                       (obj.Name == "Lost Child" or obj.Name == "Lost Child2" or 
                        obj.Name == "Lost Child3" or obj.Name == "Lost Child4") and 
                       not obj:FindFirstChildOfClass("Highlight") then
                        createEsp(obj, Config.Colors.Children, obj.Name, obj.PrimaryPart, 2)
                    end
                end
                task.wait(0.1)
            end
            for _, obj in pairs(Workspace.Characters:GetChildren()) do
                if obj:IsA("Model") and obj.PrimaryPart and 
                   (obj.Name == "Lost Child" or obj.Name == "Lost Child2" or 
                    obj.Name == "Lost Child3" or obj.Name == "Lost Child4") then
                    removeEsp(obj, obj.PrimaryPart)
                end
            end
        end)
    end
})

EspTab:Toggle({
    Title = "Pelt Trader ESP",
    Value = false,
    Callback = function(state)
        State.ActiveEspPeltTrader = state
        task.spawn(function()
            while State.ActiveEspPeltTrader do
                for _, obj in pairs(Workspace.Characters:GetChildren()) do
                    if obj:IsA("Model") and obj.PrimaryPart and obj.Name == "Pelt Trader" and 
                       not obj:FindFirstChildOfClass("Highlight") then
                        createEsp(obj, Config.Colors.PeltTrader, obj.Name, obj.PrimaryPart, 2)
                    end
                end
                task.wait(0.1)
            end
            for _, obj in pairs(Workspace.Characters:GetChildren()) do
                if obj:IsA("Model") and obj.PrimaryPart and obj.Name == "Pelt Trader" then
                    removeEsp(obj, obj.PrimaryPart)
                end
            end
        end)
    end
})

-- Game Tab
GameTab:Paragraph({
    Title = "Note",
    Content = "For Auto Chop Tree and Kill Aura to work, equip any axe!"
})

GameTab:Slider({
    Title = "Kill Aura Distance",
    Value = {
        Min = 25,
        Max = 1000,
        Default = 25
    },
    Callback = function(value)
        Config.KillAuraDistance = value
    end
})

GameTab:Toggle({
    Title = "Kill Aura",
    Value = false,
    Callback = function(state)
        State.ActiveKillAura = state
        task.spawn(function()
            while State.ActiveKillAura do
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local hrp = LocalPlayer.Character.HumanoidRootPart
                    local weapon = LocalPlayer.Inventory:FindFirstChild("Old Axe") or 
                                 LocalPlayer.Inventory:FindFirstChild("Good Axe") or 
                                 LocalPlayer.Inventory:FindFirstChild("Strong Axe") or 
                                 LocalPlayer.Inventory:FindFirstChild("Chainsaw")
                    
                    if weapon then
                        for _, enemy in pairs(Workspace.Characters:GetChildren()) do
                            if enemy:IsA("Model") and enemy.PrimaryPart then
                                local distance = (enemy.PrimaryPart.Position - hrp.Position).Magnitude
                                if distance <= Config.KillAuraDistance then
                                    ReplicatedStorage.RemoteEvents.ToolDamageObject:InvokeServer(enemy, weapon, 999, hrp.CFrame)
                                end
                            end
                        end
                    end
                end
                wait(0.1)
            end
        end)
    end
})

GameTab:Slider({
    Title = "Auto Chop Distance",
    Value = {
        Min = 25,
        Max = 500,
        Default = 25
    },
    Callback = function(value)
        Config.AutoChopDistance = value
    end
})

GameTab:Toggle({
    Title = "Auto Chop Tree",
    Value = false,
    Callback = function(state)
        State.ActiveAutoChopTree = state
        task.spawn(function()
            while State.ActiveAutoChopTree do
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local hrp = LocalPlayer.Character.HumanoidRootPart
                    local weapon = LocalPlayer.Inventory:FindFirstChild("Old Axe") or 
                                 LocalPlayer.Inventory:FindFirstChild("Good Axe") or 
                                 LocalPlayer.Inventory:FindFirstChild("Strong Axe") or 
                                 LocalPlayer.Inventory:FindFirstChild("Chainsaw")
                    
                    if weapon then
                        for _, folder in pairs({Workspace.Map.Foliage, Workspace.Map.Landmarks}) do
                            for _, tree in pairs(folder:GetChildren()) do
                                if tree:IsA("Model") and tree.PrimaryPart and 
                                   (tree.Name == "Small Tree" or tree.Name == "TreeBig1" or tree.Name == "TreeBig2") then
                                    local distance = (tree.PrimaryPart.Position - hrp.Position).Magnitude
                                    if distance <= Config.AutoChopDistance then
                                        ReplicatedStorage.RemoteEvents.ToolDamageObject:InvokeServer(tree, weapon, 999, hrp.CFrame)
                                    end
                                end
                            end
                        end
                    end
                end
                wait(0.1)
            end
        end)
    end
})

-- Fly key binding
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == Enum.KeyCode.F and State.ActivateFly then
        if State.FLYING then
            NOFLY()
        else
            sFLY()
        end
    end
end)

-- Notification
WindUI:Notify({
    Title = "Fryzer Hub",
    Content = "Script loaded successfully! Version 0.19",
    Duration = 5
})
