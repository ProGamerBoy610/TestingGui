-- Load FryzerLibrary from GitHub
local FryzerLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/ProGamerBoy610/TestingGui/main/hub%20loadsrting.lua"))()

-- Make sure library loaded
if not FryzerLibrary or typeof(FryzerLibrary.CreateTab) ~= "function" then
    warn("FryzerLibrary failed to load or is invalid.")
    return
end

-- Create Tabs
local MainTab = FryzerLibrary:CreateTab("Main", "üè†")
local PlayerTab = FryzerLibrary:CreateTab("Player", "üë§")
local WorldTab = FryzerLibrary:CreateTab("World", "üåç")

-- Main Tab Buttons
MainTab:CreateButton("Test Button", function()
    print("Test button clicked!")
end)

MainTab:CreateToggle("Auto Farm", false, function(state)
    print("Auto Farm:", state)
end)

MainTab:CreateToggle("ESP", true, function(state)
    print("ESP:", state)
end)

-- Player Tab Buttons
PlayerTab:CreateButton("Speed Boost", function()
    local char = game.Players.LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") then
        char.Humanoid.WalkSpeed = 50
    end
end)

PlayerTab:CreateButton("Jump Boost", function()
    local char = game.Players.LocalPlayer.Character
    if char and char:FindFirstChild("Humanoid") then
        char.Humanoid.JumpPower = 100
    end
end)

PlayerTab:CreateToggle("Infinite Jump", false, function(state)
    -- Simple infinite jump toggle
    if state then
        _G.InfJump = true
        game:GetService("UserInputService").JumpRequest:Connect(function()
            if _G.InfJump and game.Players.LocalPlayer.Character then
                game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
            end
        end)
    else
        _G.InfJump = false
    end
end)

-- World Tab Buttons
WorldTab:CreateButton("Full Bright", function()
    local lighting = game:GetService("Lighting")
    lighting.Ambient = Color3.new(1, 1, 1)
    lighting.Brightness = 5
    lighting.ClockTime = 14
    print("Full Bright activated!")
end)

WorldTab:CreateToggle("No Clip", false, function(state)
    -- Basic noclip
    if state then
        _G.Noclip = true
        game:GetService("RunService").Stepped:Connect(function()
            if _G.Noclip then
                local char = game.Players.LocalPlayer.Character
                if char then
                    for _, part in pairs(char:GetDescendants()) do
                        if part:IsA("BasePart") and part.CanCollide == true then
                            part.CanCollide = false
                        end
                    end
                end
            end
        end)
    else
        _G.Noclip = false
    end
end)
