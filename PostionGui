-- Fryzer Hub - Enhanced Custom Design
-- Cool Black & Purple Theme with Improved Features

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Remove existing GUI if it exists
if playerGui:FindFirstChild("FryzerHub") then
    playerGui:FindFirstChild("FryzerHub"):Destroy()
end

-- Check for Humanoid and remove GUI if not found
spawn(function()
    while true do
        wait(1)
        if not player.Character or not player.Character:FindFirstChild("Humanoid") then
            if playerGui:FindFirstChild("FryzerHub") then
                playerGui:FindFirstChild("FryzerHub"):Destroy()
            end
            break
        end
    end
end)

-- Create main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FryzerHub"
screenGui.Parent = playerGui
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Variables for dragging
local dragToggle = nil
local dragSpeed = 0.25
local dragStart = nil
local startPos = nil

-- Drag function
local function updateInput(input)
    local delta = input.Position - dragStart
    local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    TweenService:Create(dragToggle, TweenInfo.new(dragSpeed), {Position = position}):Play()
end

-- Create Ball Opener GUI (Draggable with "Fryzer" text)
local ballOpener = Instance.new("Frame")
ballOpener.Name = "BallOpener"
ballOpener.Size = UDim2.new(0, 80, 0, 35)
ballOpener.Position = UDim2.new(0, 20, 0.5, -17.5)
ballOpener.BackgroundColor3 = Color3.fromRGB(75, 0, 130) -- Purple
ballOpener.BorderSizePixel = 0
ballOpener.Parent = screenGui

-- Make ball rounded
local ballCorner = Instance.new("UICorner")
ballCorner.CornerRadius = UDim.new(0, 17)
ballCorner.Parent = ballOpener

-- Ball text
local ballText = Instance.new("TextLabel")
ballText.Size = UDim2.new(1, 0, 1, 0)
ballText.BackgroundTransparency = 1
ballText.Text = "Fryzer"
ballText.TextColor3 = Color3.fromRGB(255, 255, 255)
ballText.TextScaled = true
ballText.Font = Enum.Font.GothamBold
ballText.Parent = ballOpener

-- Ball click detector
local ballButton = Instance.new("TextButton")
ballButton.Size = UDim2.new(1, 0, 1, 0)
ballButton.BackgroundTransparency = 1
ballButton.Text = ""
ballButton.Parent = ballOpener

-- Confirmation Screen
local confirmFrame = Instance.new("Frame")
confirmFrame.Name = "ConfirmFrame"
confirmFrame.Size = UDim2.new(0, 300, 0, 150)
confirmFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
confirmFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15) -- Black
confirmFrame.BorderSizePixel = 1
confirmFrame.BorderColor3 = Color3.fromRGB(75, 0, 130) -- Purple border
confirmFrame.Visible = false
confirmFrame.Parent = screenGui

local confirmCorner = Instance.new("UICorner")
confirmCorner.CornerRadius = UDim.new(0, 8)
confirmCorner.Parent = confirmFrame

-- Confirm title
local confirmTitle = Instance.new("TextLabel")
confirmTitle.Size = UDim2.new(1, 0, 0, 40)
confirmTitle.BackgroundTransparency = 1
confirmTitle.Text = "Close Fryzer Hub?"
confirmTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
confirmTitle.TextScaled = true
confirmTitle.Font = Enum.Font.GothamBold
confirmTitle.Parent = confirmFrame

-- Confirm message
local confirmMsg = Instance.new("TextLabel")
confirmMsg.Size = UDim2.new(1, -20, 0, 30)
confirmMsg.Position = UDim2.new(0, 10, 0, 40)
confirmMsg.BackgroundTransparency = 1
confirmMsg.Text = "Are you sure you want to close the hub?"
confirmMsg.TextColor3 = Color3.fromRGB(200, 200, 200)
confirmMsg.TextScaled = true
confirmMsg.Font = Enum.Font.Gotham
confirmMsg.Parent = confirmFrame

-- Yes button
local yesBtn = Instance.new("TextButton")
yesBtn.Size = UDim2.new(0, 80, 0, 30)
yesBtn.Position = UDim2.new(0, 50, 1, -40)
yesBtn.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
yesBtn.Text = "Yes"
yesBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
yesBtn.TextScaled = true
yesBtn.Font = Enum.Font.GothamBold
yesBtn.BorderSizePixel = 0
yesBtn.Parent = confirmFrame

local yesCorner = Instance.new("UICorner")
yesCorner.CornerRadius = UDim.new(0, 5)
yesCorner.Parent = yesBtn

-- No button
local noBtn = Instance.new("TextButton")
noBtn.Size = UDim2.new(0, 80, 0, 30)
noBtn.Position = UDim2.new(1, -130, 1, -40)
noBtn.BackgroundColor3 = Color3.fromRGB(75, 0, 130) -- Purple
noBtn.Text = "No"
noBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
noBtn.TextScaled = true
noBtn.Font = Enum.Font.GothamBold
noBtn.BorderSizePixel = 0
noBtn.Parent = confirmFrame

local noCorner = Instance.new("UICorner")
noCorner.CornerRadius = UDim.new(0, 5)
noCorner.Parent = noBtn

-- Main GUI Frame (Black & Purple Theme)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 500, 0, 350)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15) -- Black
mainFrame.BorderSizePixel = 1
mainFrame.BorderColor3 = Color3.fromRGB(75, 0, 130) -- Purple border
mainFrame.Visible = false
mainFrame.Parent = screenGui

-- Main corner
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 8)
mainCorner.Parent = mainFrame

-- Title Bar (Purple)
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 35)
titleBar.BackgroundColor3 = Color3.fromRGB(75, 0, 130) -- Purple
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

-- Title corner fix
local titleFix = Instance.new("Frame")
titleFix.Size = UDim2.new(1, 0, 0, 8)
titleFix.Position = UDim2.new(0, 0, 1, -8)
titleFix.BackgroundColor3 = Color3.fromRGB(75, 0, 130) -- Purple
titleFix.BorderSizePixel = 0
titleFix.Parent = titleBar

-- Title text (Fryzer Hub)
local titleText = Instance.new("TextLabel")
titleText.Size = UDim2.new(0, 120, 1, 0)
titleText.Position = UDim2.new(0, 10, 0, 0)
titleText.BackgroundTransparency = 1
titleText.Text = "Fryzer Hub"
titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
titleText.TextScaled = true
titleText.Font = Enum.Font.GothamBold
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.Parent = titleBar

-- Close Button (X button) - Transparent background
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 25, 0, 20)
closeBtn.Position = UDim2.new(1, -30, 0, 7)
closeBtn.BackgroundTransparency = 1 -- Transparent
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.TextScaled = true
closeBtn.Font = Enum.Font.GothamBold
closeBtn.BorderSizePixel = 0
closeBtn.Parent = titleBar

-- Tab Icons Section (Left side - Black with Purple accents)
local tabsFrame = Instance.new("Frame")
tabsFrame.Size = UDim2.new(0, 80, 1, -35)
tabsFrame.Position = UDim2.new(0, 0, 0, 35)
tabsFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10) -- Darker Black
tabsFrame.BorderSizePixel = 0
tabsFrame.Parent = mainFrame

-- Tabs scrolling frame
local tabsScroll = Instance.new("ScrollingFrame")
tabsScroll.Size = UDim2.new(1, 0, 1, 0)
tabsScroll.BackgroundTransparency = 1
tabsScroll.ScrollBarThickness = 3
tabsScroll.ScrollBarImageColor3 = Color3.fromRGB(75, 0, 130) -- Purple
tabsScroll.CanvasSize = UDim2.new(0, 0, 0, 500)
tabsScroll.Parent = tabsFrame

local tabsLayout = Instance.new("UIListLayout")
tabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabsLayout.Padding = UDim.new(0, 4)
tabsLayout.Parent = tabsScroll

-- Components Section (Right side - Black)
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -80, 1, -35)
contentFrame.Position = UDim2.new(0, 80, 0, 35)
contentFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20) -- Black
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

-- Scrolling Frame for components
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, -8, 1, -8)
scrollFrame.Position = UDim2.new(0, 4, 0, 4)
scrollFrame.BackgroundTransparency = 1
scrollFrame.ScrollBarThickness = 4
scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(75, 0, 130) -- Purple
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 1000)
scrollFrame.Parent = contentFrame

-- UI Layout for scroll content
local contentLayout = Instance.new("UIListLayout")
contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
contentLayout.Padding = UDim.new(0, 8)
contentLayout.Parent = scrollFrame

-- Tab creation function
local currentTab = nil
local tabs = {}

-- Tab icons
local tabIcons = {
    ["Main"] = "üè†",
    ["Player"] = "üë§", 
    ["Visuals"] = "üëÅ",
    ["Scripts"] = "üìú",
    ["Settings"] = "‚öô",
    ["Combat"] = "‚öî",
    ["Misc"] = "üîß"
}

local function createTab(name, content)
    local tabBtn = Instance.new("TextButton")
    tabBtn.Size = UDim2.new(1, -6, 0, 35)
    tabBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25) -- Dark grey
    tabBtn.Text = (tabIcons[name] or "üìÅ") .. "\n" .. name
    tabBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
    tabBtn.TextScaled = true
    tabBtn.Font = Enum.Font.Gotham
    tabBtn.BorderSizePixel = 0
    tabBtn.LayoutOrder = #tabs + 1
    tabBtn.Parent = tabsScroll
    
    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 4)
    tabCorner.Parent = tabBtn
    
    tabs[name] = {button = tabBtn, content = content, active = false}
    
    tabBtn.MouseButton1Click:Connect(function()
        -- Deactivate all tabs
        for tabName, tab in pairs(tabs) do
            tab.button.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            tab.button.TextColor3 = Color3.fromRGB(200, 200, 200)
            tab.active = false
        end
        
        -- Activate clicked tab (Purple)
        tabBtn.BackgroundColor3 = Color3.fromRGB(75, 0, 130)
        tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        tabs[name].active = true
        currentTab = name
        
        -- Clear and populate content
        for _, child in pairs(scrollFrame:GetChildren()) do
            if child:IsA("Frame") or child:IsA("TextButton") or child:IsA("TextBox") then
                child:Destroy()
            end
        end
        
        content()
    end)
end

-- Button Creation Function (Purple flash)
local function createButton(name, callback)
    local btnFrame = Instance.new("Frame")
    btnFrame.Size = UDim2.new(1, -16, 0, 35)
    btnFrame.BackgroundTransparency = 1
    btnFrame.LayoutOrder = math.random(1, 1000)
    btnFrame.Parent = scrollFrame
    
    local btnLabel = Instance.new("TextLabel")
    btnLabel.Size = UDim2.new(0.8, 0, 1, 0)
    btnLabel.BackgroundTransparency = 1
    btnLabel.Text = name
    btnLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    btnLabel.TextScaled = true
    btnLabel.Font = Enum.Font.Gotham
    btnLabel.TextXAlignment = Enum.TextXAlignment.Left
    btnLabel.Parent = btnFrame
    
    local btnSquare = Instance.new("TextButton")
    btnSquare.Size = UDim2.new(0, 25, 0, 25)
    btnSquare.Position = UDim2.new(1, -30, 0.5, -12.5)
    btnSquare.BackgroundColor3 = Color3.fromRGB(40, 40, 40) -- Dark grey
    btnSquare.Text = ""
    btnSquare.BorderSizePixel = 1
    btnSquare.BorderColor3 = Color3.fromRGB(75, 0, 130) -- Purple border
    btnSquare.Parent = btnFrame
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 3)
    btnCorner.Parent = btnSquare
    
    btnSquare.MouseButton1Click:Connect(function()
        -- Flash purple
        btnSquare.BackgroundColor3 = Color3.fromRGB(75, 0, 130)
        wait(1)
        btnSquare.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        
        if callback then
            callback()
        end
    end)
end

-- Toggle Button Creation Function (Purple when ON)
local function createToggle(name, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, -16, 0, 35)
    toggleFrame.BackgroundTransparency = 1
    toggleFrame.LayoutOrder = math.random(1, 1000)
    toggleFrame.Parent = scrollFrame
    
    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Size = UDim2.new(0.6, 0, 1, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = name
    toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleLabel.TextScaled = true
    toggleLabel.Font = Enum.Font.Gotham
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.Parent = toggleFrame
    
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(0, 35, 1, 0)
    statusLabel.Position = UDim2.new(0.6, 0, 0, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "OFF"
    statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    statusLabel.TextScaled = true
    statusLabel.Font = Enum.Font.GothamBold
    statusLabel.Parent = toggleFrame
    
    local toggleBtn = Instance.new("TextButton")
    toggleBtn.Size = UDim2.new(0, 25, 0, 25)
    toggleBtn.Position = UDim2.new(1, -30, 0.5, -12.5)
    toggleBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    toggleBtn.Text = ""
    toggleBtn.BorderSizePixel = 1
    toggleBtn.BorderColor3 = Color3.fromRGB(75, 0, 130)
    toggleBtn.Parent = toggleFrame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 3)
    toggleCorner.Parent = toggleBtn
    
    local isToggled = false
    
    toggleBtn.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        
        if isToggled then
            toggleBtn.BackgroundColor3 = Color3.fromRGB(75, 0, 130) -- Purple
            statusLabel.Text = "ON"
            statusLabel.TextColor3 = Color3.fromRGB(75, 0, 130)
        else
            toggleBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            statusLabel.Text = "OFF"
            statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        end
        
        if callback then
            callback(isToggled)
        end
    end)
end

-- Slider Creation Function (Purple theme)
local function createSlider(name, min, max, default, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, -16, 0, 45)
    sliderFrame.BackgroundTransparency = 1
    sliderFrame.LayoutOrder = math.random(1, 1000)
    sliderFrame.Parent = scrollFrame
    
    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Size = UDim2.new(1, 0, 0, 18)
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Text = name .. ": " .. default
    sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderLabel.TextScaled = true
    sliderLabel.Font = Enum.Font.Gotham
    sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    sliderLabel.Parent = sliderFrame
    
    local sliderBG = Instance.new("Frame")
    sliderBG.Size = UDim2.new(1, -16, 0, 5)
    sliderBG.Position = UDim2.new(0, 8, 1, -12)
    sliderBG.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    sliderBG.BorderSizePixel = 0
    sliderBG.Parent = sliderFrame
    
    local sliderBGCorner = Instance.new("UICorner")
    sliderBGCorner.CornerRadius = UDim.new(0, 2)
    sliderBGCorner.Parent = sliderBG
    
    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new(0, 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(75, 0, 130) -- Purple
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderBG
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 2)
    fillCorner.Parent = sliderFill
    
    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0, 16, 0, 16)
    sliderButton.Position = UDim2.new(0, -8, 0.5, -8)
    sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderButton.Text = ""
    sliderButton.BorderSizePixel = 0
    sliderButton.Parent = sliderBG
    
    local sliderBtnCorner = Instance.new("UICorner")
    sliderBtnCorner.CornerRadius = UDim.new(0, 8)
    sliderBtnCorner.Parent = sliderButton
    
    local dragging = false
    local value = default
    
    local function updateSlider(input)
        local relativePos = math.clamp((input.Position.X - sliderBG.AbsolutePosition.X) / sliderBG.AbsoluteSize.X, 0, 1)
        value = min + (max - min) * relativePos
        
        sliderButton.Position = UDim2.new(relativePos, -8, 0.5, -8)
        sliderFill.Size = UDim2.new(relativePos, 0, 1, 0)
        sliderLabel.Text = name .. ": " .. math.floor(value + 0.5)
        
        if callback then
            callback(value)
        end
    end
    
    sliderButton.MouseButton1Down:Connect(function()
        dragging = true
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    -- Initialize
    local initialPos = (default - min) / (max - min)
    sliderButton.Position = UDim2.new(initialPos, -8, 0.5, -8)
    sliderFill.Size = UDim2.new(initialPos, 0, 1, 0)
end

-- TextBox Creation Function (Black & Purple theme)
local function createTextBox(name, placeholder, callback)
    local textFrame = Instance.new("Frame")
    textFrame.Size = UDim2.new(1, -16, 0, 50)
    textFrame.BackgroundTransparency = 1
    textFrame.LayoutOrder = math.random(1, 1000)
    textFrame.Parent = scrollFrame
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 0, 16)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = name
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.Parent = textFrame
    
    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(1, -8, 0, 26)
    textBox.Position = UDim2.new(0, 4, 1, -30)
    textBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    textBox.Text = ""
    textBox.PlaceholderText = placeholder
    textBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.TextScaled = true
    textBox.Font = Enum.Font.Gotham
    textBox.BorderSizePixel = 1
    textBox.BorderColor3 = Color3.fromRGB(75, 0, 130)
    textBox.Parent = textFrame
    
    local textCorner = Instance.new("UICorner")
    textCorner.CornerRadius = UDim.new(0, 4)
    textCorner.Parent = textBox
    
    if callback then
        textBox.FocusLost:Connect(function()
            callback(textBox.Text)
        end)
    end
end

-- Scrollable Dropdown Creation Function (Purple theme)
local function createDropdown(name, options, callback)
    local dropFrame = Instance.new("Frame")
    dropFrame.Size = UDim2.new(1, -16, 0, 50)
    dropFrame.BackgroundTransparency = 1
    dropFrame.LayoutOrder = math.random(1, 1000)
    dropFrame.Parent = scrollFrame
    
    local dropLabel = Instance.new("TextLabel")
    dropLabel.Size = UDim2.new(1, 0, 0, 16)
    dropLabel.BackgroundTransparency = 1
    dropLabel.Text = name
    dropLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropLabel.TextScaled = true
    dropLabel.Font = Enum.Font.Gotham
    dropLabel.TextXAlignment = Enum.TextXAlignment.Left
    dropLabel.Parent = dropFrame
    
    local dropBtn = Instance.new("TextButton")
    dropBtn.Size = UDim2.new(1, -8, 0, 26)
    dropBtn.Position = UDim2.new(0, 4, 1, -30)
    dropBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    dropBtn.Text = "Select " .. name
    dropBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropBtn.TextScaled = true
    dropBtn.Font = Enum.Font.Gotham
    dropBtn.BorderSizePixel = 1
    dropBtn.BorderColor3 = Color3.fromRGB(75, 0, 130)
    dropBtn.Parent = dropFrame
    
    local dropCorner = Instance.new("UICorner")
    dropCorner.CornerRadius = UDim.new(0, 4)
    dropCorner.Parent = dropBtn
    
    local dropArrow = Instance.new("TextLabel")
    dropArrow.Size = UDim2.new(0, 16, 1, 0)
    dropArrow.Position = UDim2.new(1, -20, 0, 0)
    dropArrow.BackgroundTransparency = 1
    dropArrow.Text = "‚ñº"
    dropArrow.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropArrow.TextScaled = true
    dropArrow.Font = Enum.Font.Gotham
    dropArrow.Parent = dropBtn
    
    local optionsFrame = Instance.new("ScrollingFrame")
    optionsFrame.Size = UDim2.new(1, -8, 0, math.min(#options * 20, 100))
    optionsFrame.Position = UDim2.new(0, 4, 1, 0)
    optionsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    optionsFrame.BorderSizePixel = 1
    optionsFrame.BorderColor3 = Color3.fromRGB(75, 0, 130)
    optionsFrame.Visible = false
    optionsFrame.ScrollBarThickness = 3
    optionsFrame.ScrollBarImageColor3 = Color3.fromRGB(75, 0, 130)
    optionsFrame.CanvasSize = UDim2.new(0, 0, 0, #options * 20)
    optionsFrame.Parent = dropFrame
    
    local optionsCorner = Instance.new("UICorner")
    optionsCorner.CornerRadius = UDim.new(0, 4)
    optionsCorner.Parent = optionsFrame
    
    local optionsLayout = Instance.new("UIListLayout")
    optionsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    optionsLayout.Parent = optionsFrame
    
    local isOpen = false
    
    dropBtn.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        optionsFrame.Visible = isOpen
        dropArrow.Text = isOpen and "‚ñ≤" or "‚ñº"
        
        if isOpen then
            dropFrame.Size = UDim2.new(1, -16, 0, 50 + math.min(#options * 20, 100))
        else
            dropFrame.Size = UDim2.new(1, -16, 0, 50)
        end
    end)
    
    for i, option in pairs(options) do
        local optionBtn = Instance.new("TextButton")
        optionBtn.Size = UDim2.new(1, 0, 0, 20)
        optionBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        optionBtn.Text = option
        optionBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
        optionBtn.TextScaled = true
        optionBtn.Font = Enum.Font.Gotham
        optionBtn.BorderSizePixel = 0
        optionBtn.LayoutOrder = i
        optionBtn.Parent = optionsFrame
        
        optionBtn.MouseEnter:Connect(function()
            optionBtn.BackgroundColor3 = Color3.fromRGB(75, 0, 130)
            optionBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        end)
        
        optionBtn.MouseLeave:Connect(function()
            optionBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            optionBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
        end)
        
        optionBtn.MouseButton1Click:Connect(function()
            dropBtn.Text = option
            optionsFrame.Visible = false
            isOpen = false
            dropArrow.Text = "‚ñº"
            dropFrame.Size = UDim2.new(1, -16, 0, 50)
            
            if callback then
                callback(option)
            end
        end)
    end
end

-- Text Label Creation Function
local function createTextLabel(text)
    local labelFrame = Instance.new("Frame")
    labelFrame.Size = UDim2.new(1, -16, 0, 25)
    labelFrame.BackgroundTransparency = 1
    labelFrame.LayoutOrder = math.random(1, 1000)
    labelFrame.Parent = scrollFrame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = labelFrame
end

-- Create tabs with content
createTab("Main", function()
    createTextLabel("üè† Main Features")
    createToggle("Enable Aimbot", function(state) end)
    createToggle("Enable ESP", function(state) end)
    createButton("Execute Script", function() end)
    createSlider("FOV Size", 50, 200, 90, function(value) end)
end)

createTab("Player", function()
    createTextLabel("üë§ Player Modifications")
    createSlider("Walk Speed", 16, 100, 16, function(value)
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = value
        end
    end)
    createSlider("Jump Power", 50, 200, 50, function(value)
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.JumpPower = value
        end
    end)
    createToggle("No Clip", function(state) end)
    createToggle("Infinite Jump", function(state) end)
    createButton("Reset Character", function()
        if player.Character then
            player.Character:BreakJoints()
        end
    end)
end)

createTab("Visuals", function()
    createTextLabel("üëÅ Visual Enhancements")
    createToggle("Full Bright", function(state)
        if state then
            game.Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            game.Lighting.Brightness = 2
        else
            game.Lighting.Ambient = Color3.fromRGB(0, 0, 0)
            game.Lighting.Brightness = 1
        end
    end)
    createSlider("FOV", 70, 120, 70, function(value)
        if workspace.CurrentCamera then
            workspace.CurrentCamera.FieldOfView = value
        end
    end)
    createDropdown("Sky Box", {"Default", "Night", "Space", "Sunset", "Ocean", "Desert", "Forest", "City", "Mountain", "Cave"}, function(selected) end)
    createToggle("Remove Fog", function(state)
        if state then
            game.Lighting.FogEnd = 100000
        else
            game.Lighting.FogEnd = 100
        end
    end)
end)

createTab("Scripts", function()
    createTextLabel("üìú Script Execution")
    createTextBox("Script URL", "Enter script URL here...", function(url) end)
    createTextBox("Custom Code", "Enter Lua code here...", function(code) end)
    createButton("Execute Code", function() end)
    createToggle("Auto Execute", function(state) end)
    createDropdown("Preset Scripts", {
        "Infinite Yield", "Dark Dex", "Remote Spy", "Speed Hub", 
        "Arsenal Script", "Phantom Forces", "Jailbreak", "Adopt Me",
        "Tower Defense", "Pet Simulator", "Mining Simulator", "Car Crushers"
    }, function(selected) end)
end)

createTab("Settings", function()
    createTextLabel("‚öô Hub Settings")
    createSlider("GUI Scale", 0.5, 2, 1, function(value)
        mainFrame.Size = UDim2.new(0, 500 * value, 0, 350 * value)
        mainFrame.Position = UDim2.new(0.5, -250 * value, 0.5, -175 * value)
    end)
    createToggle("Rainbow Mode", function(state) end)
    createDropdown("Theme", {"Default", "Dark", "Light", "Blue", "Red", "Green", "Purple", "Custom"}, function(selected) end)
    createTextBox("Key Bind", "Enter key...", function(key) end)
    createButton("Save Settings", function() end)
end)

createTab("Combat", function()
    createTextLabel("‚öî Combat Features")
    createToggle("Auto Aim", function(state) end)
    createToggle("Trigger Bot", function(state) end)
    createSlider("Aim Smoothness", 1, 10, 5, function(value) end)
    createDropdown("Target Part", {"Head", "Torso", "HumanoidRootPart", "Random"}, function(selected) end)
    createButton("Kill All", function() end)
end)

createTab("Misc", function()
    createTextLabel("üîß Miscellaneous")
    createToggle("Auto Farm", function(state) end)
    createToggle("Fly Mode", function(state) end)
    createButton("Teleport to Spawn", function()
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(0, 5, 0)
        end
    end)
    createSlider("Time Scale", 0.1, 5, 1, function(value)
        game.Lighting.ClockTime = value * 4.8
    end)
    createTextBox("Chat Message", "Enter message...", function(msg)
        if game.ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents") and 
           game.ReplicatedStorage.DefaultChatSystemChatEvents:FindFirstChild("SayMessageRequest") then
            game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
        end
    end)
end)

-- Dragging functionality for main frame
titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragToggle = mainFrame
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = nil
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragToggle then
            updateInput(input)
        end
    end
end)

-- Dragging for ball opener
ballOpener.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragToggle = ballOpener
        dragStart = input.Position
        startPos = ballOpener.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = nil
            end
        end)
    end
end)

ballOpener.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragToggle then
            updateInput(input)
        end
    end
end)

-- Ball opener click functionality
ballButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    
    if mainFrame.Visible and tabs["Main"] then
        tabs["Main"].button.MouseButton1Click()
    end
end)

-- Confirmation screen functionality
yesBtn.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

noBtn.MouseButton1Click:Connect(function()
    confirmFrame.Visible = false
end)

-- Close button functionality (Show confirmation)
closeBtn.MouseButton1Click:Connect(function()
    confirmFrame.Visible = true
end)

-- Auto-resize scroll frames based on content with increased length
local function updateScrollSize()
    wait(0.1)
    local contentSize = contentLayout.AbsoluteContentSize
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, contentSize.Y + 50) -- Increased padding
    
    local tabsSize = tabsLayout.AbsoluteContentSize  
    tabsScroll.CanvasSize = UDim2.new(0, 0, 0, tabsSize.Y + 50) -- Increased padding
end

contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateScrollSize)
tabsLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateScrollSize)

-- Initialize with first tab
if tabs["Main"] then
    tabs["Main"].button.MouseButton1Click()
end
