local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local window = DrRayLibrary:Load("Fryzer Hub", "Default")
local tab = DrRayLibrary.newTab("Fruit Stealer", "ImageIdHere")

-- Variables to store current selections
local currentSelectedPlayer = nil
local currentPlayerItems = {}
local selectedItemIndex = 1

-- Function to get all player names
local function getPlayerNames()
    local names = {}
    local players = Players:GetPlayers()
    
    for _, p in ipairs(players) do
        if p ~= player then -- Exclude local player
            table.insert(names, p.Name)
        end
    end
    
    if #names == 0 then
        table.insert(names, "No other players")
    end
    
    return names
end

-- Function to get items from selected player's backpack
local function getPlayerItems(playerName)
    local items = {}
    local targetPlayer = Players:FindFirstChild(playerName)
    
    if targetPlayer and targetPlayer:FindFirstChild("Backpack") then
        local backpack = targetPlayer.Backpack
        
        for _, item in pairs(backpack:GetChildren()) do
            if item:IsA("Tool") or item:IsA("HopperBin") then
                table.insert(items, {name = item.Name, object = item})
            end
        end
    end
    
    return items
end

-- Function to steal/copy selected item
local function stealItem(itemObject)
    if not itemObject then
        print("No item selected!")
        return false
    end
    
    local success, err = pcall(function()
        local clonedItem = itemObject:Clone()
        clonedItem.Parent = player.Backpack
    end)
    
    if success then
        print("Successfully copied: " .. itemObject.Name)
        return true
    else
        print("Error copying item: " .. tostring(err))
        return false
    end
end

-- Function to steal all items from selected player
local function stealAllItems(playerName)
    local targetPlayer = Players:FindFirstChild(playerName)
    
    if not targetPlayer or not targetPlayer:FindFirstChild("Backpack") then
        print("Player or backpack not found!")
        return 0
    end
    
    local backpack = targetPlayer.Backpack
    local stolenCount = 0
    
    for _, item in pairs(backpack:GetChildren()) do
        if item:IsA("Tool") or item:IsA("HopperBin") then
            local success, err = pcall(function()
                local clonedItem = item:Clone()
                clonedItem.Parent = player.Backpack
                stolenCount = stolenCount + 1
            end)
            
            if not success then
                print("Error copying " .. item.Name .. ": " .. tostring(err))
            end
        end
    end
    
    print("Successfully copied " .. stolenCount .. " items from " .. playerName)
    return stolenCount
end

-- Function to display items in console
local function displayPlayerItems()
    if #currentPlayerItems == 0 then
        print("No items found in " .. currentSelectedPlayer .. "'s backpack")
        return
    end
    
    print("=== " .. currentSelectedPlayer .. "'s Backpack ===")
    for i, itemData in ipairs(currentPlayerItems) do
        local marker = (i == selectedItemIndex) and " <-- SELECTED" or ""
        print(i .. ". " .. itemData.name .. marker)
    end
    print("===========================")
    print("Use 'Previous Item' and 'Next Item' buttons to navigate")
    print("Current selection: " .. (currentPlayerItems[selectedItemIndex] and currentPlayerItems[selectedItemIndex].name or "None"))
end

-- Initialize player names
local playerNames = getPlayerNames()

-- Create Player Selection Dropdown
tab.newDropdown("Select Player", "Choose a player to view their items", playerNames, function(selectedPlayer)
    if selectedPlayer == "No other players" then
        print("No other players available")
        return
    end
    
    currentSelectedPlayer = selectedPlayer
    currentPlayerItems = getPlayerItems(selectedPlayer)
    selectedItemIndex = 1
    
    print("Selected player: " .. selectedPlayer)
    displayPlayerItems()
end)

-- Create navigation buttons for items
tab.newButton("Previous Item", "Select previous item in backpack", function()
    if #currentPlayerItems == 0 then
        print("No items available")
        return
    end
    
    selectedItemIndex = selectedItemIndex - 1
    if selectedItemIndex < 1 then
        selectedItemIndex = #currentPlayerItems
    end
    
    print("Selected: " .. currentPlayerItems[selectedItemIndex].name .. " (" .. selectedItemIndex .. "/" .. #currentPlayerItems .. ")")
end)

tab.newButton("Next Item", "Select next item in backpack", function()
    if #currentPlayerItems == 0 then
        print("No items available")
        return
    end
    
    selectedItemIndex = selectedItemIndex + 1
    if selectedItemIndex > #currentPlayerItems then
        selectedItemIndex = 1
    end
    
    print("Selected: " .. currentPlayerItems[selectedItemIndex].name .. " (" .. selectedItemIndex .. "/" .. #currentPlayerItems .. ")")
end)

-- Create Steal Selected Item Button
tab.newButton("Steal Selected Item", "Copy the selected item to your backpack", function()
    if not currentSelectedPlayer then
        print("Please select a player first!")
        return
    end
    
    if #currentPlayerItems == 0 then
        print("No items available from this player!")
        return
    end
    
    local selectedItem = currentPlayerItems[selectedItemIndex]
    if selectedItem and selectedItem.object then
        local success = stealItem(selectedItem.object)
        if success then
            print("Successfully stole: " .. selectedItem.name)
        end
    else
        print("Invalid item selection!")
    end
end)

-- Create Show Items Button
tab.newButton("Show Player Items", "Display current player's backpack items", function()
    if not currentSelectedPlayer then
        print("Please select a player first!")
        return
    end
    
    -- Refresh items list
    currentPlayerItems = getPlayerItems(currentSelectedPlayer)
    selectedItemIndex = 1
    displayPlayerItems()
end)

-- Create Steal All Items Button
tab.newButton("Steal All Items", "Copy all items from selected player", function()
    if not currentSelectedPlayer then
        print("Please select a player first!")
        return
    end
    
    local count = stealAllItems(currentSelectedPlayer)
    print("Attempted to steal " .. count .. " items from " .. currentSelectedPlayer)
end)

-- Create Refresh Button
tab.newButton("Refresh Everything", "Update players and items", function()
    local newPlayerNames = getPlayerNames()
    print("=== REFRESH ===")
    print("Available players:")
    for i, name in ipairs(newPlayerNames) do
        print(i .. ". " .. name)
    end
    
    -- Refresh current player's items if one is selected
    if currentSelectedPlayer then
        currentPlayerItems = getPlayerItems(currentSelectedPlayer)
        selectedItemIndex = 1
        displayPlayerItems()
    end
    
    print("Refresh completed!")
end)

-- Auto-refresh when players join/leave
Players.PlayerAdded:Connect(function(newPlayer)
    wait(1) -- Wait for player to fully load
    print(newPlayer.Name .. " joined the game!")
    print("Use 'Refresh Everything' button to update the player list")
end)

Players.PlayerRemoving:Connect(function(leavingPlayer)
    if currentSelectedPlayer == leavingPlayer.Name then
        currentSelectedPlayer = nil
        currentPlayerItems = {}
        selectedItemIndex = 1
        print("Your selected player (" .. leavingPlayer.Name .. ") left the game!")
    end
    print(leavingPlayer.Name .. " left the game!")
end)

-- Window controls
window:Toggle()
window:Open()

print("=== Fruit Stealer Loaded Successfully! ===")
print("Instructions:")
print("1. Select a player from the dropdown")
print("2. Click 'Show Player Items' to see their backpack")
print("3. Use 'Next Item' and 'Previous Item' to navigate")
print("4. Click 'Steal Selected Item' to copy the current item")
print("5. Or click 'Steal All Items' to copy everything")
print("6. Use 'Refresh Everything' to update lists")
print("===========================================")
