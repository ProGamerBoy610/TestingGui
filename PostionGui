-- Roblox Dropdown GUI Script
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DropdownGUI"
screenGui.Parent = playerGui

-- Main dropdown frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 200, 0, 50)
mainFrame.Position = UDim2.new(0, 50, 0, 50)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Corner rounding
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 8)
mainCorner.Parent = mainFrame

-- Dropdown header button
local headerButton = Instance.new("TextButton")
headerButton.Name = "HeaderButton"
headerButton.Size = UDim2.new(1, 0, 1, 0)
headerButton.Position = UDim2.new(0, 0, 0, 0)
headerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
headerButton.BorderSizePixel = 0
headerButton.Text = "Player Controls ▼"
headerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
headerButton.TextScaled = true
headerButton.Font = Enum.Font.SourceSansBold
headerButton.Parent = mainFrame

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 8)
headerCorner.Parent = headerButton

-- Dropdown content frame
local dropdownFrame = Instance.new("Frame")
dropdownFrame.Name = "DropdownFrame"
dropdownFrame.Size = UDim2.new(1, 0, 0, 0)
dropdownFrame.Position = UDim2.new(0, 0, 1, 0)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
dropdownFrame.BorderSizePixel = 0
dropdownFrame.ClipsDescendants = true
dropdownFrame.Parent = mainFrame

local dropdownCorner = Instance.new("UICorner")
dropdownCorner.CornerRadius = UDim.new(0, 8)
dropdownCorner.Parent = dropdownFrame

-- Variables for button states
local walkspeedEnabled = false
local jumpPowerEnabled = false
local isDropdownOpen = false

-- Callback functions
local function onWalkspeedToggle()
    walkspeedEnabled = not walkspeedEnabled
    
    if walkspeedEnabled then
        -- Change to green dot and increase walkspeed
        player.Character.Humanoid.WalkSpeed = 45
        print("Walkspeed increased to 45")
    else
        -- Change to red dot and reset walkspeed
        player.Character.Humanoid.WalkSpeed = 16
        print("Walkspeed reset to 16")
    end
end

local function onJumpPowerToggle()
    jumpPowerEnabled = not jumpPowerEnabled
    
    if jumpPowerEnabled then
        -- Change to green dot and increase jump power
        player.Character.Humanoid.JumpPower = 100
        print("Jump power increased to 100")
    else
        -- Change to red dot and reset jump power
        player.Character.Humanoid.JumpPower = 50
        print("Jump power reset to 50")
    end
end

local function destroyGUI()
    screenGui:Destroy()
    print("GUI destroyed")
end

-- Create buttons
local function createToggleButton(name, position, callback)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(1, -10, 0, 30)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    button.BorderSizePixel = 0
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.Font = Enum.Font.SourceSans
    button.Parent = dropdownFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 4)
    buttonCorner.Parent = button
    
    -- Create status dot
    local statusDot = Instance.new("Frame")
    statusDot.Name = "StatusDot"
    statusDot.Size = UDim2.new(0, 8, 0, 8)
    statusDot.Position = UDim2.new(0, 5, 0.5, -4)
    statusDot.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red by default
    statusDot.BorderSizePixel = 0
    statusDot.Parent = button
    
    local dotCorner = Instance.new("UICorner")
    dotCorner.CornerRadius = UDim.new(0, 4)
    dotCorner.Parent = statusDot
    
    -- Button click connection
    button.MouseButton1Click:Connect(function()
        callback()
        
        -- Update dot color based on state
        if name == "WalkspeedButton" then
            statusDot.BackgroundColor3 = walkspeedEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        elseif name == "JumpPowerButton" then
            statusDot.BackgroundColor3 = jumpPowerEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        end
    end)
    
    return button
end

-- Create the three buttons
local walkspeedButton = createToggleButton("WalkspeedButton", UDim2.new(0, 5, 0, 5), onWalkspeedToggle)
walkspeedButton.Text = "  Speed Boost"

local jumpPowerButton = createToggleButton("JumpPowerButton", UDim2.new(0, 5, 0, 40), onJumpPowerToggle)
jumpPowerButton.Text = "  Jump Boost"

local destroyButton = Instance.new("TextButton")
destroyButton.Name = "DestroyButton"
destroyButton.Size = UDim2.new(1, -10, 0, 30)
destroyButton.Position = UDim2.new(0, 5, 0, 75)
destroyButton.BackgroundColor3 = Color3.fromRGB(150, 30, 30)
destroyButton.BorderSizePixel = 0
destroyButton.Text = "Destroy GUI"
destroyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
destroyButton.TextScaled = true
destroyButton.Font = Enum.Font.SourceSans
destroyButton.Parent = dropdownFrame

local destroyCorner = Instance.new("UICorner")
destroyCorner.CornerRadius = UDim.new(0, 4)
destroyCorner.Parent = destroyButton

destroyButton.MouseButton1Click:Connect(destroyGUI)

-- Dropdown toggle functionality
local function toggleDropdown()
    isDropdownOpen = not isDropdownOpen
    
    local targetSize = isDropdownOpen and UDim2.new(1, 0, 0, 110) or UDim2.new(1, 0, 0, 0)
    local headerText = isDropdownOpen and "Player Controls ▲" or "Player Controls ▼"
    
    headerButton.Text = headerText
    
    local tween = TweenService:Create(
        dropdownFrame,
        TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {Size = targetSize}
    )
    
    tween:Play()
end

-- Connect header button to toggle dropdown
headerButton.MouseButton1Click:Connect(toggleDropdown)

-- Make the GUI draggable
local dragging = false
local dragStart = nil
local startPos = nil

local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

headerButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

headerButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragging then
            update(input)
        end
    end
end)

print("Dropdown GUI loaded successfully!")
