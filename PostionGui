-- Fryzer Hub - Complete Executor GUI
-- Created for Roblox Executor with full functionality

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Remove existing GUI if it exists
if playerGui:FindFirstChild("FryzerHub") then
    playerGui:FindFirstChild("FryzerHub"):Destroy()
end

-- Create main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FryzerHub"
screenGui.Parent = playerGui
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Variables for dragging
local dragToggle = nil
local dragSpeed = 0.25
local dragStart = nil
local startPos = nil

-- Drag function
local function updateInput(input)
    local delta = input.Position - dragStart
    local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    TweenService:Create(dragToggle, TweenInfo.new(dragSpeed), {Position = position}):Play()
end

-- Create Ball Opener GUI (2nd GUI)
local ballOpener = Instance.new("Frame")
ballOpener.Name = "BallOpener"
ballOpener.Size = UDim2.new(0, 80, 0, 80)
ballOpener.Position = UDim2.new(0, 20, 0.5, -40)
ballOpener.BackgroundColor3 = Color3.fromRGB(120, 60, 255)
ballOpener.BorderSizePixel = 0
ballOpener.Parent = screenGui

-- Make ball round
local ballCorner = Instance.new("UICorner")
ballCorner.CornerRadius = UDim.new(0.5, 0)
ballCorner.Parent = ballOpener

-- Ball text
local ballText = Instance.new("TextLabel")
ballText.Size = UDim2.new(1, 0, 1, 0)
ballText.BackgroundTransparency = 1
ballText.Text = "Fryzer"
ballText.TextColor3 = Color3.fromRGB(255, 255, 255)
ballText.TextScaled = true
ballText.Font = Enum.Font.GothamBold
ballText.Parent = ballOpener

-- Ball click detector
local ballButton = Instance.new("TextButton")
ballButton.Size = UDim2.new(1, 0, 1, 0)
ballButton.BackgroundTransparency = 1
ballButton.Text = ""
ballButton.Parent = ballOpener

-- Main GUI Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 600, 0, 400)
mainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = screenGui

-- Main corner
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 10)
mainCorner.Parent = mainFrame

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 35)
titleBar.BackgroundColor3 = Color3.fromRGB(120, 60, 255)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 10)
titleCorner.Parent = titleBar

-- Title corner fix
local titleFix = Instance.new("Frame")
titleFix.Size = UDim2.new(1, 0, 0, 10)
titleFix.Position = UDim2.new(0, 0, 1, -10)
titleFix.BackgroundColor3 = Color3.fromRGB(120, 60, 255)
titleFix.BorderSizePixel = 0
titleFix.Parent = titleBar

-- Title text
local titleText = Instance.new("TextLabel")
titleText.Size = UDim2.new(0, 150, 1, 0)
titleText.Position = UDim2.new(0, 10, 0, 0)
titleText.BackgroundTransparency = 1
titleText.Text = "Fryzer Hub"
titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
titleText.TextScaled = true
titleText.Font = Enum.Font.GothamBold
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.Parent = titleBar

-- Minimize Button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 30, 0, 25)
minimizeBtn.Position = UDim2.new(1, -70, 0, 5)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(255, 200, 0)
minimizeBtn.Text = "_"
minimizeBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
minimizeBtn.TextScaled = true
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.BorderSizePixel = 0
minimizeBtn.Parent = titleBar

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(0, 4)
minimizeCorner.Parent = minimizeBtn

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 25)
closeBtn.Position = UDim2.new(1, -35, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.TextScaled = true
closeBtn.Font = Enum.Font.GothamBold
closeBtn.BorderSizePixel = 0
closeBtn.Parent = titleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 4)
closeCorner.Parent = closeBtn

-- Confirmation Frame (3rd GUI)
local confirmFrame = Instance.new("Frame")
confirmFrame.Name = "ConfirmFrame"
confirmFrame.Size = UDim2.new(0, 300, 0, 150)
confirmFrame.Position = UDim2.new(0.5, -150, 0.5, -75)
confirmFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
confirmFrame.BorderSizePixel = 0
confirmFrame.Visible = false
confirmFrame.Parent = screenGui

local confirmCorner = Instance.new("UICorner")
confirmCorner.CornerRadius = UDim.new(0, 10)
confirmCorner.Parent = confirmFrame

-- Confirmation text
local confirmText = Instance.new("TextLabel")
confirmText.Size = UDim2.new(1, -20, 0, 80)
confirmText.Position = UDim2.new(0, 10, 0, 10)
confirmText.BackgroundTransparency = 1
confirmText.Text = "Are you sure you want to close?\nThis will not be reactivated automatically."
confirmText.TextColor3 = Color3.fromRGB(255, 255, 255)
confirmText.TextScaled = true
confirmText.Font = Enum.Font.Gotham
confirmText.TextWrapped = true
confirmText.Parent = confirmFrame

-- Yes button
local yesBtn = Instance.new("TextButton")
yesBtn.Size = UDim2.new(0, 80, 0, 35)
yesBtn.Position = UDim2.new(0, 50, 1, -45)
yesBtn.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
yesBtn.Text = "Yes"
yesBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
yesBtn.TextScaled = true
yesBtn.Font = Enum.Font.GothamBold
yesBtn.BorderSizePixel = 0
yesBtn.Parent = confirmFrame

local yesCorner = Instance.new("UICorner")
yesCorner.CornerRadius = UDim.new(0, 6)
yesCorner.Parent = yesBtn

-- No button
local noBtn = Instance.new("TextButton")
noBtn.Size = UDim2.new(0, 80, 0, 35)
noBtn.Position = UDim2.new(1, -130, 1, -45)
noBtn.BackgroundColor3 = Color3.fromRGB(60, 180, 60)
noBtn.Text = "No"
noBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
noBtn.TextScaled = true
noBtn.Font = Enum.Font.GothamBold
noBtn.BorderSizePixel = 0
noBtn.Parent = confirmFrame

local noCorner = Instance.new("UICorner")
noCorner.CornerRadius = UDim.new(0, 6)
noCorner.Parent = noBtn

-- Tabs Frame (Left Side)
local tabsFrame = Instance.new("Frame")
tabsFrame.Size = UDim2.new(0, 120, 1, -35)
tabsFrame.Position = UDim2.new(0, 0, 0, 35)
tabsFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
tabsFrame.BorderSizePixel = 0
tabsFrame.Parent = mainFrame

-- Content Frame (Right Side)
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -120, 1, -35)
contentFrame.Position = UDim2.new(0, 120, 0, 35)
contentFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

-- Scrolling Frame for content
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, -10, 1, -10)
scrollFrame.Position = UDim2.new(0, 5, 0, 5)
scrollFrame.BackgroundTransparency = 1
scrollFrame.ScrollBarThickness = 6
scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(120, 60, 255)
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 800)
scrollFrame.Parent = contentFrame

-- UI Layout for scroll content
local contentLayout = Instance.new("UIListLayout")
contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
contentLayout.Padding = UDim.new(0, 8)
contentLayout.Parent = scrollFrame

-- Tab creation function
local currentTab = nil
local tabs = {}

local function createTab(name, content)
    local tabBtn = Instance.new("TextButton")
    tabBtn.Size = UDim2.new(1, -10, 0, 35)
    tabBtn.Position = UDim2.new(0, 5, 0, (#tabs * 40) + 5)
    tabBtn.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    tabBtn.Text = name
    tabBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
    tabBtn.TextScaled = true
    tabBtn.Font = Enum.Font.Gotham
    tabBtn.BorderSizePixel = 0
    tabBtn.Parent = tabsFrame
    
    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 6)
    tabCorner.Parent = tabBtn
    
    tabs[name] = {button = tabBtn, content = content, active = false}
    
    tabBtn.MouseButton1Click:Connect(function()
        -- Deactivate all tabs
        for tabName, tab in pairs(tabs) do
            tab.button.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
            tab.button.TextColor3 = Color3.fromRGB(200, 200, 200)
            tab.active = false
        end
        
        -- Activate clicked tab
        tabBtn.BackgroundColor3 = Color3.fromRGB(120, 60, 255)
        tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        tabs[name].active = true
        currentTab = name
        
        -- Clear and populate content
        for _, child in pairs(scrollFrame:GetChildren()) do
            if child:IsA("Frame") or child:IsA("TextButton") or child:IsA("TextBox") then
                child:Destroy()
            end
        end
        
        content()
    end)
end

-- Toggle Button Creation Function
local function createToggle(name, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, -20, 0, 40)
    toggleFrame.BackgroundTransparency = 1
    toggleFrame.LayoutOrder = math.random(1, 1000)
    toggleFrame.Parent = scrollFrame
    
    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = name
    toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleLabel.TextScaled = true
    toggleLabel.Font = Enum.Font.Gotham
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.Parent = toggleFrame
    
    local toggleBtn = Instance.new("TextButton")
    toggleBtn.Size = UDim2.new(0, 50, 0, 25)
    toggleBtn.Position = UDim2.new(1, -60, 0.5, -12.5)
    toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
    toggleBtn.Text = ""
    toggleBtn.BorderSizePixel = 0
    toggleBtn.Parent = toggleFrame
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 12.5)
    toggleCorner.Parent = toggleBtn
    
    local toggleIndicator = Instance.new("Frame")
    toggleIndicator.Size = UDim2.new(0, 19, 0, 19)
    toggleIndicator.Position = UDim2.new(0, 3, 0, 3)
    toggleIndicator.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    toggleIndicator.BorderSizePixel = 0
    toggleIndicator.Parent = toggleBtn
    
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 9.5)
    indicatorCorner.Parent = toggleIndicator
    
    local isToggled = false
    
    toggleBtn.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        
        if isToggled then
            TweenService:Create(toggleBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 180, 60)}):Play()
            TweenService:Create(toggleIndicator, TweenInfo.new(0.2), {Position = UDim2.new(1, -22, 0, 3)}):Play()
        else
            TweenService:Create(toggleBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 60, 65)}):Play()
            TweenService:Create(toggleIndicator, TweenInfo.new(0.2), {Position = UDim2.new(0, 3, 0, 3)}):Play()
        end
        
        if callback then
            callback(isToggled)
        end
    end)
end

-- Slider Creation Function
local function createSlider(name, min, max, default, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, -20, 0, 50)
    sliderFrame.BackgroundTransparency = 1
    sliderFrame.LayoutOrder = math.random(1, 1000)
    sliderFrame.Parent = scrollFrame
    
    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Size = UDim2.new(1, 0, 0, 20)
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Text = name .. ": " .. default
    sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderLabel.TextScaled = true
    sliderLabel.Font = Enum.Font.Gotham
    sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    sliderLabel.Parent = sliderFrame
    
    local sliderBG = Instance.new("Frame")
    sliderBG.Size = UDim2.new(1, -20, 0, 6)
    sliderBG.Position = UDim2.new(0, 10, 1, -15)
    sliderBG.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
    sliderBG.BorderSizePixel = 0
    sliderBG.Parent = sliderFrame
    
    local sliderBGCorner = Instance.new("UICorner")
    sliderBGCorner.CornerRadius = UDim.new(0, 3)
    sliderBGCorner.Parent = sliderBG
    
    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new(0, 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(120, 60, 255)
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderBG
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 3)
    fillCorner.Parent = sliderFill
    
    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0, 20, 0, 20)
    sliderButton.Position = UDim2.new(0, -10, 0.5, -10)
    sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderButton.Text = ""
    sliderButton.BorderSizePixel = 0
    sliderButton.Parent = sliderBG
    
    local sliderBtnCorner = Instance.new("UICorner")
    sliderBtnCorner.CornerRadius = UDim.new(0, 10)
    sliderBtnCorner.Parent = sliderButton
    
    local dragging = false
    local value = default
    
    local function updateSlider(input)
        local relativePos = math.clamp((input.Position.X - sliderBG.AbsolutePosition.X) / sliderBG.AbsoluteSize.X, 0, 1)
        value = min + (max - min) * relativePos
        
        sliderButton.Position = UDim2.new(relativePos, -10, 0.5, -10)
        sliderFill.Size = UDim2.new(relativePos, 0, 1, 0)
        sliderLabel.Text = name .. ": " .. math.floor(value + 0.5)
        
        if callback then
            callback(value)
        end
    end
    
    sliderButton.MouseButton1Down:Connect(function()
        dragging = true
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    -- Initialize
    local initialPos = (default - min) / (max - min)
    sliderButton.Position = UDim2.new(initialPos, -10, 0.5, -10)
    sliderFill.Size = UDim2.new(initialPos, 0, 1, 0)
end

-- TextBox Creation Function
local function createTextBox(name, placeholder, callback)
    local textFrame = Instance.new("Frame")
    textFrame.Size = UDim2.new(1, -20, 0, 60)
    textFrame.BackgroundTransparency = 1
    textFrame.LayoutOrder = math.random(1, 1000)
    textFrame.Parent = scrollFrame
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 0, 20)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = name
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.Gotham
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.Parent = textFrame
    
    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(1, -10, 0, 30)
    textBox.Position = UDim2.new(0, 5, 1, -35)
    textBox.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    textBox.Text = ""
    textBox.PlaceholderText = placeholder
    textBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textBox.TextScaled = true
    textBox.Font = Enum.Font.Gotham
    textBox.BorderSizePixel = 0
    textBox.Parent = textFrame
    
    local textCorner = Instance.new("UICorner")
    textCorner.CornerRadius = UDim.new(0, 6)
    textCorner.Parent = textBox
    
    if callback then
        textBox.FocusLost:Connect(function()
            callback(textBox.Text)
        end)
    end
end

-- Dropdown Creation Function
local function createDropdown(name, options, callback)
    local dropFrame = Instance.new("Frame")
    dropFrame.Size = UDim2.new(1, -20, 0, 60)
    dropFrame.BackgroundTransparency = 1
    dropFrame.LayoutOrder = math.random(1, 1000)
    dropFrame.Parent = scrollFrame
    
    local dropLabel = Instance.new("TextLabel")
    dropLabel.Size = UDim2.new(1, 0, 0, 20)
    dropLabel.BackgroundTransparency = 1
    dropLabel.Text = name
    dropLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropLabel.TextScaled = true
    dropLabel.Font = Enum.Font.Gotham
    dropLabel.TextXAlignment = Enum.TextXAlignment.Left
    dropLabel.Parent = dropFrame
    
    local dropBtn = Instance.new("TextButton")
    dropBtn.Size = UDim2.new(1, -10, 0, 30)
    dropBtn.Position = UDim2.new(0, 5, 1, -35)
    dropBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    dropBtn.Text = "Select " .. name
    dropBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropBtn.TextScaled = true
    dropBtn.Font = Enum.Font.Gotham
    dropBtn.BorderSizePixel = 0
    dropBtn.Parent = dropFrame
    
    local dropCorner = Instance.new("UICorner")
    dropCorner.CornerRadius = UDim.new(0, 6)
    dropCorner.Parent = dropBtn
    
    local dropArrow = Instance.new("TextLabel")
    dropArrow.Size = UDim2.new(0, 20, 1, 0)
    dropArrow.Position = UDim2.new(1, -25, 0, 0)
    dropArrow.BackgroundTransparency = 1
    dropArrow.Text = "▼"
    dropArrow.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropArrow.TextScaled = true
    dropArrow.Font = Enum.Font.Gotham
    dropArrow.Parent = dropBtn
    
    local optionsFrame = Instance.new("Frame")
    optionsFrame.Size = UDim2.new(1, -10, 0, #options * 25)
    optionsFrame.Position = UDim2.new(0, 5, 1, 0)
    optionsFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    optionsFrame.BorderSizePixel = 0
    optionsFrame.Visible = false
    optionsFrame.Parent = dropFrame
    
    local optionsCorner = Instance.new("UICorner")
    optionsCorner.CornerRadius = UDim.new(0, 6)
    optionsCorner.Parent = optionsFrame
    
    local optionsLayout = Instance.new("UIListLayout")
    optionsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    optionsLayout.Parent = optionsFrame
    
    local isOpen = false
    
    dropBtn.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        optionsFrame.Visible = isOpen
        dropArrow.Text = isOpen and "▲" or "▼"
        
        if isOpen then
            dropFrame.Size = UDim2.new(1, -20, 0, 60 + (#options * 25))
        else
            dropFrame.Size = UDim2.new(1, -20, 0, 60)
        end
    end)
    
    for i, option in pairs(options) do
        local optionBtn = Instance.new("TextButton")
        optionBtn.Size = UDim2.new(1, 0, 0, 25)
        optionBtn.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
        optionBtn.Text = option
        optionBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
        optionBtn.TextScaled = true
        optionBtn.Font = Enum.Font.Gotham
        optionBtn.BorderSizePixel = 0
        optionBtn.LayoutOrder = i
        optionBtn.Parent = optionsFrame
        
        optionBtn.MouseEnter:Connect(function()
            optionBtn.BackgroundColor3 = Color3.fromRGB(120, 60, 255)
            optionBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        end)
        
        optionBtn.MouseLeave:Connect(function()
            optionBtn.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
            optionBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
        end)
        
        optionBtn.MouseButton1Click:Connect(function()
            dropBtn.Text = option
            optionsFrame.Visible = false
            isOpen = false
            dropArrow.Text = "▼"
            dropFrame.Size = UDim2.new(1, -20, 0, 60)
            
            if callback then
                callback(option)
            end
        end)
    end
end

-- Text Label Creation Function
local function createTextLabel(text)
    local labelFrame = Instance.new("Frame")
    labelFrame.Size = UDim2.new(1, -20, 0, 30)
    labelFrame.BackgroundTransparency = 1
    labelFrame.LayoutOrder = math.random(1, 1000)
    labelFrame.Parent = scrollFrame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = labelFrame
end

-- Create tabs with content
createTab("Main", function()
    createTextLabel("Welcome to Fryzer Hub!")
    createToggle("Enable Aimbot", function(state)
        print("Aimbot:", state)
    end)
    createToggle("Enable ESP", function(state)
        print("ESP:", state)
    end)
    createSlider("FOV Size", 50, 200, 90, function(value)
        print("FOV:", value)
    end)
    createSlider("Aim Smoothness", 1, 10, 5, function(value)
        print("Smoothness:", value)
    end)
end)

createTab("Player", function()
    createTextLabel("Player Modifications")
    createSlider("Walk Speed", 16, 100, 16, function(value)
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = value
        end
    end)
    createSlider("Jump Power", 50, 200, 50, function(value)
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.JumpPower = value
        end
    end)
    createToggle("No Clip", function(state)
        print("No Clip:", state)
    end)
    createToggle("Infinite Jump", function(state)
        print("Infinite Jump:", state)
    end)
    createToggle("God Mode", function(state)
        print("God Mode:", state)
    end)
end)

createTab("Visuals", function()
    createTextLabel("Visual Enhancements")
    createToggle("Full Bright", function(state)
        if state then
            game.Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            game.Lighting.Brightness = 2
        else
            game.Lighting.Ambient = Color3.fromRGB(0, 0, 0)
            game.Lighting.Brightness = 1
        end
    end)
    createSlider("FOV", 70, 120, 70, function(value)
        if workspace.CurrentCamera then
            workspace.CurrentCamera.FieldOfView = value
        end
    end)
    createDropdown("Sky Box", {"Default", "Night", "Space", "Sunset"}, function(selected)
        print("Sky Box:", selected)
    end)
    createToggle("Remove Fog", function(state)
        if state then
            game.Lighting.FogEnd = 100000
        else
            game.Lighting.FogEnd = 100
        end
    end)
end)

createTab("Scripts", function()
    createTextLabel("Script Execution")
    createTextBox("Script URL", "Enter script URL here...", function(url)
        print("Loading script from:", url)
    end)
    createTextBox("Custom Code", "Enter Lua code here...", function(code)
        print("Executing:", code)
    end)
    createToggle("Auto Execute", function(state)
        print("Auto Execute:", state)
    end)
    createDropdown("Preset Scripts", {"Infinite Yield", "Dark Dex", "Remote Spy", "Speed Hub"}, function(selected)
        print("Selected preset:", selected)
    end)
end)

createTab("Settings", function()
    createTextLabel("Hub Settings")
    createSlider("GUI Scale", 0.5, 2, 1, function(value)
        mainFrame.Size = UDim2.new(0, 600 * value, 0, 400 * value)
        mainFrame.Position = UDim2.new(0.5, -300 * value, 0.5, -200 * value)
    end)
    createToggle("Rainbow Mode", function(state)
        print("Rainbow Mode:", state)
    end)
    createDropdown("Theme", {"Default", "Dark", "Light", "Custom"}, function(selected)
        print("Theme:", selected)
    end)
    createTextBox("Key Bind", "Enter key...", function(key)
        print("Key bind set to:", key)
    end)
end)

-- Dragging functionality for main frame
titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragToggle = mainFrame
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = nil
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragToggle then
            updateInput(input)
        end
    end
end)

-- Dragging for ball opener
ballOpener.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragToggle = ballOpener
        dragStart = input.Position
        startPos = ballOpener.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = nil
            end
        end)
    end
end)

ballOpener.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragToggle then
            updateInput(input)
        end
    end
end)

-- Ball opener click functionality
ballButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = true
    -- Click first tab by default
    if tabs["Main"] then
        tabs["Main"].button.MouseButton1Click()
    end
end)

-- Minimize functionality
minimizeBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
end)

-- Close button functionality
closeBtn.MouseButton1Click:Connect(function()
    confirmFrame.Visible = true
end)

-- Confirmation buttons
yesBtn.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

noBtn.MouseButton1Click:Connect(function()
    confirmFrame.Visible = false
end)

-- Auto-resize scroll frame based on content
local function updateScrollSize()
    wait(0.1) -- Wait for layout to update
    local contentSize = contentLayout.AbsoluteContentSize
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, contentSize.Y + 20)
end

contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateScrollSize)

-- Initialize with first tab
if tabs["Main"] then
    tabs["Main"].button.MouseButton1Click()
end

-- Add rainbow effect for ball opener
spawn(function()
    while ballOpener.Parent do
        for i = 0, 1, 0.01 do
            if ballOpener.Parent then
                ballOpener.BackgroundColor3 = Color3.fromHSV(i, 1, 1)
            end
            wait(0.05)
        end
    end
end)

print("Fryzer Hub loaded successfully!")
